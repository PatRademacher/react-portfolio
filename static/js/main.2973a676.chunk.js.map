{"version":3,"sources":["components/resume_picpic.png","components/backgroundVideo.mp4","components/landingpage.js","components/sparty.png","components/aboutMe.js","components/belugaMedium.jpg","components/contact.js","components/sudokuVector.jpg","components/rademacher_ml_code1_writeup.pdf","components/aiMedium.jpg","components/machinelearningMedium.jpg","components/databasesMedium.jpg","components/internetMedium.jpg","components/puredataMedium.jpg","components/softwareengineeringMedium.jpg","components/functionalprogrammingMedium.png","components/frontendMedium.jpg","components/fractalMedium.jpg","components/algorithmsMedium.jpg","components/theorycompMedium.jpg","components/quantumMedium.jpg","components/opensourceMedium.jpg","components/numcompMedium.jpg","components/modelingMedium.jpg","components/projects.js","components/Rademacher_Patrick_Resume.pdf","components/resume.js","components/projectPages/ArtificialIntelligence/ArtificialIntelligenceMain.js","components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject0.js","components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject1.js","components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject2.js","components/projectPages/MachineLearning/MachineLearningMain.js","components/projectPages/MachineLearning/MachineLearningProject0.js","components/projectPages/MachineLearning/MachineLearningProject1.js","components/projectPages/MachineLearning/MachineLearningProject2.js","components/projectPages/Databases/DatabasesMain.js","components/projectPages/Databases/DatabasesProject0.js","components/projectPages/InternetworkingProtocols/InternetworkingProtocolsMain.js","components/projectPages/InternetworkingProtocols/InternetworkingProtocolsProject0.js","components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingMain.js","components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject0.js","components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject1.js","components/projectPages/SoftwareEngineering/SoftwareEngineeringMain.js","components/projectPages/SoftwareEngineering/SoftwareEngineeringProject0.js","components/projectPages/FunctionalProgramming/FunctionalProgrammingMain.js","components/projectPages/FunctionalProgramming/FunctionalProgrammingProject0.js","components/projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentMain.js","components/projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentProject0.js","components/projectPages/Fractals/FractalsMain.js","components/projectPages/Fractals/FractalsProject0.js","components/projectPages/OpenSource/OpenSourceMain.js","components/projectPages/OpenSource/OpenSourceProject0.js","components/projectPages/NumericalComputation/NumericalComputationMain.js","components/projectPages/NumericalComputation/NumericalComputationProject0.js","components/projectPages/NumericalComputation/NumericalComputationProject1.js","components/projectPages/NumericalComputation/NumericalComputationProject2.js","components/testingpage.js","components/main.js","App.js","registerServiceWorker.js","index.js"],"names":["LandingPage","props","reportWindowSize","console","log","state","windowWidth","pictureHeight","pictureWidth","setState","window","innerWidth","windowHeight","innerHeight","Math","round","counter","addEventListener","this","className","autoPlay","loop","muted","src","backgroundVid","type","Container","fluid","Row","Col","xs","pic","alt","style","width","height","href","target","rel","aria-hidden","Component","AboutMe","useState","offsetY","setOffsetY","handleScroll","pageYOffset","useEffect","removeEventListener","renderContent","zIndex","col","transform","marginTop","sparty","filter","Contact","name","email","message","e","preventDefault","axios","method","url","data","then","response","status","alert","resetForm","backgroundImage","beluga","backgroundSize","backgroundPosition","display","justifyContent","repeat","alignItems","padding","sm","opacity","icon","borderBottom","fontFamily","fontSize","textAlign","onSubmit","handleSubmit","bind","class","label","group","validate","error","success","rows","color","border","far","event","value","React","Projects","handleChange","show","handleChangeTop","newValue","topRow","middleTopRow","middleBottomRow","bottomRow","bottomBottomRow","tabValues","rowIndex","handleChangeMiddleTop","handleChangeMiddleBottom","handleChangeBottom","handleChangeBottomBottom","handleShowCard","rowIndy","numberOfItems","boolean","currentlyShowing","cards","i","push","pic0","shadow","margin","backgroundColor","onClick","background","animationName","animationDuration","animationTimingFunction","animationDelay","animationDirection","animationIterationCount","animationFillMode","animationPlayState","colored","minWidth","pic1","pic2","pic3","pic4","pic5","pic6","backgroundRepeat","pic7","pic8","classes","Tabs","indicatorColor","indicator","variant","onChange","ripple","Tab","toggleCategories","withStyles","theme","root","flexGrow","palette","paper","bottom","borderColor","outline","Resume","alignContent","position","file","samplePDF","pageNumber","pdfjs","GlobalWorkerOptions","workerSrc","version","ArtificialIntelligenceMain","yeahYeah","idk","changeShowing","tester","ArtificialIntelligenceProject0","ArtificialIntelligenceProject1","ArtificialIntelligenceProject2","MachineLearningMain","MachineLearningProject0","MachineLearningProject1","MachineLearningProject2","DatabasesMain","DatabasesProject0","InternetworkingProtocolsMain","InternetworkingProtocolsProject0","MusicAndDigitalSignalProcessingMain","MusicAndDigitalSignalProcessingProject0","MusicAndDigitalSignalProcessingProject1","SoftwareEngineeringMain","SoftwareEngineeringProject0","FunctionalProgrammingMain","FunctionalProgrammingProject0","FrontEndWebDevelopmentMain","FrontEndWebDevelopmentProject0","FractalsMain","FractalsProject0","OpenSourceMain","OpenSourceProject0","NumericalComputationMain","NumericalComputationProject0","NumericalComputationProject1","NumericalComputationProject2","TestingPage","setActiveTab","tabNumber","allTabs","Array","fill","currentBackground","backgrounds","currentPageIndex","currentHeader","headers","previousColState","colStates","rollDown","showDetails","num","showOrNo","showDetail","currentCloseUpIndex","settingIndex","setWiggle","index","currentHover","map","item","j","scrollToBottom","projectTabs","clientHeight","toString","displayProjects","scrollIntoView","behavior","top","createRef","pic9","pic10","pic11","pic12","pic13","pic14","wiggler","currentCloseUp","showingDetail","n","id","ref","pt","md","lg","onMouseEnter","onMouseLeave","dp","Main","exact","path","component","App","title","to","scroll","textDecoration","Boolean","location","hostname","match","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.2973a676.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/resume_picpic.72e50b07.png\";","export default __webpack_public_path__ + \"static/media/backgroundVideo.738a16af.mp4\";","import React, {Component} from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport pic from './resume_picpic.png';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport backgroundVid from './backgroundVideo.mp4';\nclass LandingPage extends Component {\n    constructor(props){\n        super(props);\n        this.state = { windowWidth: 0,//window.innerWidth, \n                       windowHeight: 0,//window.innerHeight,\n                       pictureWidth: Math.round((window.innerWidth/7.6)),\n                       pictureHeight: Math.round((window.innerHeight/3.3)),\n                       counter: 0};\n    }\n    reportWindowSize = () => {\n        console.log('WW: ' + this.state.windowWidth);\n        console.log('IH: ' + this.state.pictureHeight);\n        console.log('PW: ' + this.state.pictureWidth)\n        this.setState({windowWidth: window.innerWidth, windowHeight: window.innerHeight, pictureWidth: (Math.round((window.innerWidth/7.6))), pictureHeight: Math.round((window.innerHeight/2.8))})\n      }\n\n      \n\n      \n    render() {\n        window.addEventListener('resize', this.reportWindowSize);\n        \n\n        return(\n            <div className=\"landing-grid\">\n            <video className='videoTag' autoPlay loop muted>\n            <source src={backgroundVid} type='video/mp4' />\n            </video>\n                <div className=\"separator\"></div>\n                <Container fluid=\"md\" className=\"containers\">\n                    <Row>\n                        <Col />\n                        <Col xs = {6}>\n                            {(this.state.windowWidth === window.innerWidth) && (this.state.windowHeight === window.innerHeight) && (this.state.pictureHeight < 266) && (this.state.pictureWidth < 163) ? <img src={pic} className=\"avatar-img\" alt=\"avatar\" style={{width: this.state.pictureWidth, height: this.state.pictureHeight}} ></img> : <p>SORRY CHARLIE</p> }\n                        </Col>\n                        <Col />\n                    </Row>\n                    <Row>\n                        \n                            <Col />\n                            <Col className=\"banner-text\" xs={8} style={{height: this.state.pictureHeight}}>\n                                \n                                    <h1>PATRICK RADEMACHER: \n                                        <br></br>\n                                        Full Stack Web Developer\n                                    </h1>  \n                                    <hr />\n                                    <p>HTML/CSS | Bootstrap | Javascript | React | React Native | NodeJS | Express | MongoDB</p>\n                                    <div className=\"social-links\">\n\n                                {/*Github */}\n                                <a href=\"http://google.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <i className=\"fab fa-github-square\"></i>\n                                </a>\n                                {/*Linked In */}\n                                <a href=\"http://google.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <i className=\"fab fa-linkedin-square\"  aria-hidden=\"true\" />\n                                </a>\n\n                            </div>\n                            </Col>\n                            <Col />\n                            \n                        \n\n                    </Row>\n                    \n                </Container>\n                        \n                        \n                        \n                \n                    </div>\n                            \n\n                       \n                    \n        )\n    }\n}\n\nexport default LandingPage;","export default __webpack_public_path__ + \"static/media/sparty.32dae928.png\";","import React, { useState, useEffect } from \"react\";\nimport sparty from \"./sparty.png\";\nimport {Grid, Cell} from \"react-mdl\";\nimport backgroundVid from \"./backgroundVideo.mp4\";\nfunction AboutMe() {\n  const [offsetY, setOffsetY] = useState(0);\n  const handleScroll = () => setOffsetY(window.pageYOffset);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  \n\n  const renderContent = () => (\n    <>\n  \n      <div className=\"Parallax__content__heading\">\n        <h1 className=\"Parallax__content__heading__text\">Closure</h1>\n        <h2 className=\"Parallax__content__heading__caption\">\n          Your one-stop source of Web Development tricks\n        </h2>\n      </div>\n      <div className=\"Parallax__content__cta\">\n        <p>\n          <b>1. Like the video.</b> Because it helps me and my channel\n        </p>\n        <p>\n          <b>2. Like the video.</b> To see more content like that!\n        </p>\n        <p>\n          <b>3. Follow the Github link.</b> And play with this code yourself!\n        </p>\n      </div>\n    </>\n  );\n\n  return (\n      <div>\n      <video className='videoTag' style={{zIndex: '-4'}} autoPlay loop muted>\n            <source src={backgroundVid} type='video/mp4' />\n      </video>\n      <Grid >\n        <Cell col={12}>\n      <section className=\"Parallax\">\n      <div\n        className=\"Parallax__background-main\"\n        style={{ transform: `translateY(-${offsetY * 0.5}px)` }}\n        \n      />\n      \n      <div className=\"Parallax__content\">{renderContent()}</div>\n      </section>\n      </Cell>\n      </Grid>\n      <section className=\"Parallax\" style={{marginTop: '700px'}} />\n      <Grid >\n        <Cell col={12}>\n      <section className=\"Parallax\">\n      <div\n        className=\"Parallax__background-michiganstate\"\n        style={{ transform: `translateY(-${offsetY * 0.5}px)` }}\n        \n      />\n      <div className=\"Parallax__background-michiganstateSparty\">\n        <img className=\"Parallax__background-michiganstateSpartyRun\" src={sparty} style={{width: '10%'}} />\n      </div>\n      \n      <div className=\"Parallax__content\">{renderContent()}</div>\n      </section>\n      </Cell>\n      </Grid>\n      <section className=\"Parallax\" style={{marginTop: '1000px'}} />\n    <section className=\"Parallax\">\n      <div\n        className=\"Parallax__background-guitar\"\n        style={{ transform: `translateY(-${offsetY * 0.5}px)` }}\n        \n      />\n      <div\n        className=\"Parallax__background-guitar-notes\"\n        style={{ transform: `translateY(${offsetY * 0.8}px)`, filter: 'invert(87%) sepia(92%) saturate(987%) hue-rotate(81deg) brightness(97%) contrast(95%)' }}\n      />\n      <div className=\"Parallax__content\">{renderContent()}</div>\n      </section>\n      </div>  \n    \n    \n    \n  );\n}\n\nexport default AboutMe;\n","export default __webpack_public_path__ + \"static/media/belugaMedium.074833e4.jpg\";","import React from 'react';\nimport axios from 'axios';\nimport beluga from './belugaMedium.jpg';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput } from 'mdbreact';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport {List, ListItem, ListItemContent} from 'react-mdl';\nclass Contact extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      message: ''\n    }\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    axios({\n      method: \"POST\", \n      url:\"http://localhost:3002/send\", \n      data:  this.state\n    }).then((response)=>{\n      if (response.data.status === 'success') {\n        alert(\"Message Sent.\"); \n        this.resetForm()\n      } else if (response.data.status === 'fail') {\n        alert(\"Message failed to send.\")\n      }\n    })\n  }\n\n  resetForm(){\n    this.setState({name: null, email: null, message: null})\n  }\n  \n  render() {\n    return(\n      <div style={{backgroundImage: `url(${beluga})`, backgroundSize: 'cover', backgroundPosition: 'center center', display: 'flex', justifyContent:'center', height:'1122px', repeat: 'no-repeat', alignItems: 'center'}}>\n    <Row style={{width: '59%', padding: '8px'}}>\n      <Col className='contact-grid'  sm={4} style={{padding: '3px', opacity: '.4'}} >\n      <h3 icon='user' style={{borderBottom: 'dotted black 6px', fontFamily: \"'Fredoka One'\", fontSize: '1.77vw', textAlign: 'center'}}>Patrick Rademacher</h3>\n      \n      <List>\n      <ListItem>\n                                <ListItemContent style={{fontFamily: \"'Fredoka One'\", fontSize: '.801vw', textAlign: 'center'}}>\n                                  <Row style={{alignItems: 'baseline'}}>\n                                    <Col sm={1}>\n                                        <i className= \"fas fa-phone-alt fa-2x\" aria-hidden=\"true\"/>\n                                    </Col>\n                                    <Col sm={9}>         (616) 826-3296\n                                    </Col>\n                                    </Row>    \n                                    </ListItemContent>\n                                </ListItem>\n\n                                <ListItem>\n                                <ListItemContent style={{fontFamily: \"'Fredoka One'\", fontSize: '.801vw', textAlign: 'center'}}>\n                                  <Row style={{alignItems: 'baseline'}}>\n                                    <Col sm={1}>\n                                        <i className= \"fa fa-envelope fa-2x\" aria-hidden=\"true\"/>\n                                    </Col>\n                                    <Col sm={8}>          patrick.d.rad@gmail.com\n                                    </Col>\n                                    </Row>    \n                                    </ListItemContent>\n                                </ListItem>\n\n                                <ListItem>\n                                    <ListItemContent style={{fontSize: '25px', fontFamily: 'Anton'}} />\n                                </ListItem>\n                            </List>\n                            </Col>\n      <Col className='contact-grid' sm={8} style={{opacity: '.73'}}>\n    <MDBContainer>\n        <form onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n        <p>Contact Me: Use My Form</p>\n        <div>\n        <Row style={{display: 'flex', justifyContent: 'center'}}>\n            <Col sm = {10}>\n              \n                <Row style={{alignItems: 'baseline'}}>\n                  <Col sm={1}>\n                  <i class=\"fas fa-user fa-2x\"></i>                </Col>\n                <Col sm={1} />\n                <Col sm={10}>\n                <MDBInput label=\"Your name\" group type=\"text\" validate error=\"wrong\"\n            success=\"right\" />\n            </Col>\n            </Row>\n            </Col>\n            </Row>\n            <Row style={{display: 'flex', justifyContent: 'center'}}>\n            <Col sm = {10}>\n              \n                <Row style={{alignItems: 'baseline'}}>\n                  <Col sm={1}>\n                <i className=\"fa fa-envelope fa-2x\" style={{width: '100%'}} />\n                </Col>\n                <Col sm={1} />\n                <Col sm={10}>\n                <MDBInput label=\"Your email\" group type=\"text\" validate error=\"wrong\"\n            success=\"right\" />\n            </Col>\n            </Row>\n       \n            \n            </Col>\n            </Row>\n            <Row style={{display: 'flex', justifyContent: 'center'}}>\n            <Col sm = {10}>\n              \n                <Row style={{alignItems: 'baseline'}}>\n                  <Col sm={1}>\n                <i className=\"fa fa-pencil-alt fa-2x\" style={{width: '100%'}} />\n                </Col>\n                <Col sm={1} />\n                <Col sm={10}>\n                <MDBInput label=\"Your message\" group type=\"textarea\" rows=\"5\" validate error=\"wrong\"\n            success=\"right\" />\n            </Col>\n            </Row>\n       \n            \n            </Col>\n            </Row>\n        </div>\n        <div className=\"text-center\">\n          <MDBBtn style={{color: '#ab20fd', border: 'solid #ab20fd 1px'}}>\n            Send\n            <MDBIcon far icon=\"paper-plane\" className=\"ml-1\" style={{color: '#ab20fd'}} />\n          </MDBBtn>\n        </div>\n      </form>\n</MDBContainer>\n</Col>\n</Row>\n        </div>\n    );\n  }\n\n  onNameChange(event) {\n\t  this.setState({name: event.target.value})\n  }\n\n  onEmailChange(event) {\n\t  this.setState({email: event.target.value})\n  }\n\n  onMessageChange(event) {\n\t  this.setState({message: event.target.value})\n  }\n}\n\nexport default Contact;","export default __webpack_public_path__ + \"static/media/sudokuVector.f0426e13.jpg\";","export default __webpack_public_path__ + \"static/media/rademacher_ml_code1_writeup.23b67da1.pdf\";","export default __webpack_public_path__ + \"static/media/aiMedium.2037050d.jpg\";","export default __webpack_public_path__ + \"static/media/machinelearningMedium.4107f2c7.jpg\";","export default __webpack_public_path__ + \"static/media/databasesMedium.a48b4233.jpg\";","export default __webpack_public_path__ + \"static/media/internetMedium.e4d08e5b.jpg\";","export default __webpack_public_path__ + \"static/media/puredataMedium.e920864a.jpg\";","export default __webpack_public_path__ + \"static/media/softwareengineeringMedium.17f5e282.jpg\";","export default __webpack_public_path__ + \"static/media/functionalprogrammingMedium.9bdc4c34.png\";","export default __webpack_public_path__ + \"static/media/frontendMedium.9d3d9173.jpg\";","export default __webpack_public_path__ + \"static/media/fractalMedium.f99cf58e.jpg\";","export default __webpack_public_path__ + \"static/media/algorithmsMedium.d384a0aa.jpg\";","export default __webpack_public_path__ + \"static/media/theorycompMedium.c29156e9.jpg\";","export default __webpack_public_path__ + \"static/media/quantumMedium.7f9d1c49.jpg\";","export default __webpack_public_path__ + \"static/media/opensourceMedium.538291b4.jpg\";","export default __webpack_public_path__ + \"static/media/numcompMedium.38c49fe0.jpg\";","export default __webpack_public_path__ + \"static/media/modelingMedium.0922046b.jpg\";","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport Paper from '@material-ui/core/Paper';\n//import { Tabs } from '@material-ui/core';\n//import Tab from '@material-ui/core/Tab';\nimport teslaLogo from './Tesla-01.png';\nimport sudokuVector from './sudokuVector.jpg';\nimport MLProject1PDF from './rademacher_ml_code1_writeup.pdf';\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport pic0 from \"./aiMedium.jpg\";\nimport pic1 from \"./machinelearningMedium.jpg\";\nimport pic2 from \"./databasesMedium.jpg\";\nimport pic3 from \"./internetMedium.jpg\";\nimport pic4 from \"./puredataMedium.jpg\";\nimport pic5 from \"./softwareengineeringMedium.jpg\";\nimport pic6 from \"./functionalprogrammingMedium.png\";\nimport pic7 from \"./frontendMedium.jpg\";\nimport pic8 from \"./fractalMedium.jpg\";\nimport pic9 from \"./algorithmsMedium.jpg\";\nimport pic10 from \"./theorycompMedium.jpg\";\nimport pic11 from \"./quantumMedium.jpg\";\nimport pic12 from \"./opensourceMedium.jpg\";\nimport pic13 from \"./numcompMedium.jpg\";\nimport pic14 from \"./modelingMedium.jpg\";\n\n\n\n\n\nlet TabContainer = (props) => {\nreturn (\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n      {props.children}\n    </Typography>\n  );\n}\n\n\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  label: {\n    color: \"magenta\"\n  },\n  indicator: {\n    bottom: \"none\",\n    backgroundColor: \"none !important\",\n    color: \"none !important\",\n    borderColor: 'none',\n    outline: 'none !important',\n    opacity: '1'\n  }\n});\n\nclass Projects extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = { value: null,\n                       rowIndex: 0, \n                       topRow: \"primary\", \n                       bottomRow: \"none\", \n                       middleTopRow: \"none\", \n                       middleBottomRow: \"none\", \n                       bottomBottomRow: \"none\",\n                       tabValues: [1, 1, 1, 1, 1],\n                       show: [false, false, false],\n                       currentlyShowing: false};\n    }\n\n    \n\n\n    handleChange = (event, value) => {\n        //this.setState({value: value });\n        console.log('hot dogs')\n        console.log(this.state.show)\n\n      };\n\n    handleChangeTop = (event, newValue) => {\n       this.setState({value: newValue});\n       this.setState({topRow: \"primary\", \n                      middleTopRow: \"none\", \n                      middleBottomRow: \"none\", \n                      bottomRow: \"none\", \n                      bottomBottomRow: \"none\",\n                      show: [false, false, false],\n                     // currentlyShowing: false,\n                      tabValues: [newValue, null, null, null, null],\n                      //rowIndex: \"0\"\n                      });\n        console.log(this.state.topRow);\n        console.log(this.state.middleTopRow);\n        console.log(this.state.middleBottomRow);\n        console.log(this.state.bottomRow);\n        console.log(this.state.bottomBottomRow);\n        console.log(this.state.tabValues)\n        console.log(this.state.show)\n        console.log(this.state.rowIndex)\n    }\n\n    handleChangeMiddleTop = (event, newValue) => {\n        this.setState({value: newValue});\n        this.setState({middleTopRow: \"primary\", \n                       middleBottomRow: \"none\", \n                       topRow: \"none\", \n                       bottomRow: \"none\", \n                       bottomBottomRow: \"none\",\n                       //show: [false, false, false],\n                       //currentlyShowing: false,\n                       tabValues: [null, newValue, null, null, null]\n                    });\n                    console.log(this.state.topRow);\n                    console.log(this.state.middleTopRow);\n                    console.log(this.state.middleBottomRow);\n                    console.log(this.state.bottomRow);\n                    console.log(this.state.bottomBottomRow);\n                    console.log(this.state.tabValues)\n                    console.log(this.state.show)\n                    console.log(this.state.rowIndex)\n    }\n\n    handleChangeMiddleBottom = (event, newValue) => {\n        this.setState({value: newValue});\n        this.setState({middleBottomRow: \"primary\", \n                       middleTopRow: \"none\", \n                       topRow: \"none\", \n                       bottomRow: \"none\", \n                       bottomBottomRow: \"none\",\n                       //show: [false, false, false],\n                       //currentlyShowing: false,\n                       tabValues: [null, null, newValue, null, null],\n                       rowIndex: 0\n                    });\n                    console.log(this.state.topRow);\n                    console.log(this.state.middleTopRow);\n                    console.log(this.state.middleBottomRow);\n                    console.log(this.state.bottomRow);\n                    console.log(this.state.bottomBottomRow);\n                    console.log(this.state.tabValues);\n                    console.log(this.state.show)\n                    console.log(this.state.rowIndex)\n    }\n\n    handleChangeBottom = (event, newValue) => {\n        this.setState({value: newValue});\n        this.setState({bottomRow: \"primary\", \n                       topRow: \"none\", \n                       middleTopRow: \"none\", \n                       middleBottomRow: \"none\", \n                       bottomBottomRow: \"none\",\n                       //show: [false, false, false],\n                       //currentlyShowing: false,\n                       tabValues: [null, null, null, newValue, null],\n                       rowIndex: \"0\"\n                    });\n                    console.log(this.state.topRow);\n                    console.log(this.state.middleTopRow);\n                    console.log(this.state.middleBottomRow);\n                    console.log(this.state.bottomRow);\n                    console.log(this.state.bottomBottomRow);\n                    console.log(this.state.tabValues) \n                    console.log(this.state.show)\n        console.log(this.state.rowIndex)                  \n    }\n\n    handleChangeBottomBottom = (event, newValue) => {\n        this.setState({value: newValue});\n        this.setState({bottomBottomRow: \"primary\", \n                       topRow: \"none\", \n                       middleTopRow: \"none\", \n                       middleBottomRow: \"none\", \n                       bottomRow: \"none\",\n                       //show: [false, false, false],\n                       //currentlyShowing: false,\n                       tabValues: [null, null, null, null, newValue],\n                       rowIndex: \"0\"\n                    });\n                    console.log(this.state.topRow);\n                    console.log(this.state.middleTopRow);\n                    console.log(this.state.middleBottomRow);\n                    console.log(this.state.bottomRow);\n                    console.log(this.state.bottomBottomRow);\n                    console.log(this.state.tabValues);\n                    console.log(this.state.show)\n                    console.log(this.state.rowIndex)\n    }\n    \n    handleShowCard = (event, rowIndy, numberOfItems) => {\n        let boolean = null;\n        if (this.state.currentlyShowing !== true){\n            boolean = true;\n            let cards = [];\n            for (let i = 0; i < numberOfItems; i++){\n                if (i === rowIndy){\n                    cards.push(true);\n                }\n                else{\n                    cards.push(false);\n                }\n            }\n        \n            this.setState({show: {...cards}});\n            this.setState({rowIndex: rowIndy});\n        }\n        else{\n            boolean = false;\n            let cards = [];\n            for (let i = 0; i < numberOfItems; i++){\n                cards.push(false);\n            }\n            this.setState({show: {...cards}, rowIndex: rowIndy})\n        }\n\n        this.setState({currentlyShowing: boolean})\n        console.log(this.state.currentlyShowing);\n    }\n\n    toggleCategories(){\n        if (this.state.value === 0 && this.state.topRow === \"primary\" && (this.state.rowIndex === 0)){\n            let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic0})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Puzzle Solver Using a*</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Queens Solver Using Genetic Algorithm</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Euphonomimesis</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Puzzle Solver Using a*</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n                </div>\n            )\n        }\n\n        else if(this.state.value === 0 && this.state.topRow === \"primary\" && this.state.rowIndex === 1){\n            let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic0})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: 'infinite', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Puzzle Solver Using a*</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Queens Solver Using Genetic Algorithm</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Euphonomimesis</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>\n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Queens Solver Using Genetic Algorithm</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n                </div>\n            )\n        }\n\n        else if (this.state.value === 0 && this.state.topRow === \"primary\" && this.state.rowIndex === 2){\n            let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic0})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Puzzle Solver Using a*</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Queens Solver Using Genetic Algorithm</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                 <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Euphonomimesis</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Euphonomimesis</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 1 && this.state.topRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic1})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>MNIST Handwritten Data Recognition</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>MNIST Handwritten Digit Recognition</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 1 && this.state.topRow === \"primary\" && this.state.rowIndex === 1){\n        let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic1})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>MNIST Handwritten Data Recognition</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 1 && this.state.topRow === \"primary\" && this.state.rowIndex === 2){\n        let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic1})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>MNIST Handwritten Data Recognition</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 2 && this.state.topRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic2})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n\n    \n    else if(this.state.value === 0 && this.state.middleTopRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic3})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PAT CHAT</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PAT CHAT</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 1 && this.state.middleTopRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 2;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic4})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={2} />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pedal Pi</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pure Data Synthesizer</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                                <div className=\"separator\" />\n                                <Cell col={2} />\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pedal Pi</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n    else if(this.state.value === 1 && this.state.middleTopRow === \"primary\" && this.state.rowIndex === 1){\n        let numOfItems = 2;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic4})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={2} />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pedal Pi</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pure Data Synthesizer</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                                <div className=\"separator\" />\n                                <Cell col={2} />\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pure Data Synthesizer</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 2 && this.state.middleTopRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic5})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Battlecode</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Battle Code</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    } \n\n    else if(this.state.value === 0 && this.state.middleBottomRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic6})`, height:'1500px', backgroundRepeat: 'no-repeat', backgroundPosition: 'center center'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Sudoku Solver</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Sudoku Solver</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n            \n    else if(this.state.value === 1 && this.state.middleBottomRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic7})`, height:'1500px', backgroundRepeat: 'no-repeat', backgroundPosition: 'center center'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Batter on Deck</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Batter on Deck</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }                    \n    \n    else if(this.state.value === 2 && this.state.middleBottomRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic8})`, height:'1500px', backgroundRepeat: 'no-repeat', backgroundPosition: 'center center'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Batter on Deck</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Batter on Deck</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n                        }\n                        \n                                \n                            \n                           \n                        \n\n\n    render() {\n          const { classes } = this.props;\n          const { value } = this.state;\n        return(\n            \n            <div style={{backgroundColor: '#eee'}} >\n                \n                <Tabs  indicatorColor={this.state.topRow} classes={{indicator: classes.indicator}} variant=\"fullWidth\" value={this.state.tabValues[0]} onChange={this.handleChangeTop} ripple>\n                    <Tab className=\"tabz\" label=\"Artificial Intelligence\"></Tab>\n                    <Tab className=\"tabz\" label=\"Machine Learning\"></Tab>\n                    <Tab className=\"tabz\" label=\"Databases\"></Tab>\n                </Tabs>\n               \n                \n                <Tabs variant=\"fullWidth\" indicatorColor={this.state.middleTopRow} classes={{indicator: classes.indicator}} value={this.state.tabValues[1]} onChange={this.handleChangeMiddleTop} ripple>\n                    <Tab className=\"tabz\" label=\"Internetworking Protocols\"></Tab>\n                    <Tab className=\"tabz\" label=\"Music and Digital Signal Processing\"></Tab>\n                    <Tab className=\"tabz\" label=\"Software Engineering\"></Tab>\n                </Tabs>\n\n                <Tabs variant=\"fullWidth\" indicatorColor={this.state.middleBottomRow} classes={{indicator: classes.indicator}} value={this.state.tabValues[2]} onChange={this.handleChangeMiddleBottom} ripple>\n                    <Tab className=\"tabz\" label=\"Functional Programming\"></Tab>\n                    <Tab className=\"tabz\" label=\"Front-End Web Development\"></Tab>\n                    <Tab className=\"tabz\" label=\"Fractals\"></Tab>\n                </Tabs>\n\n                <Tabs variant=\"fullWidth\" indicatorColor={this.state.bottomRow} classes={{indicator: classes.indicator}} value={this.state.tabValues[3]} onChange={this.handleChangeBottom} ripple>\n                    <Tab className=\"tabz\" label=\"Algorithms\"></Tab>\n                    <Tab className=\"tabz\" label=\"Theory of Computation\"></Tab>\n                    <Tab className=\"tabz\" label=\"Quantum Computing\"></Tab>\n                </Tabs>\n\n                <Tabs variant=\"fullWidth\" indicatorColor={this.state.bottomBottomRow} classes={{indicator: classes.label}} value={this.state.tabValues[4]} onChange={this.handleChangeBottomBottom} ripple>\n                    <Tab className=\"tabz\" label=\"Open Source\"></Tab>\n                    <Tab className=\"tabz\" label=\"Numerical Computation\" ></Tab>\n                    <Tab className=\"tabz\" label=\"Modeling and Simulation in Python\" ></Tab>\n                </Tabs>\n\n                <Grid className=\"projects-grid\">\n                    <Cell col={12}>\n                        <div className=\"content\">{this.toggleCategories()}</div>\n                    </Cell>\n                </Grid>\n            </div>\n\n        )\n    }\n}\n\nProjects.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n\nexport default withStyles(styles)(Projects);\n","export default __webpack_public_path__ + \"static/media/Rademacher_Patrick_Resume.e4ddf841.pdf\";","import React from 'react';\nimport samplePDF from './Rademacher_Patrick_Resume.pdf';\nimport backgroundVid from './backgroundVideo.mp4'\nimport { Document, Page, pdfjs } from \"react-pdf\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nexport default function Resume() {\n  return (\n    <div style={{display: 'flex', justifyContent: 'center', alignContent: 'flex-end', position: 'relative', height: '90%'}}>\n    <video className='videoTagResume' autoPlay loop muted>\n    <source src={backgroundVid} type='video/mp4' />\n    </video>\n    <div className='separator' />\n    <Document className=\"resume-center\" file={samplePDF}>\n      <Page  pageNumber={1} />\n    </Document>\n    \n    </div>\n  );\n}","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport Paper from '@material-ui/core/Paper';\n//import { Tabs } from '@material-ui/core';\n//import Tab from '@material-ui/core/Tab';\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\n\nclass ArtificialIntelligenceMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    yeahYeah = () => {\n        this.setState({idk: 'yea yea yea'})\n    }\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{width: '80%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4', opacity: '.5'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>{this.props.tester}</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(1)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Queens Solver Using Genetic Algorithm</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(2)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Euphonomimesis</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card>\n                                </Cell>\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default ArtificialIntelligenceMain;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass ArtificialIntelligenceProject0 extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>{this.props.tester}</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default ArtificialIntelligenceProject0;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass ArtificialIntelligenceProject1 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Fart</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default ArtificialIntelligenceProject1;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass ArtificialIntelligenceProject2 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>BABY</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default ArtificialIntelligenceProject2;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MachineLearningMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    yeahYeah = () => {\n        this.setState({idk: 'yea yea yea'})\n    }\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>look</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(1)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>little</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(2)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>lad</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card>\n                                </Cell>\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default MachineLearningMain;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MachineLearningProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>loook</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default MachineLearningProject0;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MachineLearningProject1 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>little</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default MachineLearningProject1;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MachineLearningProject2 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>laddy</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default MachineLearningProject2;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass DatabasesMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    yeahYeah = () => {\n        this.setState({idk: 'yea yea yea'})\n    }\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={4} /> \n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>wowsers</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default DatabasesMain;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass DatabasesProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>wowowowo</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default DatabasesProject0;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass InternetworkingProtocolsMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={4} /> \n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PAT CHAT</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default InternetworkingProtocolsMain;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass InternetworkingProtocolsProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PAT CHAT</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default InternetworkingProtocolsProject0;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MusicAndDigitalSignalProcessingMain extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={2} /> \n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PEDAL PI</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(1)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PURE DATA</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={2} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default MusicAndDigitalSignalProcessingMain;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MusicAndDigitalSignalProcessingProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PEDAL PI</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default MusicAndDigitalSignalProcessingProject0;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MusicAndDigitalSignalProcessingProject1 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PURE DATA</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default MusicAndDigitalSignalProcessingProject1;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass SoftwareEngineeringMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={4} /> \n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>BATTLE CODE</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default SoftwareEngineeringMain;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass SoftwareEngineeringProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>BATTLE CODE</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default SoftwareEngineeringProject0;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass FunctionalProgrammingMain extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={4} /> \n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>SUDOKU SOLVER</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default FunctionalProgrammingMain;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass FunctionalProgrammingProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>BATTER ON DECK</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default FunctionalProgrammingProject0;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass FrontEndWebDevelopmentMain extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={4} /> \n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>SUDOKU SOLVER</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default FrontEndWebDevelopmentMain;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass FrontEndWebDevelopmentProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>BATTER ON DECK</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default FrontEndWebDevelopmentProject0;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass FractalsMain extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={4} /> \n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>SUDOKU SOLVER</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default FractalsMain;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass FractalsProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>FRACTALS</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default FractalsProject0;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass OpenSourceMain extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={4} /> \n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>UNCLE BUCK</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default OpenSourceMain;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass OpenSourceProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>UNCLE BUCK</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default OpenSourceProject0;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport Paper from '@material-ui/core/Paper';\n//import { Tabs } from '@material-ui/core';\n//import Tab from '@material-ui/core/Tab';\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\n\nclass NumericalComputationMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    yeahYeah = () => {\n        this.setState({idk: 'yea yea yea'})\n    }\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>newton</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(1)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>B Spline</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(2)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Cubic</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card>\n                                </Cell>\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default NumericalComputationMain;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass NumericalComputationProject0 extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>newtons</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default NumericalComputationProject0;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass NumericalComputationProject1 extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>b spline</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default NumericalComputationProject1;","import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass NumericalComputationProject2 extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>cubic or something</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default NumericalComputationProject2;","import React, {Component} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport pic0 from \"./aiMedium.jpg\";\nimport pic1 from \"./machinelearningMedium.jpg\";\nimport pic2 from \"./databasesMedium.jpg\";\nimport pic3 from \"./internetMedium.jpg\";\nimport pic4 from \"./puredataMedium.jpg\";\nimport pic5 from \"./softwareengineeringMedium.jpg\";\nimport pic6 from \"./functionalprogrammingMedium.png\";\nimport pic7 from \"./frontendMedium.jpg\";\nimport pic8 from \"./fractalMedium.jpg\";\nimport pic12 from \"./algorithmsMedium.jpg\";\nimport pic13 from \"./theorycompMedium.jpg\";\nimport pic14 from \"./quantumMedium.jpg\";\nimport pic9 from \"./opensourceMedium.jpg\";\nimport pic10 from \"./numcompMedium.jpg\";\nimport pic11 from \"./modelingMedium.jpg\";\n\nimport ArtificalIntelligenceMain from \"./projectPages/ArtificialIntelligence/ArtificialIntelligenceMain\";\nimport ArtificialIntelligenceProject0 from \"./projectPages/ArtificialIntelligence/ArtificialIntelligenceProject0\";\nimport ArtificialIntelligenceProject1 from \"./projectPages/ArtificialIntelligence/ArtificialIntelligenceProject1\";\nimport ArtificialIntelligenceProject2 from \"./projectPages/ArtificialIntelligence/ArtificialIntelligenceProject2\";\nimport MachineLearningMain from \"./projectPages/MachineLearning/MachineLearningMain\";\nimport MachineLearningProject0 from \"./projectPages/MachineLearning/MachineLearningProject0\";\nimport MachineLearningProject1 from \"./projectPages/MachineLearning/MachineLearningProject1\";\nimport MachineLearningProject2 from \"./projectPages/MachineLearning/MachineLearningProject2\";\nimport DatabasesMain from \"./projectPages/Databases/DatabasesMain\";\nimport DatabasesProject0 from \"./projectPages/Databases/DatabasesProject0\";\nimport InternetworkingProtocolsMain from \"./projectPages/InternetworkingProtocols/InternetworkingProtocolsMain\";\nimport InternetworkingProtocolsProject0 from \"./projectPages/InternetworkingProtocols/InternetworkingProtocolsProject0\";\nimport MusicAndDigitalSignalProcessingMain from \"./projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingMain\";\nimport MusicAndDigitalSignalProcessingProject0 from \"./projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject0\";\nimport MusicAndDigitalSignalProcessingProject1 from \"./projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject1\";\nimport SoftwareEngineeringMain from \"./projectPages/SoftwareEngineering/SoftwareEngineeringMain\";\nimport SoftwareEngineeringProject0 from \"./projectPages/SoftwareEngineering/SoftwareEngineeringProject0\";\nimport FunctionalProgrammingMain from \"./projectPages/FunctionalProgramming/FunctionalProgrammingMain\";\nimport FunctionalProgrammingProject0 from \"./projectPages/FunctionalProgramming/FunctionalProgrammingProject0\";\nimport FrontEndWebDevelopmentMain from \"./projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentMain\";\nimport FrontEndWebDevelopmentProject0 from \"./projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentProject0\";\nimport FractalsMain from \"./projectPages/Fractals/FractalsMain\";\nimport FractalsProject0 from \"./projectPages/Fractals/FractalsProject0\";\nimport OpenSourceMain from \"./projectPages/OpenSource/OpenSourceMain\";\nimport OpenSourceProject0 from \"./projectPages/OpenSource/OpenSourceProject0\";\nimport NumericalComputationMain from \"./projectPages/NumericalComputation/NumericalComputationMain\";\nimport NumericalComputationProject0 from \"./projectPages/NumericalComputation/NumericalComputationProject0\";\nimport NumericalComputationProject1 from \"./projectPages/NumericalComputation/NumericalComputationProject1\";\nimport NumericalComputationProject2 from \"./projectPages/NumericalComputation/NumericalComputationProject2\";\nimport {Navigation} from 'react-mdl';\n\n\nclass TestingPage extends Component{\n\n    \n    constructor(props){\n        super(props);\n        this.projectTabs = React.createRef();\n        this.displayProjects = React.createRef();\n        this.state={\n            colStates: [\"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\"],\n            backgrounds: [pic0, pic1, pic2, pic3, pic4, pic5, pic6, pic7, pic8, pic9, pic10, pic11, pic12, pic13, pic14],\n            previousColState: null,\n            currentBackground: pic0,\n            showDetail: false,\n            tester: '3',\n            wiggler: Array(15).fill('20px'),\n            currentCloseUp: [\n                                <ArtificalIntelligenceMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<ArtificialIntelligenceProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                    <ArtificialIntelligenceProject1 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                    <ArtificialIntelligenceProject2 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>\n                                    ],\n                                <MachineLearningMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<MachineLearningProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                    <MachineLearningProject1 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                    <MachineLearningProject2 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>\n                                    ],\n                                <DatabasesMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<DatabasesProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <InternetworkingProtocolsMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<InternetworkingProtocolsProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <MusicAndDigitalSignalProcessingMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [\n                                        <MusicAndDigitalSignalProcessingProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                        <MusicAndDigitalSignalProcessingProject1 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>\n                                    ],\n                                <SoftwareEngineeringMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<SoftwareEngineeringProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <FunctionalProgrammingMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<FunctionalProgrammingProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <FrontEndWebDevelopmentMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<FrontEndWebDevelopmentProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <FractalsMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<FractalsProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <OpenSourceMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<OpenSourceProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <NumericalComputationMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<NumericalComputationProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                    <NumericalComputationProject1 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                    <NumericalComputationProject2 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>\n                                    ],        \n                                ],\n                                   \n            currentCloseUpIndex: -1,\n            currentHover: -1,\n            currentPageIndex: -1,\n            currentHeader: 'PROJECTS',\n            rollDown: false,\n            headers: ['ARTIFICIAL INTELLIGENCE', 'MACHINE LEARNING', 'DATABASES', 'INTERNETWORKING PROTOCOLS', 'MUSIC AND DIGITAL SIGNAL PROCESSING', 'SOFTWARE ENGINEERING', 'FUNCTIONAL PROGRAMMING', 'FRONT-END WEB DEVELOPMENT', 'FRACTALS', 'OPEN SOURCE', 'NUMERICAL COMPUTATION', 'MODELING AND SIMULATION IN PYTHON', 'ALGORITHMS', 'THEORY OF COMPUTATION', 'QUANTUM COMPUTING', 'PROJECTS']                       \n        }\n    }\n\n    setActiveTab = (tabNumber) => {\n\n        let allTabs = Array(15).fill('nonactiveCols');\n        allTabs[tabNumber] = 'activeCol';\n        console.log('allTabs: ' + allTabs);\n        //this.state.colStates[tabNumber] = \"activeCol\";\n        this.setState({currentBackground: this.state.backgrounds[tabNumber], currentPageIndex: (tabNumber * 2), currentHeader: this.state.headers[tabNumber]});\n        if(this.state.previousColState === null){\n            this.setState({previousColState: tabNumber})\n        }\n\n        if (tabNumber !== this.state.previousColState){\n            this.setState({colStates: allTabs})\n            this.setState({previousColState: tabNumber});\n        }\n        \n        this.setState({rollDown: true});\n        //this.scrollToBottom();\n\n        \n        \n\n    }\n\n\n    showDetails = (num) => {\n        let showOrNo = this.state.showDetail;\n        this.setState({tester: num, showDetail: !showOrNo, currentCloseUpIndex: num});\n        console.log('showdetail: ' + this.state.showDetail);\n        console.log('currentCloseUpIndex: ' + this.state.currentCloseUpIndex);\n        console.log('tester: ' + this.state.tester);\n    }\n\n    settingIndex = (num) => {\n        this.setState({currentCloseUpIndex: num})\n        console.log('Setting Index: ' + this.state.currentCloseUpIndex);\n    }\n\n    setWiggle = (index, value) => {\n        if (this.state.currentHover === -1){\n            this.setState({currentHover: index})\n        }\n        else if (this.state.currentHover === index && this.state.colStates[index] === 'activeCol'){\n            value = 'activeCol';\n        }\n        this.setState({currentHover: index});\n\n        if (this.state.colStates[index] !== \"activeCol\"){\n        this.setState(() => {\n          const colStates = this.state.colStates.map((item, j) => {\n            if (j === index) {\n                this.setState({currentHover: index});\n\n              return value;\n            } \n            else {\n                if (item === 'nonactiveColsHover'){\n                    item = 'nonactiveCols';\n                }\n              return item;\n            }\n          });\n     \n          return {\n            colStates,\n          };\n        })}\n        console.log(this.state.colStates);\n\n    };\n\n    componentDidMount() {\n        \n        this.scrollToBottom();\n\n    }\n\n    componentDidUpdate(){\n        \n        this.scrollToBottom();\n\n    }\n\n      scrollToBottom = () => {\n        if (this.state.rollDown === true){\n          console.log((window.innerHeight + (this.projectTabs.clientHeight * 5)).toString() + 'px');\n          console.log(this.displayProjects);\n        this.displayProjects.scrollIntoView({ behavior: 'smooth', top: '0' });\n        this.setState({rollDown: false});}\n      \n    }\n\n    render(){\n        return (\n            <div style={{width: '100%', height: (window.innerHeight + (this.projectTabs.clientHeight * 3)).toString() + 'px', backgroundImage: `url(${this.state.currentBackground})`, backgroundRepeat: 'repeat', backgroundSize: 'cover',\n  \n  position: 'static'\n  }}>\n               <div id='projectTabs' ref={pt => {this.projectTabs = pt}}>\n                    <Row style={{position: 'static', width: '100%'}}>\n                        <Col className={this.state.colStates[0]}  xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(0)} onMouseEnter={() => this.setWiggle(0, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(0, 'nonactiveCols')}>\n                            <p className=\"wiggles\">ARTIFICIAL INTELLIGENCE</p>\n                        </Col>\n                        <Col className={this.state.colStates[1]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(1)} onMouseEnter={() => this.setWiggle(1, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(1, 'nonactiveCols')}>\n                            <p className=\"wiggles\">MACHINE LEARNING</p>\n                        </Col>\n                        <Col className={this.state.colStates[2]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(2)} onMouseEnter={() => this.setWiggle(2, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(2, 'nonactiveCols')}>\n                            <p className=\"wiggles\">DATABASES</p>\n                        </Col>\n                    </Row>\n                    <Row style={{position: 'static', width: '100%'}}>\n                        <Col className={this.state.colStates[3]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(3)} onMouseEnter={() => this.setWiggle(3, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(3, 'nonactiveCols')}>\n                            <p className=\"wiggles\">INTERNETWORKING PROTOCOLS</p>\n                        </Col>\n                        <Col className={this.state.colStates[4]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(4)} onMouseEnter={() => this.setWiggle(4, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(4, 'nonactiveCols')}>\n                            <p className=\"wiggles\" >MUSIC AND DIGITAL SIGNAL PROCESSING</p>\n                        </Col>\n                        <Col className={this.state.colStates[5]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(5)} onMouseEnter={() => this.setWiggle(5, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(5, 'nonactiveCols')}>\n                            <p className=\"wiggles\">SOFTWARE ENGINEERING</p>\n                        </Col>\n                    </Row>\n                    <Row style={{position: 'static', width: '100%'}}>\n                        <Col className={this.state.colStates[6]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(6)} onMouseEnter={() => this.setWiggle(6, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(6, 'nonactiveCols')}>\n                            <p className=\"wiggles\">FUNCTIONAL PROGRAMMING</p>\n                        </Col>\n                        <Col className={this.state.colStates[7]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(7)} onMouseEnter={() => this.setWiggle(7, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(7, 'nonactiveCols')}>\n                            <p className=\"wiggles\">FRONT-END WEB DEVELOPMENT</p>\n                        </Col>\n                        <Col className={this.state.colStates[8]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(8)} onMouseEnter={() => this.setWiggle(8, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(8, 'nonactiveCols')}>\n                            <p className=\"wiggles\">FRACTALS</p>\n                        </Col>\n                    </Row>\n                    <Row style={{position: 'static', width: '100%'}}>\n                        <Col className={this.state.colStates[9]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(9)} onMouseEnter={() => this.setWiggle(9, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(9, 'nonactiveCols')}>\n                            <p className=\"wiggles\">OPEN SOURCE</p>\n                        </Col>\n                        <Col className={this.state.colStates[10]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(10)} onMouseEnter={() => this.setWiggle(10, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(10, 'nonactiveCols')}>\n                            \n                            <p className=\"wiggles\">NUMERICAL COMPUTATION</p>\n                        </Col>\n                        <Col className={this.state.colStates[11]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(11)} onMouseEnter={() => this.setWiggle(11, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(11, 'nonactiveCols')}>\n                            <p className=\"wiggles\" >MODELING AND SIMULATION IN PYTHON</p>\n                        </Col>\n                    </Row>\n                    <Row style={{position: 'static', width: '100%'}}>\n                        <Col className={this.state.colStates[12]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(12)} onMouseEnter={() => this.setWiggle(12, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(12, 'nonactiveCols')}>\n                            <p className=\"wiggles\" >ALGORITHMS</p>\n                        </Col>\n                        <Col className={this.state.colStates[13]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(13)} onMouseEnter={() => this.setWiggle(13, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(13, 'nonactiveCols')}>\n                            <p className=\"wiggles\">THEORY OF COMPUTATION</p>\n                        </Col>\n                        <Col className={this.state.colStates[14]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(14)} onMouseEnter={() => this.setWiggle(14, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(14, 'nonactiveCols')}>\n                            <p className=\"wiggles\">QUANTUM COMPUTING</p>\n                        </Col>\n                      \n                    </Row>\n                </div>\n                <div style={{marginTop: this.projectTabs.clientHeight/4.0}} />\n                            <h1 className = 'projectsPageHeader' ref={dp => { this.displayProjects = dp; }} style={{backgroundColor: 'black', opacity: '.72', marginTop: this.projectTabs.clientHeight/4.0}}>{this.state.currentHeader}</h1>\n                  \n                    {!this.state.showDetail ?\n                        this.state.currentCloseUp[this.state.currentPageIndex]\n                    :\n                    this.state.currentCloseUp[this.state.currentPageIndex + 1][this.state.currentCloseUpIndex]\n                }\n                       \n                       <div style={{marginTop: this.projectTabs.clientHeight * .75}} />\n\n            </div>\n        )\n    }\n}\n\nexport default TestingPage;","import React from 'react';\nimport LandingPage from './landingpage';\nimport AboutMe from './aboutMe';\nimport Contact from './contact';\nimport Projects from './projects';\nimport Resume from './resume';\nimport TestingPage from './testingpage';\nimport { Switch, Route } from 'react-router-dom';\n\n\nconst Main = () => (\n        <Switch>\n            <Route exact path=\"/\" component ={LandingPage} />\n            <Route path=\"/aboutme\" component={AboutMe} />\n            <Route path=\"/resume\" component={Resume} />\n            <Route path=\"/projects\" component={Projects} />\n            <Route path=\"/contact\" component={Contact} />\n            <Route path=\"/testingpage\" component = {TestingPage} />\n        </Switch>\n)\n\nexport default Main;","import React, { Component } from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\nimport Main from './components/main.js';\nimport { Link } from 'react-router-dom';\n//import { faGasPump, faHome } from \"@fortawesome/free-solid-svg-icons\";\n//import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nclass App extends Component {\n\n    render() {\n        return (\n            <div className=\"demo-big-content\" >\n                <Layout style={{top: '0', height: '900px'}}>\n                    <Header className=\"header-color\" title={<Link style={{color: 'white', height: '900px'}} to=\"/\">My Portfolio</Link>} scroll>\n                        <Navigation>\n                            <Link to=\"/resume\">Resume</Link>\n                            <Link to=\"/aboutme\">About Me</Link>\n                            <Link to=\"/projects\">Projects</Link>\n                            <Link to=\"/contact\">Contact</Link>\n                            <Link to =\"/testingpage\">Testing Page</Link>\n                        </Navigation>\n                    </Header>\n                    <Drawer title={<Link style={{textDecoration: 'none', color: 'black', }} to=\"/\">My Portfolio</Link>} scroll>\n                        <Navigation>\n                            <Link to=\"/resume\">Resume</Link>\n                            <Link to=\"/aboutme\">About Me</Link>\n                            <Link to=\"/projects\">Projects</Link>\n                            <Link to=\"/contact\">Contact</Link>\n                            <Link to =\"/testingpage\">Testing Page</Link>\n                        </Navigation>\n                    </Drawer>\n                \n                <div className=\"page-content\"  />\n                <Main /> \n                </Layout>\n\n            </div>\n        );\n    //return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'I believe in Hua Mulan'), React.createElement('p', null, '...as do I...'), React.createElement('person', null, null));\n    }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <App />\n        </BrowserRouter>\n   , \n    document.getElementById('root'));\n"],"sourceRoot":""}