[{"/Users/patrickrademacher/REACT/react-portfolio/src/App.js":"1","/Users/patrickrademacher/REACT/react-portfolio/src/components/contact.js":"2","/Users/patrickrademacher/REACT/react-portfolio/src/components/aboutMe.js":"3","/Users/patrickrademacher/REACT/react-portfolio/src/components/landingpage.js":"4","/Users/patrickrademacher/REACT/react-portfolio/src/components/testingpage.js":"5","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningProject0.js":"6","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningProject1.js":"7","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationProject1.js":"8","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationProject0.js":"9","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentMain.js":"10","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Fractals/FractalsProject0.js":"11","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/SoftwareEngineering/SoftwareEngineeringMain.js":"12","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject0.js":"13","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Databases/DatabasesMain.js":"14","/Users/patrickrademacher/REACT/react-portfolio/src/components/main.js":"15","/Users/patrickrademacher/REACT/react-portfolio/src/components/resume.js":"16","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject0.js":"17","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject1.js":"18","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/InternetworkingProtocols/InternetworkingProtocolsMain.js":"19","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FunctionalProgramming/FunctionalProgrammingMain.js":"20","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FunctionalProgramming/FunctionalProgrammingProject0.js":"21","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentProject0.js":"22","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationProject2.js":"23","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceMain.js":"24","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject2.js":"25","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningProject2.js":"26","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/InternetworkingProtocols/InternetworkingProtocolsProject0.js":"27","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject1.js":"28","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/SoftwareEngineering/SoftwareEngineeringProject0.js":"29","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/OpenSource/OpenSourceMain.js":"30","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationMain.js":"31","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Databases/DatabasesProject0.js":"32","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingMain.js":"33","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/OpenSource/OpenSourceProject0.js":"34","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Fractals/FractalsMain.js":"35","/Users/patrickrademacher/REACT/react-portfolio/src/components/projects.js":"36","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningMain.js":"37","/Users/patrickrademacher/REACT/react-portfolio/src/index.js":"38","/Users/patrickrademacher/REACT/react-portfolio/src/registerServiceWorker.js":"39"},{"size":2195,"mtime":1608784760925,"results":"40","hashOfConfig":"41"},{"size":5793,"mtime":1607668492602,"results":"42","hashOfConfig":"41"},{"size":2863,"mtime":1606660105565,"results":"43","hashOfConfig":"41"},{"size":4889,"mtime":1608780834031,"results":"44","hashOfConfig":"41"},{"size":19600,"mtime":1607661330738,"results":"45","hashOfConfig":"41"},{"size":2993,"mtime":1607092883521,"results":"46","hashOfConfig":"41"},{"size":2994,"mtime":1607092889975,"results":"47","hashOfConfig":"41"},{"size":3046,"mtime":1607168518210,"results":"48","hashOfConfig":"41"},{"size":3045,"mtime":1607168469289,"results":"49","hashOfConfig":"41"},{"size":1982,"mtime":1607094894786,"results":"50","hashOfConfig":"41"},{"size":2982,"mtime":1607095178127,"results":"51","hashOfConfig":"41"},{"size":2014,"mtime":1607094320018,"results":"52","hashOfConfig":"41"},{"size":3028,"mtime":1607093869333,"results":"53","hashOfConfig":"41"},{"size":2058,"mtime":1607092822861,"results":"54","hashOfConfig":"41"},{"size":669,"mtime":1608784710654,"results":"55","hashOfConfig":"41"},{"size":754,"mtime":1608789677884,"results":"56","hashOfConfig":"41"},{"size":5543,"mtime":1608777961188,"results":"57","hashOfConfig":"41"},{"size":16153,"mtime":1608771178868,"results":"58","hashOfConfig":"41"},{"size":2021,"mtime":1607093338952,"results":"59","hashOfConfig":"41"},{"size":1980,"mtime":1607094847899,"results":"60","hashOfConfig":"41"},{"size":3014,"mtime":1607095085650,"results":"61","hashOfConfig":"41"},{"size":3016,"mtime":1607095098349,"results":"62","hashOfConfig":"41"},{"size":3056,"mtime":1607168551500,"results":"63","hashOfConfig":"41"},{"size":20805,"mtime":1608778777068,"results":"64","hashOfConfig":"41"},{"size":3036,"mtime":1608771716968,"results":"65","hashOfConfig":"41"},{"size":2993,"mtime":1607092896503,"results":"66","hashOfConfig":"41"},{"size":3014,"mtime":1607093385406,"results":"67","hashOfConfig":"41"},{"size":3029,"mtime":1607093916869,"results":"68","hashOfConfig":"41"},{"size":3007,"mtime":1607094228582,"results":"69","hashOfConfig":"41"},{"size":1955,"mtime":1607095671425,"results":"70","hashOfConfig":"41"},{"size":5062,"mtime":1607197480887,"results":"71","hashOfConfig":"41"},{"size":2984,"mtime":1607092876717,"results":"72","hashOfConfig":"41"},{"size":3268,"mtime":1607093883709,"results":"73","hashOfConfig":"41"},{"size":2988,"mtime":1607095637081,"results":"74","hashOfConfig":"41"},{"size":1954,"mtime":1607095205896,"results":"75","hashOfConfig":"41"},{"size":94656,"mtime":1606749498766,"results":"76","hashOfConfig":"41"},{"size":4685,"mtime":1607090997970,"results":"77","hashOfConfig":"41"},{"size":459,"mtime":1607277820121,"results":"78","hashOfConfig":"41"},{"size":4384,"mtime":1606613719687,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},"89d46y",{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"141"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"90"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"107"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"90"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"94"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"86"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/patrickrademacher/REACT/react-portfolio/src/App.js",["201","202"],"import React, { Component } from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\nimport Main from './components/main.js';\nimport { Link } from 'react-router-dom';\n//import { faGasPump, faHome } from \"@fortawesome/free-solid-svg-icons\";\n//import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nclass App extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            navHeight: '8vh'\n        }\n    }\n\n    render() {\n\n        let navHeight = (window.innerHeight * .55).toString() + 'px';\n        return (\n            <div className=\"demo-big-content\" >\n                <Layout style={{top: '0', height: '100vh'}}>\n                    <Header className=\"header-color\" style={{height: this.state.navHeight, minHeight: '5px'}} title={<Link style={{color: 'white'}} to=\"/\">My Portfolio</Link>} scroll>\n                        <Navigation>\n                            <Link to=\"/resume\">{this.state.navHeight}</Link>\n                            <Link to=\"/aboutme\">About Me</Link>\n                            <Link to=\"/projects\">Projects</Link>\n                            <Link to=\"/contact\">Contact</Link>\n                        </Navigation>\n                    </Header>\n                    <Drawer title={<Link style={{textDecoration: 'none', color: 'black', }} to=\"/\">My Portfolio</Link>} scroll>\n                        <Navigation>\n                            <Link to=\"/resume\">Resume</Link>\n                            <Link to=\"/aboutme\">About Me</Link>\n                            <Link to=\"/projects\">Projects</Link>\n                            <Link to=\"/contact\">Contact</Link>\n                        </Navigation>\n                    </Drawer>\n                \n                <div className=\"page-content\"  />\n                <Main /> \n                </Layout>\n\n            </div>\n        );\n    //return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'I believe in Hua Mulan'), React.createElement('p', null, '...as do I...'), React.createElement('person', null, null));\n    }\n}\n\nexport default App;","/Users/patrickrademacher/REACT/react-portfolio/src/components/contact.js",["203","204"],"import React from 'react';\nimport axios from 'axios';\nimport beluga from './belugaMedium.jpg';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput } from 'mdbreact';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport {List, ListItem, ListItemContent} from 'react-mdl';\nclass Contact extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      message: ''\n    }\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    axios({\n      method: \"POST\", \n      url:\"http://localhost:3002/send\", \n      data:  this.state\n    }).then((response)=>{\n      if (response.data.status === 'success') {\n        alert(\"Message Sent.\"); \n        this.resetForm()\n      } else if (response.data.status === 'fail') {\n        alert(\"Message failed to send.\")\n      }\n    })\n  }\n\n  resetForm(){\n    this.setState({name: null, email: null, message: null})\n  }\n  \n  render() {\n    return(\n      <div style={{backgroundImage: `url(${beluga})`, backgroundSize: 'cover', backgroundPosition: 'center center', display: 'flex', justifyContent:'center', height:'1122px', repeat: 'no-repeat', alignItems: 'center'}}>\n    <Row style={{width: '59%', padding: '8px'}}>\n      <Col className='contact-grid'  sm={4} style={{padding: '3px', opacity: '.4'}} >\n      <h3 icon='user' style={{borderBottom: 'dotted black 6px', fontFamily: \"'Fredoka One'\", fontSize: '1.77vw', textAlign: 'center'}}>Patrick Rademacher</h3>\n      \n      <List>\n      <ListItem>\n                                <ListItemContent style={{fontFamily: \"'Fredoka One'\", fontSize: '.801vw', textAlign: 'center'}}>\n                                  <Row style={{alignItems: 'baseline'}}>\n                                    <Col sm={1}>\n                                        <i className= \"fas fa-phone-alt fa-2x\" aria-hidden=\"true\"/>\n                                    </Col>\n                                    <Col sm={9}>         (616) 826-3296\n                                    </Col>\n                                    </Row>    \n                                    </ListItemContent>\n                                </ListItem>\n\n                                <ListItem>\n                                <ListItemContent style={{fontFamily: \"'Fredoka One'\", fontSize: '.801vw', textAlign: 'center'}}>\n                                  <Row style={{alignItems: 'baseline'}}>\n                                    <Col sm={1}>\n                                        <i className= \"fa fa-envelope fa-2x\" aria-hidden=\"true\"/>\n                                    </Col>\n                                    <Col sm={8}>          patrick.d.rad@gmail.com\n                                    </Col>\n                                    </Row>    \n                                    </ListItemContent>\n                                </ListItem>\n\n                                <ListItem>\n                                    <ListItemContent style={{fontSize: '25px', fontFamily: 'Anton'}} />\n                                </ListItem>\n                            </List>\n                            </Col>\n      <Col className='contact-grid' sm={8} style={{opacity: '.73'}}>\n    <MDBContainer>\n        <form onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n        <p>Contact Me: Use My Form</p>\n        <div>\n        <Row style={{display: 'flex', justifyContent: 'center'}}>\n            <Col sm = {10}>\n              \n                <Row style={{alignItems: 'baseline'}}>\n                  <Col sm={1}>\n                  <i class=\"fas fa-user fa-2x\"></i>                </Col>\n                <Col sm={1} />\n                <Col sm={10}>\n                <MDBInput label=\"Your name\" group type=\"text\" validate error=\"wrong\"\n            success=\"right\" />\n            </Col>\n            </Row>\n            </Col>\n            </Row>\n            <Row style={{display: 'flex', justifyContent: 'center'}}>\n            <Col sm = {10}>\n              \n                <Row style={{alignItems: 'baseline'}}>\n                  <Col sm={1}>\n                <i className=\"fa fa-envelope fa-2x\" style={{width: '100%'}} />\n                </Col>\n                <Col sm={1} />\n                <Col sm={10}>\n                <MDBInput label=\"Your email\" group type=\"text\" validate error=\"wrong\"\n            success=\"right\" />\n            </Col>\n            </Row>\n       \n            \n            </Col>\n            </Row>\n            <Row style={{display: 'flex', justifyContent: 'center'}}>\n            <Col sm = {10}>\n              \n                <Row style={{alignItems: 'baseline'}}>\n                  <Col sm={1}>\n                <i className=\"fa fa-pencil-alt fa-2x\" style={{width: '100%'}} />\n                </Col>\n                <Col sm={1} />\n                <Col sm={10}>\n                <MDBInput label=\"Your message\" group type=\"textarea\" rows=\"5\" validate error=\"wrong\"\n            success=\"right\" />\n            </Col>\n            </Row>\n       \n            \n            </Col>\n            </Row>\n        </div>\n        <div className=\"text-center\">\n          <MDBBtn style={{color: '#ab20fd', border: 'solid #ab20fd 1px'}}>\n            Send\n            <MDBIcon far icon=\"paper-plane\" className=\"ml-1\" style={{color: '#ab20fd'}} />\n          </MDBBtn>\n        </div>\n      </form>\n</MDBContainer>\n</Col>\n</Row>\n        </div>\n    );\n  }\n\n  onNameChange(event) {\n\t  this.setState({name: event.target.value})\n  }\n\n  onEmailChange(event) {\n\t  this.setState({email: event.target.value})\n  }\n\n  onMessageChange(event) {\n\t  this.setState({message: event.target.value})\n  }\n}\n\nexport default Contact;",["205","206"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/aboutMe.js",["207"],"import React, { useState, useEffect } from \"react\";\nimport sparty from \"./sparty.png\";\nimport {Grid, Cell} from \"react-mdl\";\nimport backgroundVid from \"./backgroundVideo.mp4\";\nfunction AboutMe() {\n  const [offsetY, setOffsetY] = useState(0);\n  const handleScroll = () => setOffsetY(window.pageYOffset);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  \n\n  const renderContent = () => (\n    <>\n  \n      <div className=\"Parallax__content__heading\">\n        <h1 className=\"Parallax__content__heading__text\">Closure</h1>\n        <h2 className=\"Parallax__content__heading__caption\">\n          Your one-stop source of Web Development tricks\n        </h2>\n      </div>\n      <div className=\"Parallax__content__cta\">\n        <p>\n          <b>1. Like the video.</b> Because it helps me and my channel\n        </p>\n        <p>\n          <b>2. Like the video.</b> To see more content like that!\n        </p>\n        <p>\n          <b>3. Follow the Github link.</b> And play with this code yourself!\n        </p>\n      </div>\n    </>\n  );\n\n  return (\n      <div>\n      <video className='videoTag' style={{zIndex: '-4'}} autoPlay loop muted>\n            <source src={backgroundVid} type='video/mp4' />\n      </video>\n      <Grid >\n        <Cell col={12}>\n      <section className=\"Parallax\">\n      <div\n        className=\"Parallax__background-main\"\n        style={{ transform: `translateY(-${offsetY * 0.5}px)` }}\n        \n      />\n      \n      <div className=\"Parallax__content\">{renderContent()}</div>\n      </section>\n      </Cell>\n      </Grid>\n      <section className=\"Parallax\" style={{marginTop: '700px'}} />\n      <Grid >\n        <Cell col={12}>\n      <section className=\"Parallax\">\n      <div\n        className=\"Parallax__background-michiganstate\"\n        style={{ transform: `translateY(-${offsetY * 0.5}px)` }}\n        \n      />\n      <div className=\"Parallax__background-michiganstateSparty\">\n        <img className=\"Parallax__background-michiganstateSpartyRun\" src={sparty} style={{width: '10%'}} />\n      </div>\n      \n      <div className=\"Parallax__content\">{renderContent()}</div>\n      </section>\n      </Cell>\n      </Grid>\n      <section className=\"Parallax\" style={{marginTop: '1000px'}} />\n    <section className=\"Parallax\">\n      <div\n        className=\"Parallax__background-guitar\"\n        style={{ transform: `translateY(-${offsetY * 0.5}px)` }}\n        \n      />\n      <div\n        className=\"Parallax__background-guitar-notes\"\n        style={{ transform: `translateY(${offsetY * 0.8}px)`, filter: 'invert(87%) sepia(92%) saturate(987%) hue-rotate(81deg) brightness(97%) contrast(95%)' }}\n      />\n      <div className=\"Parallax__content\">{renderContent()}</div>\n      </section>\n      </div>  \n    \n    \n    \n  );\n}\n\nexport default AboutMe;\n",["208","209"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/landingpage.js",["210","211","212","213","214"],"import React, {Component} from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport pic from './resume_picpic.png';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport backgroundVid from './backgroundVideo.mp4';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport headshot from './headshot0.jpg';\n\nclass LandingPage extends Component {\n    constructor(props){\n        super(props);\n        this.state = { windowWidth: 0,//window.innerWidth, \n                       windowHeight: 0,//window.innerHeight,\n                       pictureWidth: Math.round((window.innerWidth/7.6)),\n                       pictureHeight: Math.round((window.innerHeight/3.3)),\n                       counter: 0};\n    }\n    reportWindowSize = () => {\n        console.log('WW: ' + this.state.windowWidth);\n        console.log('IH: ' + this.state.pictureHeight);\n        console.log('PW: ' + this.state.pictureWidth)\n        this.setState({windowWidth: window.innerWidth, windowHeight: window.innerHeight, pictureWidth: (Math.round((window.innerWidth/7.6))), pictureHeight: Math.round((window.innerHeight/2.8))})\n      }\n\n      \n\n      \n    render() {\n        window.addEventListener('resize', this.reportWindowSize);\n        \n\n        return(\n            <div className=\"landing-grid\">\n            <video className='videoTag' autoPlay loop muted>\n                <source src={backgroundVid} type='video/mp4' />\n            </video>\n                    <Row style={{alignItems: 'flex-start', display: 'flex'}}>\n                        <Col />\n                        <Col xs = {6}>\n                            <img src = {headshot} style ={{borderRadius: '100%', border: 'solid #ccc 2px', width: '360px'}}></img>\n                        </Col>\n                        <Col />\n                    </Row>\n                    <Row style={{height: '57vh', alignItems: 'flex-end', bottom: '0', paddingTop: '2vh', position: 'fixed', width: '100%', display: 'flex'}}>\n                        \n                            <Col />\n                            <Col className=\"banner-text\" xs={12} sm={10} md={8} lg={8} xl={8}>\n                                \n                                    <h1>Patrick Rademacher: \n                                        <br></br>\n                                    </h1>  \n                                    <h2>\n                                        Master of Science in Computer Science\n                                    </h2>\n                                    <div style={{alignContent: 'space-between'}}>\n                                        <hr />\n                                        <Row>\n                                            \n                                            <Col xs={6} style={{textAlign: 'center'}}>\n                                                <p>Python | C | C++ | Javascript | Java | Haskell | SQL</p>\n                                            </Col>\n                                            <Col xs={6} style={{textAlign: 'center'}}>\n                                                <p>HTML/CSS | React | Bootstrap | RestFUL API | Node.js</p>\n                                            </Col>\n                                        \n                                        </Row>\n                                        <hr />\n                                        </div>\n\n                                {/*Github */}\n                                <div className='social-links'>\n                                    \n                                        <a href=\"http://google.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <i className=\"fab fa-github\"></i>\n                                        </a>\n                                        {/*Linked In */}\n                                        <a href=\"http://google.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <i className=\"fab fa-linkedin\"></i>\n                                        </a>\n\n                                        <a href=\"http://google.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <i className=\"fab fa-amazon\"></i>\n                                        </a>\n                               \n                                </div>\n                                <div style={{height: '3px'}} />\n                            </Col>\n                            <Col />\n                            \n                        \n\n                    </Row>\n                    \n                        \n                        \n                        \n                \n                    </div>\n                            \n\n                       \n                    \n        )\n    }\n}\n\nexport default LandingPage;",["215","216"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/testingpage.js",["217","218"],"import React, {Component} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport pic0 from \"./aiMedium.jpg\";\nimport pic1 from \"./machinelearningMedium.jpg\";\nimport pic2 from \"./databasesMedium.jpg\";\nimport pic3 from \"./internetMedium.jpg\";\nimport pic4 from \"./puredataMedium.jpg\";\nimport pic5 from \"./softwareengineeringMedium.jpg\";\nimport pic6 from \"./functionalprogrammingMedium.png\";\nimport pic7 from \"./frontendMedium.jpg\";\nimport pic8 from \"./fractalMedium.jpg\";\nimport pic12 from \"./algorithmsMedium.jpg\";\nimport pic13 from \"./theorycompMedium.jpg\";\nimport pic14 from \"./quantumMedium.jpg\";\nimport pic9 from \"./opensourceMedium.jpg\";\nimport pic10 from \"./numcompMedium.jpg\";\nimport pic11 from \"./modelingMedium.jpg\";\n\nimport ArtificalIntelligenceMain from \"./projectPages/ArtificialIntelligence/ArtificialIntelligenceMain\";\nimport ArtificialIntelligenceProject0 from \"./projectPages/ArtificialIntelligence/ArtificialIntelligenceProject0\";\nimport ArtificialIntelligenceProject1 from \"./projectPages/ArtificialIntelligence/ArtificialIntelligenceProject1\";\nimport ArtificialIntelligenceProject2 from \"./projectPages/ArtificialIntelligence/ArtificialIntelligenceProject2\";\nimport MachineLearningMain from \"./projectPages/MachineLearning/MachineLearningMain\";\nimport MachineLearningProject0 from \"./projectPages/MachineLearning/MachineLearningProject0\";\nimport MachineLearningProject1 from \"./projectPages/MachineLearning/MachineLearningProject1\";\nimport MachineLearningProject2 from \"./projectPages/MachineLearning/MachineLearningProject2\";\nimport DatabasesMain from \"./projectPages/Databases/DatabasesMain\";\nimport DatabasesProject0 from \"./projectPages/Databases/DatabasesProject0\";\nimport InternetworkingProtocolsMain from \"./projectPages/InternetworkingProtocols/InternetworkingProtocolsMain\";\nimport InternetworkingProtocolsProject0 from \"./projectPages/InternetworkingProtocols/InternetworkingProtocolsProject0\";\nimport MusicAndDigitalSignalProcessingMain from \"./projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingMain\";\nimport MusicAndDigitalSignalProcessingProject0 from \"./projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject0\";\nimport MusicAndDigitalSignalProcessingProject1 from \"./projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject1\";\nimport SoftwareEngineeringMain from \"./projectPages/SoftwareEngineering/SoftwareEngineeringMain\";\nimport SoftwareEngineeringProject0 from \"./projectPages/SoftwareEngineering/SoftwareEngineeringProject0\";\nimport FunctionalProgrammingMain from \"./projectPages/FunctionalProgramming/FunctionalProgrammingMain\";\nimport FunctionalProgrammingProject0 from \"./projectPages/FunctionalProgramming/FunctionalProgrammingProject0\";\nimport FrontEndWebDevelopmentMain from \"./projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentMain\";\nimport FrontEndWebDevelopmentProject0 from \"./projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentProject0\";\nimport FractalsMain from \"./projectPages/Fractals/FractalsMain\";\nimport FractalsProject0 from \"./projectPages/Fractals/FractalsProject0\";\nimport OpenSourceMain from \"./projectPages/OpenSource/OpenSourceMain\";\nimport OpenSourceProject0 from \"./projectPages/OpenSource/OpenSourceProject0\";\nimport NumericalComputationMain from \"./projectPages/NumericalComputation/NumericalComputationMain\";\nimport NumericalComputationProject0 from \"./projectPages/NumericalComputation/NumericalComputationProject0\";\nimport NumericalComputationProject1 from \"./projectPages/NumericalComputation/NumericalComputationProject1\";\nimport NumericalComputationProject2 from \"./projectPages/NumericalComputation/NumericalComputationProject2\";\nimport {Navigation} from 'react-mdl';\n\n\nclass TestingPage extends Component{\n\n    \n    constructor(props){\n        super(props);\n        this.projectTabs = React.createRef();\n        this.displayProjects = React.createRef();\n        this.state={\n            colStates: [\"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\"],\n            backgrounds: [pic0, pic1, pic2, pic3, pic4, pic5, pic6, pic7, pic8, pic9, pic10, pic11, pic12, pic13, pic14],\n            previousColState: null,\n            currentBackground: pic0,\n            showDetail: false,\n            tester: '3',\n            wiggler: Array(15).fill('20px'),\n            currentCloseUp: [\n                                <ArtificalIntelligenceMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<ArtificialIntelligenceProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                    <ArtificialIntelligenceProject1 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                    <ArtificialIntelligenceProject2 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>\n                                    ],\n                                <MachineLearningMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<MachineLearningProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                    <MachineLearningProject1 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                    <MachineLearningProject2 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>\n                                    ],\n                                <DatabasesMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<DatabasesProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <InternetworkingProtocolsMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<InternetworkingProtocolsProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <MusicAndDigitalSignalProcessingMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [\n                                        <MusicAndDigitalSignalProcessingProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                        <MusicAndDigitalSignalProcessingProject1 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>\n                                    ],\n                                <SoftwareEngineeringMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<SoftwareEngineeringProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <FunctionalProgrammingMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<FunctionalProgrammingProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <FrontEndWebDevelopmentMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<FrontEndWebDevelopmentProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <FractalsMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<FractalsProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <OpenSourceMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<OpenSourceProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <NumericalComputationMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<NumericalComputationProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                    <NumericalComputationProject1 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                    <NumericalComputationProject2 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>\n                                    ],        \n                                ],\n                                   \n            currentCloseUpIndex: -1,\n            currentHover: -1,\n            currentPageIndex: -1,\n            currentHeader: 'PROJECTS',\n            rollDown: false,\n            headers: ['ARTIFICIAL INTELLIGENCE', 'MACHINE LEARNING', 'DATABASES', 'INTERNETWORKING PROTOCOLS', 'MUSIC AND DIGITAL SIGNAL PROCESSING', 'SOFTWARE ENGINEERING', 'FUNCTIONAL PROGRAMMING', 'FRONT-END WEB DEVELOPMENT', 'FRACTALS', 'OPEN SOURCE', 'NUMERICAL COMPUTATION', 'MODELING AND SIMULATION IN PYTHON', 'ALGORITHMS', 'THEORY OF COMPUTATION', 'QUANTUM COMPUTING', 'PROJECTS']                       \n        }\n    }\n\n    setActiveTab = (tabNumber) => {\n\n        let allTabs = Array(15).fill('nonactiveCols');\n        allTabs[tabNumber] = 'activeCol';\n        console.log('allTabs: ' + allTabs);\n        //this.state.colStates[tabNumber] = \"activeCol\";\n        this.setState({currentBackground: this.state.backgrounds[tabNumber], currentPageIndex: (tabNumber * 2), currentHeader: this.state.headers[tabNumber]});\n        if(this.state.previousColState === null){\n            this.setState({previousColState: tabNumber})\n        }\n\n        if (tabNumber !== this.state.previousColState){\n            this.setState({colStates: allTabs})\n            this.setState({previousColState: tabNumber});\n        }\n        \n        this.setState({rollDown: true});\n        //this.scrollToBottom();\n\n        \n        \n\n    }\n\n\n    showDetails = (num) => {\n        let showOrNo = this.state.showDetail;\n        this.setState({tester: num, showDetail: !showOrNo, currentCloseUpIndex: num});\n        console.log('showdetail: ' + this.state.showDetail);\n        console.log('currentCloseUpIndex: ' + this.state.currentCloseUpIndex);\n        console.log('tester: ' + this.state.tester);\n    }\n\n    settingIndex = (num) => {\n        this.setState({currentCloseUpIndex: num})\n        console.log('Setting Index: ' + this.state.currentCloseUpIndex);\n    }\n\n    setWiggle = (index, value) => {\n        if (this.state.currentHover === -1){\n            this.setState({currentHover: index})\n        }\n        else if (this.state.currentHover === index && this.state.colStates[index] === 'activeCol'){\n            value = 'activeCol';\n        }\n        this.setState({currentHover: index});\n\n        if (this.state.colStates[index] !== \"activeCol\"){\n        this.setState(() => {\n          const colStates = this.state.colStates.map((item, j) => {\n            if (j === index) {\n                this.setState({currentHover: index});\n\n              return value;\n            } \n            else {\n                if (item === 'nonactiveColsHover'){\n                    item = 'nonactiveCols';\n                }\n              return item;\n            }\n          });\n     \n          return {\n            colStates,\n          };\n        })}\n        console.log(this.state.colStates);\n\n    };\n\n    componentDidMount() {\n        \n        this.scrollToBottom();\n\n    }\n\n    componentDidUpdate(){\n        \n        this.scrollToBottom();\n\n    }\n\n      scrollToBottom = () => {\n        if (this.state.rollDown === true){\n          console.log((window.innerHeight + (this.projectTabs.clientHeight * 5)).toString() + 'px');\n          console.log(this.displayProjects);\n        this.displayProjects.scrollIntoView({ behavior: 'smooth', top: '0' });\n        this.setState({rollDown: false});}\n      \n    }\n\n    render(){\n        return (\n            <div style={{width: '100%', height: (window.innerHeight + (this.projectTabs.clientHeight * 3)).toString() + 'px', backgroundImage: `url(${this.state.currentBackground})`, backgroundRepeat: 'repeat', backgroundSize: 'cover',\n  \n  position: 'static'\n  }}>\n               <div id='projectTabs' ref={pt => {this.projectTabs = pt}}>\n                    <Row style={{position: 'static', width: '100%'}}>\n                        <Col className={this.state.colStates[0]}  xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(0)} onMouseEnter={() => this.setWiggle(0, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(0, 'nonactiveCols')}>\n                            <p className=\"wiggles\">ARTIFICIAL INTELLIGENCE</p>\n                        </Col>\n                        <Col className={this.state.colStates[1]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(1)} onMouseEnter={() => this.setWiggle(1, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(1, 'nonactiveCols')}>\n                            <p className=\"wiggles\">MACHINE LEARNING</p>\n                        </Col>\n                        <Col className={this.state.colStates[2]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(2)} onMouseEnter={() => this.setWiggle(2, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(2, 'nonactiveCols')}>\n                            <p className=\"wiggles\">DATABASES</p>\n                        </Col>\n                    </Row>\n                    <Row style={{position: 'static', width: '100%'}}>\n                        <Col className={this.state.colStates[3]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(3)} onMouseEnter={() => this.setWiggle(3, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(3, 'nonactiveCols')}>\n                            <p className=\"wiggles\">INTERNETWORKING PROTOCOLS</p>\n                        </Col>\n                        <Col className={this.state.colStates[4]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(4)} onMouseEnter={() => this.setWiggle(4, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(4, 'nonactiveCols')}>\n                            <p className=\"wiggles\" >MUSIC AND DIGITAL SIGNAL PROCESSING</p>\n                        </Col>\n                        <Col className={this.state.colStates[5]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(5)} onMouseEnter={() => this.setWiggle(5, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(5, 'nonactiveCols')}>\n                            <p className=\"wiggles\">SOFTWARE ENGINEERING</p>\n                        </Col>\n                    </Row>\n                    <Row style={{position: 'static', width: '100%'}}>\n                        <Col className={this.state.colStates[6]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(6)} onMouseEnter={() => this.setWiggle(6, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(6, 'nonactiveCols')}>\n                            <p className=\"wiggles\">FUNCTIONAL PROGRAMMING</p>\n                        </Col>\n                        <Col className={this.state.colStates[7]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(7)} onMouseEnter={() => this.setWiggle(7, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(7, 'nonactiveCols')}>\n                            <p className=\"wiggles\">FRONT-END WEB DEVELOPMENT</p>\n                        </Col>\n                        <Col className={this.state.colStates[8]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(8)} onMouseEnter={() => this.setWiggle(8, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(8, 'nonactiveCols')}>\n                            <p className=\"wiggles\">FRACTALS</p>\n                        </Col>\n                    </Row>\n                    <Row style={{position: 'static', width: '100%'}}>\n                        <Col className={this.state.colStates[9]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(9)} onMouseEnter={() => this.setWiggle(9, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(9, 'nonactiveCols')}>\n                            <p className=\"wiggles\">OPEN SOURCE</p>\n                        </Col>\n                        <Col className={this.state.colStates[10]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(10)} onMouseEnter={() => this.setWiggle(10, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(10, 'nonactiveCols')}>\n                            \n                            <p className=\"wiggles\">NUMERICAL COMPUTATION</p>\n                        </Col>\n                        <Col className={this.state.colStates[11]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(11)} onMouseEnter={() => this.setWiggle(11, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(11, 'nonactiveCols')}>\n                            <p className=\"wiggles\" >MODELING AND SIMULATION IN PYTHON</p>\n                        </Col>\n                    </Row>\n                    <Row style={{position: 'static', width: '100%'}}>\n                        <Col className={this.state.colStates[12]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(12)} onMouseEnter={() => this.setWiggle(12, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(12, 'nonactiveCols')}>\n                            <p className=\"wiggles\" >ALGORITHMS</p>\n                        </Col>\n                        <Col className={this.state.colStates[13]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(13)} onMouseEnter={() => this.setWiggle(13, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(13, 'nonactiveCols')}>\n                            <p className=\"wiggles\">THEORY OF COMPUTATION</p>\n                        </Col>\n                        <Col className={this.state.colStates[14]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(14)} onMouseEnter={() => this.setWiggle(14, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(14, 'nonactiveCols')}>\n                            <p className=\"wiggles\">QUANTUM COMPUTING</p>\n                        </Col>\n                      \n                    </Row>\n                </div>\n                <div style={{marginTop: this.projectTabs.clientHeight/4.0}} />\n                            <h1 className = 'projectsPageHeader' ref={dp => { this.displayProjects = dp; }} style={{backgroundColor: 'black', opacity: '.72', marginTop: this.projectTabs.clientHeight/4.0}}>{this.state.currentHeader}</h1>\n                  \n                    {!this.state.showDetail ?\n                        this.state.currentCloseUp[this.state.currentPageIndex]\n                    :\n                    this.state.currentCloseUp[this.state.currentPageIndex + 1][this.state.currentCloseUpIndex]\n                }\n                       \n                       <div style={{marginTop: this.projectTabs.clientHeight * .75}} />\n\n            </div>\n        )\n    }\n}\n\nexport default TestingPage;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningProject0.js",["219","220","221","222"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MachineLearningProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>loook</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default MachineLearningProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningProject1.js",["223","224","225","226"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MachineLearningProject1 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>little</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default MachineLearningProject1;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationProject1.js",["227","228","229"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass NumericalComputationProject1 extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>b spline</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default NumericalComputationProject1;",["230","231"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationProject0.js",["232","233","234"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass NumericalComputationProject0 extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>newtons</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default NumericalComputationProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentMain.js",["235","236","237","238","239","240","241"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass FrontEndWebDevelopmentMain extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={4} /> \n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>SUDOKU SOLVER</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default FrontEndWebDevelopmentMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Fractals/FractalsProject0.js",["242","243","244","245"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass FractalsProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>FRACTALS</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default FractalsProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/SoftwareEngineering/SoftwareEngineeringMain.js",["246","247","248","249","250","251"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass SoftwareEngineeringMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={4} /> \n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>BATTLE CODE</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default SoftwareEngineeringMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject0.js",["252","253","254","255"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MusicAndDigitalSignalProcessingProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PEDAL PI</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default MusicAndDigitalSignalProcessingProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Databases/DatabasesMain.js",["256","257","258","259","260","261"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass DatabasesMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    yeahYeah = () => {\n        this.setState({idk: 'yea yea yea'})\n    }\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={4} /> \n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>wowsers</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default DatabasesMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/main.js",["262"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/resume.js",[],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject0.js",["263","264","265"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport {Row, Col} from 'react-bootstrap';\n\nclass ArtificialIntelligenceProject0 extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\" >\n                    <div className = \"separator\" />\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={2} />\n                                <Cell col={8} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', height: '32vh', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        <div style={{justifyContent: 'center', margin: 'auto', width: '100%'}}>\n                                                <Row style={{border: 'solid #0cf2ad 4px', fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: '#0cf2ad', justifyContent: 'center', margin: 'auto', flexWrap: 'nowrap'}}>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>1</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>8</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>6</Col>\n                                                </Row>\n                                                <Row style={{border: 'solid #0cf2ad 4px', fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: '#0cf2ad', justifyContent: 'center', margin: 'auto', flexWrap: 'nowrap'}}>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>&nbsp;</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>2</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>3</Col>\n                                                </Row>\n                                                <Row style={{border: 'solid #0cf2ad 4px', fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: '#0cf2ad', justifyContent: 'center', margin: 'auto', flexWrap:'nowrap'}}>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>5</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>4</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>7</Col>\n                                                </Row>\n                                            </div>\n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>{this.props.tester}</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={2} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default ArtificialIntelligenceProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject1.js",["266","267","268","269"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/InternetworkingProtocols/InternetworkingProtocolsMain.js",["270","271","272","273","274","275"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass InternetworkingProtocolsMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={4} /> \n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PAT CHAT</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default InternetworkingProtocolsMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FunctionalProgramming/FunctionalProgrammingMain.js",["276","277","278","279","280","281","282"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass FunctionalProgrammingMain extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={4} /> \n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>SUDOKU SOLVER</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default FunctionalProgrammingMain;",["283","284"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FunctionalProgramming/FunctionalProgrammingProject0.js",["285","286","287","288"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass FunctionalProgrammingProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>BATTER ON DECK</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default FunctionalProgrammingProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentProject0.js",["289","290","291","292"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass FrontEndWebDevelopmentProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>BATTER ON DECK</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default FrontEndWebDevelopmentProject0;",["293","294"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationProject2.js",["295","296","297"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass NumericalComputationProject2 extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>cubic or something</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default NumericalComputationProject2;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceMain.js",["298","299","300","301","302","303","304","305","306","307","308","309","310","311"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport Paper from '@material-ui/core/Paper';\n//import { Tabs } from '@material-ui/core';\n//import Tab from '@material-ui/core/Tab';\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Row, Col} from 'react-bootstrap';\n\nclass ArtificialIntelligenceMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    yeahYeah = () => {\n        this.setState({idk: 'yea yea yea'})\n    }\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Row>\n                                <Col xs={12} sm={12} md={12} lg={4} xl={4} >\n                                    <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: '#ccc', opacity: '.8', height: '49vh', width: '294px'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                            <div style={{justifyContent: 'center', margin: 'auto', width: '100%'}}>\n                                                <Row style={{border: 'solid #0cf2ad 4px', fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: '#0cf2ad', justifyContent: 'center', margin: 'auto', flexWrap: 'nowrap'}}>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>1</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>8</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>6</Col>\n                                                </Row>\n                                                <Row style={{border: 'solid #0cf2ad 4px', fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: '#0cf2ad', justifyContent: 'center', margin: 'auto', flexWrap: 'nowrap'}}>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>&nbsp;</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>2</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>3</Col>\n                                                </Row>\n                                                <Row style={{border: 'solid #0cf2ad 4px', fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: '#0cf2ad', justifyContent: 'center', margin: 'auto', flexWrap:'nowrap'}}>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>5</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>4</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>7</Col>\n                                                </Row>\n                                            </div>   \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid white 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>8 Puzzle Solver</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                <Col xs={12} sm={12} md={12} lg={4} xl={4} >\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: '#ccc', opacity: '.8', height: '49vh', width: '294px'}} onClick={() => this.props.changeShowing(1)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                            <div style={{display: 'block', justifyContent: 'center', margin: 'auto', width: '100%', textAlign: 'center'}}>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh', justifyContent: 'center'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh', justifyContent: 'center', margin: 'auto', position: 'relative'}}>♕</Col>\n                                                </Row>\n                                            </div>   \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '0vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid white 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>8 Queens Solver</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                <Col xs={12} sm={12} md={12} lg={4} xl={4}>\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '49vh', width: '294px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}} onClick={() => this.props.changeShowing(2)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '17.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid white 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>8 Puzzle Solver</p>\n                                    </Card> \n                                </Col>\n                                <div className='separator' />\n\n                    </ Row>\n                </div>\n        )\n    }\n}\nexport default ArtificialIntelligenceMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject2.js",["312","313","314","315","316","317"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningProject2.js",["318","319","320","321"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MachineLearningProject2 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>laddy</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default MachineLearningProject2;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/InternetworkingProtocols/InternetworkingProtocolsProject0.js",["322","323","324","325"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass InternetworkingProtocolsProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PAT CHAT</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default InternetworkingProtocolsProject0;",["326","327"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject1.js",["328","329","330","331"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MusicAndDigitalSignalProcessingProject1 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PURE DATA</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default MusicAndDigitalSignalProcessingProject1;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/SoftwareEngineering/SoftwareEngineeringProject0.js",["332","333","334","335"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass SoftwareEngineeringProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>BATTLE CODE</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default SoftwareEngineeringProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/OpenSource/OpenSourceMain.js",["336","337","338","339","340","341","342"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass OpenSourceMain extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={4} /> \n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>UNCLE BUCK</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default OpenSourceMain;",["343","344"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationMain.js",["345","346","347","348","349","350","351","352","353","354","355","356"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport Paper from '@material-ui/core/Paper';\n//import { Tabs } from '@material-ui/core';\n//import Tab from '@material-ui/core/Tab';\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\n\nclass NumericalComputationMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    yeahYeah = () => {\n        this.setState({idk: 'yea yea yea'})\n    }\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>newton</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(1)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>B Spline</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(2)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Cubic</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card>\n                                </Cell>\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default NumericalComputationMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Databases/DatabasesProject0.js",["357","358","359","360"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass DatabasesProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>wowowowo</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default DatabasesProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingMain.js",["361","362","363","364","365","366","367"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MusicAndDigitalSignalProcessingMain extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={2} /> \n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PEDAL PI</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(1)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PURE DATA</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={2} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default MusicAndDigitalSignalProcessingMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/OpenSource/OpenSourceProject0.js",["368","369","370","371"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass OpenSourceProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>UNCLE BUCK</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default OpenSourceProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Fractals/FractalsMain.js",["372","373","374","375","376","377","378"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass FractalsMain extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={4} /> \n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>SUDOKU SOLVER</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default FractalsMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projects.js",["379","380","381","382","383","384","385","386","387","388","389","390","391","392","393"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport Paper from '@material-ui/core/Paper';\n//import { Tabs } from '@material-ui/core';\n//import Tab from '@material-ui/core/Tab';\nimport teslaLogo from './Tesla-01.png';\nimport sudokuVector from './sudokuVector.jpg';\nimport MLProject1PDF from './rademacher_ml_code1_writeup.pdf';\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport pic0 from \"./aiMedium.jpg\";\nimport pic1 from \"./machinelearningMedium.jpg\";\nimport pic2 from \"./databasesMedium.jpg\";\nimport pic3 from \"./internetMedium.jpg\";\nimport pic4 from \"./puredataMedium.jpg\";\nimport pic5 from \"./softwareengineeringMedium.jpg\";\nimport pic6 from \"./functionalprogrammingMedium.png\";\nimport pic7 from \"./frontendMedium.jpg\";\nimport pic8 from \"./fractalMedium.jpg\";\nimport pic9 from \"./algorithmsMedium.jpg\";\nimport pic10 from \"./theorycompMedium.jpg\";\nimport pic11 from \"./quantumMedium.jpg\";\nimport pic12 from \"./opensourceMedium.jpg\";\nimport pic13 from \"./numcompMedium.jpg\";\nimport pic14 from \"./modelingMedium.jpg\";\n\n\n\n\n\nlet TabContainer = (props) => {\nreturn (\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n      {props.children}\n    </Typography>\n  );\n}\n\n\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  label: {\n    color: \"magenta\"\n  },\n  indicator: {\n    bottom: \"none\",\n    backgroundColor: \"none !important\",\n    color: \"none !important\",\n    borderColor: 'none',\n    outline: 'none !important',\n    opacity: '1'\n  }\n});\n\nclass Projects extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = { value: null,\n                       rowIndex: 0, \n                       topRow: \"primary\", \n                       bottomRow: \"none\", \n                       middleTopRow: \"none\", \n                       middleBottomRow: \"none\", \n                       bottomBottomRow: \"none\",\n                       tabValues: [1, 1, 1, 1, 1],\n                       show: [false, false, false],\n                       currentlyShowing: false};\n    }\n\n    \n\n\n    handleChange = (event, value) => {\n        //this.setState({value: value });\n        console.log('hot dogs')\n        console.log(this.state.show)\n\n      };\n\n    handleChangeTop = (event, newValue) => {\n       this.setState({value: newValue});\n       this.setState({topRow: \"primary\", \n                      middleTopRow: \"none\", \n                      middleBottomRow: \"none\", \n                      bottomRow: \"none\", \n                      bottomBottomRow: \"none\",\n                      show: [false, false, false],\n                     // currentlyShowing: false,\n                      tabValues: [newValue, null, null, null, null],\n                      //rowIndex: \"0\"\n                      });\n        console.log(this.state.topRow);\n        console.log(this.state.middleTopRow);\n        console.log(this.state.middleBottomRow);\n        console.log(this.state.bottomRow);\n        console.log(this.state.bottomBottomRow);\n        console.log(this.state.tabValues)\n        console.log(this.state.show)\n        console.log(this.state.rowIndex)\n    }\n\n    handleChangeMiddleTop = (event, newValue) => {\n        this.setState({value: newValue});\n        this.setState({middleTopRow: \"primary\", \n                       middleBottomRow: \"none\", \n                       topRow: \"none\", \n                       bottomRow: \"none\", \n                       bottomBottomRow: \"none\",\n                       //show: [false, false, false],\n                       //currentlyShowing: false,\n                       tabValues: [null, newValue, null, null, null]\n                    });\n                    console.log(this.state.topRow);\n                    console.log(this.state.middleTopRow);\n                    console.log(this.state.middleBottomRow);\n                    console.log(this.state.bottomRow);\n                    console.log(this.state.bottomBottomRow);\n                    console.log(this.state.tabValues)\n                    console.log(this.state.show)\n                    console.log(this.state.rowIndex)\n    }\n\n    handleChangeMiddleBottom = (event, newValue) => {\n        this.setState({value: newValue});\n        this.setState({middleBottomRow: \"primary\", \n                       middleTopRow: \"none\", \n                       topRow: \"none\", \n                       bottomRow: \"none\", \n                       bottomBottomRow: \"none\",\n                       //show: [false, false, false],\n                       //currentlyShowing: false,\n                       tabValues: [null, null, newValue, null, null],\n                       rowIndex: 0\n                    });\n                    console.log(this.state.topRow);\n                    console.log(this.state.middleTopRow);\n                    console.log(this.state.middleBottomRow);\n                    console.log(this.state.bottomRow);\n                    console.log(this.state.bottomBottomRow);\n                    console.log(this.state.tabValues);\n                    console.log(this.state.show)\n                    console.log(this.state.rowIndex)\n    }\n\n    handleChangeBottom = (event, newValue) => {\n        this.setState({value: newValue});\n        this.setState({bottomRow: \"primary\", \n                       topRow: \"none\", \n                       middleTopRow: \"none\", \n                       middleBottomRow: \"none\", \n                       bottomBottomRow: \"none\",\n                       //show: [false, false, false],\n                       //currentlyShowing: false,\n                       tabValues: [null, null, null, newValue, null],\n                       rowIndex: \"0\"\n                    });\n                    console.log(this.state.topRow);\n                    console.log(this.state.middleTopRow);\n                    console.log(this.state.middleBottomRow);\n                    console.log(this.state.bottomRow);\n                    console.log(this.state.bottomBottomRow);\n                    console.log(this.state.tabValues) \n                    console.log(this.state.show)\n        console.log(this.state.rowIndex)                  \n    }\n\n    handleChangeBottomBottom = (event, newValue) => {\n        this.setState({value: newValue});\n        this.setState({bottomBottomRow: \"primary\", \n                       topRow: \"none\", \n                       middleTopRow: \"none\", \n                       middleBottomRow: \"none\", \n                       bottomRow: \"none\",\n                       //show: [false, false, false],\n                       //currentlyShowing: false,\n                       tabValues: [null, null, null, null, newValue],\n                       rowIndex: \"0\"\n                    });\n                    console.log(this.state.topRow);\n                    console.log(this.state.middleTopRow);\n                    console.log(this.state.middleBottomRow);\n                    console.log(this.state.bottomRow);\n                    console.log(this.state.bottomBottomRow);\n                    console.log(this.state.tabValues);\n                    console.log(this.state.show)\n                    console.log(this.state.rowIndex)\n    }\n    \n    handleShowCard = (event, rowIndy, numberOfItems) => {\n        let boolean = null;\n        if (this.state.currentlyShowing !== true){\n            boolean = true;\n            let cards = [];\n            for (let i = 0; i < numberOfItems; i++){\n                if (i === rowIndy){\n                    cards.push(true);\n                }\n                else{\n                    cards.push(false);\n                }\n            }\n        \n            this.setState({show: {...cards}});\n            this.setState({rowIndex: rowIndy});\n        }\n        else{\n            boolean = false;\n            let cards = [];\n            for (let i = 0; i < numberOfItems; i++){\n                cards.push(false);\n            }\n            this.setState({show: {...cards}, rowIndex: rowIndy})\n        }\n\n        this.setState({currentlyShowing: boolean})\n        console.log(this.state.currentlyShowing);\n    }\n\n    toggleCategories(){\n        if (this.state.value === 0 && this.state.topRow === \"primary\" && (this.state.rowIndex === 0)){\n            let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic0})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Puzzle Solver Using a*</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Queens Solver Using Genetic Algorithm</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Euphonomimesis</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Puzzle Solver Using a*</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n                </div>\n            )\n        }\n\n        else if(this.state.value === 0 && this.state.topRow === \"primary\" && this.state.rowIndex === 1){\n            let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic0})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: 'infinite', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Puzzle Solver Using a*</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Queens Solver Using Genetic Algorithm</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Euphonomimesis</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>\n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Queens Solver Using Genetic Algorithm</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n                </div>\n            )\n        }\n\n        else if (this.state.value === 0 && this.state.topRow === \"primary\" && this.state.rowIndex === 2){\n            let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic0})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Puzzle Solver Using a*</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Queens Solver Using Genetic Algorithm</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                 <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Euphonomimesis</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Euphonomimesis</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 1 && this.state.topRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic1})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>MNIST Handwritten Data Recognition</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>MNIST Handwritten Digit Recognition</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 1 && this.state.topRow === \"primary\" && this.state.rowIndex === 1){\n        let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic1})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>MNIST Handwritten Data Recognition</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 1 && this.state.topRow === \"primary\" && this.state.rowIndex === 2){\n        let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic1})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>MNIST Handwritten Data Recognition</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 2 && this.state.topRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic2})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n\n    \n    else if(this.state.value === 0 && this.state.middleTopRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic3})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PAT CHAT</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PAT CHAT</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 1 && this.state.middleTopRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 2;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic4})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={2} />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pedal Pi</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pure Data Synthesizer</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                                <div className=\"separator\" />\n                                <Cell col={2} />\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pedal Pi</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n    else if(this.state.value === 1 && this.state.middleTopRow === \"primary\" && this.state.rowIndex === 1){\n        let numOfItems = 2;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic4})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={2} />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pedal Pi</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pure Data Synthesizer</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                                <div className=\"separator\" />\n                                <Cell col={2} />\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pure Data Synthesizer</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 2 && this.state.middleTopRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic5})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Battlecode</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Battle Code</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    } \n\n    else if(this.state.value === 0 && this.state.middleBottomRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic6})`, height:'1500px', backgroundRepeat: 'no-repeat', backgroundPosition: 'center center'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Sudoku Solver</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Sudoku Solver</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n            \n    else if(this.state.value === 1 && this.state.middleBottomRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic7})`, height:'1500px', backgroundRepeat: 'no-repeat', backgroundPosition: 'center center'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Batter on Deck</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Batter on Deck</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }                    \n    \n    else if(this.state.value === 2 && this.state.middleBottomRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic8})`, height:'1500px', backgroundRepeat: 'no-repeat', backgroundPosition: 'center center'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Batter on Deck</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Batter on Deck</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n                        }\n                        \n                                \n                            \n                           \n                        \n\n\n    render() {\n          const { classes } = this.props;\n          const { value } = this.state;\n        return(\n            \n            <div style={{backgroundColor: '#eee'}} >\n                \n                <Tabs  indicatorColor={this.state.topRow} classes={{indicator: classes.indicator}} variant=\"fullWidth\" value={this.state.tabValues[0]} onChange={this.handleChangeTop} ripple>\n                    <Tab className=\"tabz\" label=\"Artificial Intelligence\"></Tab>\n                    <Tab className=\"tabz\" label=\"Machine Learning\"></Tab>\n                    <Tab className=\"tabz\" label=\"Databases\"></Tab>\n                </Tabs>\n               \n                \n                <Tabs variant=\"fullWidth\" indicatorColor={this.state.middleTopRow} classes={{indicator: classes.indicator}} value={this.state.tabValues[1]} onChange={this.handleChangeMiddleTop} ripple>\n                    <Tab className=\"tabz\" label=\"Internetworking Protocols\"></Tab>\n                    <Tab className=\"tabz\" label=\"Music and Digital Signal Processing\"></Tab>\n                    <Tab className=\"tabz\" label=\"Software Engineering\"></Tab>\n                </Tabs>\n\n                <Tabs variant=\"fullWidth\" indicatorColor={this.state.middleBottomRow} classes={{indicator: classes.indicator}} value={this.state.tabValues[2]} onChange={this.handleChangeMiddleBottom} ripple>\n                    <Tab className=\"tabz\" label=\"Functional Programming\"></Tab>\n                    <Tab className=\"tabz\" label=\"Front-End Web Development\"></Tab>\n                    <Tab className=\"tabz\" label=\"Fractals\"></Tab>\n                </Tabs>\n\n                <Tabs variant=\"fullWidth\" indicatorColor={this.state.bottomRow} classes={{indicator: classes.indicator}} value={this.state.tabValues[3]} onChange={this.handleChangeBottom} ripple>\n                    <Tab className=\"tabz\" label=\"Algorithms\"></Tab>\n                    <Tab className=\"tabz\" label=\"Theory of Computation\"></Tab>\n                    <Tab className=\"tabz\" label=\"Quantum Computing\"></Tab>\n                </Tabs>\n\n                <Tabs variant=\"fullWidth\" indicatorColor={this.state.bottomBottomRow} classes={{indicator: classes.label}} value={this.state.tabValues[4]} onChange={this.handleChangeBottomBottom} ripple>\n                    <Tab className=\"tabz\" label=\"Open Source\"></Tab>\n                    <Tab className=\"tabz\" label=\"Numerical Computation\" ></Tab>\n                    <Tab className=\"tabz\" label=\"Modeling and Simulation in Python\" ></Tab>\n                </Tabs>\n\n                <Grid className=\"projects-grid\">\n                    <Cell col={12}>\n                        <div className=\"content\">{this.toggleCategories()}</div>\n                    </Cell>\n                </Grid>\n            </div>\n\n        )\n    }\n}\n\nProjects.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n\nexport default withStyles(styles)(Projects);\n",["394","395"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningMain.js",["396","397","398","399","400","401"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MachineLearningMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    yeahYeah = () => {\n        this.setState({idk: 'yea yea yea'})\n    }\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>look</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(1)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>little</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={() => this.props.changeShowing(2)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>lad</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card>\n                                </Cell>\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default MachineLearningMain;","/Users/patrickrademacher/REACT/react-portfolio/src/index.js",["402"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <App />\n        </BrowserRouter>\n   , \n    document.getElementById('root'));\n","/Users/patrickrademacher/REACT/react-portfolio/src/registerServiceWorker.js",[],{"ruleId":"403","severity":1,"message":"404","line":3,"column":46,"nodeType":"405","messageId":"406","endLine":3,"endColumn":53},{"ruleId":"403","severity":1,"message":"407","line":20,"column":13,"nodeType":"405","messageId":"406","endLine":20,"endColumn":22},{"ruleId":"403","severity":1,"message":"408","line":4,"column":24,"nodeType":"405","messageId":"406","endLine":4,"endColumn":30},{"ruleId":"403","severity":1,"message":"409","line":4,"column":32,"nodeType":"405","messageId":"406","endLine":4,"endColumn":38},{"ruleId":"410","replacedBy":"411"},{"ruleId":"412","replacedBy":"413"},{"ruleId":"414","severity":1,"message":"415","line":68,"column":9,"nodeType":"416","endLine":68,"endColumn":108},{"ruleId":"410","replacedBy":"417"},{"ruleId":"412","replacedBy":"418"},{"ruleId":"403","severity":1,"message":"419","line":2,"column":10,"nodeType":"405","messageId":"406","endLine":2,"endColumn":14},{"ruleId":"403","severity":1,"message":"420","line":2,"column":16,"nodeType":"405","messageId":"406","endLine":2,"endColumn":20},{"ruleId":"403","severity":1,"message":"421","line":3,"column":8,"nodeType":"405","messageId":"406","endLine":3,"endColumn":11},{"ruleId":"403","severity":1,"message":"422","line":4,"column":8,"nodeType":"405","messageId":"406","endLine":4,"endColumn":17},{"ruleId":"414","severity":1,"message":"415","line":42,"column":29,"nodeType":"416","endLine":42,"endColumn":125},{"ruleId":"410","replacedBy":"423"},{"ruleId":"412","replacedBy":"424"},{"ruleId":"403","severity":1,"message":"422","line":4,"column":8,"nodeType":"405","messageId":"406","endLine":4,"endColumn":17},{"ruleId":"403","severity":1,"message":"425","line":50,"column":9,"nodeType":"405","messageId":"406","endLine":50,"endColumn":19},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"429","severity":1,"message":"430","line":7,"column":5,"nodeType":"431","messageId":"432","endLine":9,"endColumn":6},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"429","severity":1,"message":"430","line":7,"column":5,"nodeType":"431","messageId":"432","endLine":9,"endColumn":6},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"410","replacedBy":"433"},{"ruleId":"412","replacedBy":"434"},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"403","severity":1,"message":"435","line":2,"column":39,"nodeType":"405","messageId":"406","endLine":2,"endColumn":50},{"ruleId":"403","severity":1,"message":"436","line":2,"column":52,"nodeType":"405","messageId":"406","endLine":2,"endColumn":58},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"437","line":2,"column":82,"nodeType":"405","messageId":"406","endLine":2,"endColumn":90},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"429","severity":1,"message":"430","line":7,"column":5,"nodeType":"431","messageId":"432","endLine":9,"endColumn":6},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"429","severity":1,"message":"430","line":7,"column":5,"nodeType":"431","messageId":"432","endLine":9,"endColumn":6},{"ruleId":"403","severity":1,"message":"435","line":2,"column":39,"nodeType":"405","messageId":"406","endLine":2,"endColumn":50},{"ruleId":"403","severity":1,"message":"436","line":2,"column":52,"nodeType":"405","messageId":"406","endLine":2,"endColumn":58},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"437","line":2,"column":82,"nodeType":"405","messageId":"406","endLine":2,"endColumn":90},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"429","severity":1,"message":"430","line":7,"column":5,"nodeType":"431","messageId":"432","endLine":9,"endColumn":6},{"ruleId":"403","severity":1,"message":"435","line":2,"column":39,"nodeType":"405","messageId":"406","endLine":2,"endColumn":50},{"ruleId":"403","severity":1,"message":"436","line":2,"column":52,"nodeType":"405","messageId":"406","endLine":2,"endColumn":58},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"437","line":2,"column":82,"nodeType":"405","messageId":"406","endLine":2,"endColumn":90},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"403","severity":1,"message":"438","line":5,"column":8,"nodeType":"405","messageId":"406","endLine":5,"endColumn":16},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"429","severity":1,"message":"430","line":7,"column":5,"nodeType":"431","messageId":"432","endLine":9,"endColumn":6},{"ruleId":"403","severity":1,"message":"435","line":2,"column":39,"nodeType":"405","messageId":"406","endLine":2,"endColumn":50},{"ruleId":"403","severity":1,"message":"436","line":2,"column":52,"nodeType":"405","messageId":"406","endLine":2,"endColumn":58},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"437","line":2,"column":82,"nodeType":"405","messageId":"406","endLine":2,"endColumn":90},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"403","severity":1,"message":"435","line":2,"column":39,"nodeType":"405","messageId":"406","endLine":2,"endColumn":50},{"ruleId":"403","severity":1,"message":"436","line":2,"column":52,"nodeType":"405","messageId":"406","endLine":2,"endColumn":58},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"437","line":2,"column":82,"nodeType":"405","messageId":"406","endLine":2,"endColumn":90},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"429","severity":1,"message":"430","line":7,"column":5,"nodeType":"431","messageId":"432","endLine":9,"endColumn":6},{"ruleId":"410","replacedBy":"439"},{"ruleId":"412","replacedBy":"440"},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"429","severity":1,"message":"430","line":7,"column":5,"nodeType":"431","messageId":"432","endLine":9,"endColumn":6},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"429","severity":1,"message":"430","line":7,"column":5,"nodeType":"431","messageId":"432","endLine":9,"endColumn":6},{"ruleId":"410","replacedBy":"441"},{"ruleId":"412","replacedBy":"442"},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"403","severity":1,"message":"419","line":2,"column":10,"nodeType":"405","messageId":"406","endLine":2,"endColumn":14},{"ruleId":"403","severity":1,"message":"420","line":2,"column":16,"nodeType":"405","messageId":"406","endLine":2,"endColumn":20},{"ruleId":"403","severity":1,"message":"435","line":2,"column":39,"nodeType":"405","messageId":"406","endLine":2,"endColumn":50},{"ruleId":"403","severity":1,"message":"436","line":2,"column":52,"nodeType":"405","messageId":"406","endLine":2,"endColumn":58},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"437","line":2,"column":82,"nodeType":"405","messageId":"406","endLine":2,"endColumn":90},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"403","severity":1,"message":"443","line":3,"column":8,"nodeType":"405","messageId":"406","endLine":3,"endColumn":13},{"ruleId":"403","severity":1,"message":"444","line":6,"column":8,"nodeType":"405","messageId":"406","endLine":6,"endColumn":17},{"ruleId":"403","severity":1,"message":"445","line":7,"column":10,"nodeType":"405","messageId":"406","endLine":7,"endColumn":20},{"ruleId":"403","severity":1,"message":"446","line":8,"column":8,"nodeType":"405","messageId":"406","endLine":8,"endColumn":12},{"ruleId":"403","severity":1,"message":"447","line":9,"column":8,"nodeType":"405","messageId":"406","endLine":9,"endColumn":11},{"ruleId":"403","severity":1,"message":"448","line":10,"column":8,"nodeType":"405","messageId":"406","endLine":10,"endColumn":18},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"403","severity":1,"message":"449","line":3,"column":9,"nodeType":"405","messageId":"406","endLine":3,"endColumn":12},{"ruleId":"403","severity":1,"message":"450","line":3,"column":14,"nodeType":"405","messageId":"406","endLine":3,"endColumn":17},{"ruleId":"429","severity":1,"message":"430","line":7,"column":5,"nodeType":"431","messageId":"432","endLine":9,"endColumn":6},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"429","severity":1,"message":"430","line":7,"column":5,"nodeType":"431","messageId":"432","endLine":9,"endColumn":6},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"429","severity":1,"message":"430","line":7,"column":5,"nodeType":"431","messageId":"432","endLine":9,"endColumn":6},{"ruleId":"410","replacedBy":"451"},{"ruleId":"412","replacedBy":"452"},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"429","severity":1,"message":"430","line":7,"column":5,"nodeType":"431","messageId":"432","endLine":9,"endColumn":6},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"429","severity":1,"message":"430","line":7,"column":5,"nodeType":"431","messageId":"432","endLine":9,"endColumn":6},{"ruleId":"403","severity":1,"message":"435","line":2,"column":39,"nodeType":"405","messageId":"406","endLine":2,"endColumn":50},{"ruleId":"403","severity":1,"message":"436","line":2,"column":52,"nodeType":"405","messageId":"406","endLine":2,"endColumn":58},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"437","line":2,"column":82,"nodeType":"405","messageId":"406","endLine":2,"endColumn":90},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"429","severity":1,"message":"430","line":7,"column":5,"nodeType":"431","messageId":"432","endLine":9,"endColumn":6},{"ruleId":"410","replacedBy":"453"},{"ruleId":"412","replacedBy":"454"},{"ruleId":"403","severity":1,"message":"435","line":2,"column":39,"nodeType":"405","messageId":"406","endLine":2,"endColumn":50},{"ruleId":"403","severity":1,"message":"436","line":2,"column":52,"nodeType":"405","messageId":"406","endLine":2,"endColumn":58},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"437","line":2,"column":82,"nodeType":"405","messageId":"406","endLine":2,"endColumn":90},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"403","severity":1,"message":"443","line":3,"column":8,"nodeType":"405","messageId":"406","endLine":3,"endColumn":13},{"ruleId":"403","severity":1,"message":"444","line":6,"column":8,"nodeType":"405","messageId":"406","endLine":6,"endColumn":17},{"ruleId":"403","severity":1,"message":"445","line":7,"column":10,"nodeType":"405","messageId":"406","endLine":7,"endColumn":20},{"ruleId":"403","severity":1,"message":"446","line":8,"column":8,"nodeType":"405","messageId":"406","endLine":8,"endColumn":12},{"ruleId":"403","severity":1,"message":"447","line":9,"column":8,"nodeType":"405","messageId":"406","endLine":9,"endColumn":11},{"ruleId":"403","severity":1,"message":"448","line":10,"column":8,"nodeType":"405","messageId":"406","endLine":10,"endColumn":18},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"429","severity":1,"message":"430","line":7,"column":5,"nodeType":"431","messageId":"432","endLine":9,"endColumn":6},{"ruleId":"403","severity":1,"message":"435","line":2,"column":39,"nodeType":"405","messageId":"406","endLine":2,"endColumn":50},{"ruleId":"403","severity":1,"message":"436","line":2,"column":52,"nodeType":"405","messageId":"406","endLine":2,"endColumn":58},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"437","line":2,"column":82,"nodeType":"405","messageId":"406","endLine":2,"endColumn":90},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"429","severity":1,"message":"430","line":7,"column":5,"nodeType":"431","messageId":"432","endLine":9,"endColumn":6},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"429","severity":1,"message":"430","line":7,"column":5,"nodeType":"431","messageId":"432","endLine":9,"endColumn":6},{"ruleId":"403","severity":1,"message":"435","line":2,"column":39,"nodeType":"405","messageId":"406","endLine":2,"endColumn":50},{"ruleId":"403","severity":1,"message":"436","line":2,"column":52,"nodeType":"405","messageId":"406","endLine":2,"endColumn":58},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"437","line":2,"column":82,"nodeType":"405","messageId":"406","endLine":2,"endColumn":90},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"429","severity":1,"message":"430","line":7,"column":5,"nodeType":"431","messageId":"432","endLine":9,"endColumn":6},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"403","severity":1,"message":"443","line":3,"column":8,"nodeType":"405","messageId":"406","endLine":3,"endColumn":13},{"ruleId":"403","severity":1,"message":"455","line":6,"column":8,"nodeType":"405","messageId":"406","endLine":6,"endColumn":17},{"ruleId":"403","severity":1,"message":"456","line":7,"column":8,"nodeType":"405","messageId":"406","endLine":7,"endColumn":20},{"ruleId":"403","severity":1,"message":"457","line":8,"column":8,"nodeType":"405","messageId":"406","endLine":8,"endColumn":21},{"ruleId":"403","severity":1,"message":"458","line":23,"column":8,"nodeType":"405","messageId":"406","endLine":23,"endColumn":12},{"ruleId":"403","severity":1,"message":"459","line":24,"column":8,"nodeType":"405","messageId":"406","endLine":24,"endColumn":13},{"ruleId":"403","severity":1,"message":"460","line":25,"column":8,"nodeType":"405","messageId":"406","endLine":25,"endColumn":13},{"ruleId":"403","severity":1,"message":"461","line":26,"column":8,"nodeType":"405","messageId":"406","endLine":26,"endColumn":13},{"ruleId":"403","severity":1,"message":"462","line":27,"column":8,"nodeType":"405","messageId":"406","endLine":27,"endColumn":13},{"ruleId":"403","severity":1,"message":"463","line":28,"column":8,"nodeType":"405","messageId":"406","endLine":28,"endColumn":13},{"ruleId":"403","severity":1,"message":"464","line":34,"column":5,"nodeType":"405","messageId":"406","endLine":34,"endColumn":17},{"ruleId":"403","severity":1,"message":"465","line":991,"column":19,"nodeType":"405","messageId":"406","endLine":991,"endColumn":24},{"ruleId":"410","replacedBy":"466"},{"ruleId":"412","replacedBy":"467"},{"ruleId":"403","severity":1,"message":"435","line":2,"column":39,"nodeType":"405","messageId":"406","endLine":2,"endColumn":50},{"ruleId":"403","severity":1,"message":"436","line":2,"column":52,"nodeType":"405","messageId":"406","endLine":2,"endColumn":58},{"ruleId":"403","severity":1,"message":"426","line":2,"column":60,"nodeType":"405","messageId":"406","endLine":2,"endColumn":68},{"ruleId":"403","severity":1,"message":"427","line":2,"column":70,"nodeType":"405","messageId":"406","endLine":2,"endColumn":80},{"ruleId":"403","severity":1,"message":"437","line":2,"column":82,"nodeType":"405","messageId":"406","endLine":2,"endColumn":90},{"ruleId":"403","severity":1,"message":"428","line":2,"column":92,"nodeType":"405","messageId":"406","endLine":2,"endColumn":101},{"ruleId":"403","severity":1,"message":"468","line":5,"column":8,"nodeType":"405","messageId":"406","endLine":5,"endColumn":29},"no-unused-vars","'Content' is defined but never used.","Identifier","unusedVar","'navHeight' is assigned a value but never used.","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","no-native-reassign",["469"],"no-negated-in-lhs",["470"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["469"],["470"],"'Grid' is defined but never used.","'Cell' is defined but never used.","'pic' is defined but never used.","'Container' is defined but never used.",["469"],["470"],"'Navigation' is defined but never used.","'CardMenu' is defined but never used.","'IconButton' is defined but never used.","'CardMedia' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["469"],["470"],"'CardActions' is defined but never used.","'Button' is defined but never used.","'CardText' is defined but never used.","'Projects' is defined but never used.",["469"],["470"],["469"],["470"],"'Paper' is defined but never used.","'PropTypes' is defined but never used.","'withStyles' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Typography' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.",["469"],["470"],["469"],["470"],"'teslaLogo' is defined but never used.","'sudokuVector' is defined but never used.","'MLProject1PDF' is defined but never used.","'pic9' is defined but never used.","'pic10' is defined but never used.","'pic11' is defined but never used.","'pic12' is defined but never used.","'pic13' is defined but never used.","'pic14' is defined but never used.","'TabContainer' is assigned a value but never used.","'value' is assigned a value but never used.",["469"],["470"],"'registerServiceWorker' is defined but never used.","no-global-assign","no-unsafe-negation"]