[{"/Users/patrickrademacher/REACT/react-portfolio/src/App.js":"1","/Users/patrickrademacher/REACT/react-portfolio/src/components/contact.js":"2","/Users/patrickrademacher/REACT/react-portfolio/src/components/aboutMe.js":"3","/Users/patrickrademacher/REACT/react-portfolio/src/components/landingpage.js":"4","/Users/patrickrademacher/REACT/react-portfolio/src/components/testingpage.js":"5","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningProject0.js":"6","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningProject1.js":"7","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationProject1.js":"8","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationProject0.js":"9","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentMain.js":"10","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Fractals/FractalsProject0.js":"11","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/SoftwareEngineering/SoftwareEngineeringMain.js":"12","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject0.js":"13","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Databases/DatabasesMain.js":"14","/Users/patrickrademacher/REACT/react-portfolio/src/components/main.js":"15","/Users/patrickrademacher/REACT/react-portfolio/src/components/resume.js":"16","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject0.js":"17","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject1.js":"18","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/InternetworkingProtocols/InternetworkingProtocolsMain.js":"19","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FunctionalProgramming/FunctionalProgrammingMain.js":"20","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FunctionalProgramming/FunctionalProgrammingProject0.js":"21","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentProject0.js":"22","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationProject2.js":"23","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceMain.js":"24","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject2.js":"25","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningProject2.js":"26","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/InternetworkingProtocols/InternetworkingProtocolsProject0.js":"27","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject1.js":"28","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/SoftwareEngineering/SoftwareEngineeringProject0.js":"29","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/OpenSource/OpenSourceMain.js":"30","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationMain.js":"31","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Databases/DatabasesProject0.js":"32","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingMain.js":"33","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/OpenSource/OpenSourceProject0.js":"34","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Fractals/FractalsMain.js":"35","/Users/patrickrademacher/REACT/react-portfolio/src/components/projects.js":"36","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningMain.js":"37","/Users/patrickrademacher/REACT/react-portfolio/src/index.js":"38","/Users/patrickrademacher/REACT/react-portfolio/src/registerServiceWorker.js":"39","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ModelingAndSimulationInPython/ModelingAndSimulationInPythonMain.js":"40","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ModelingAndSimulationInPython/ModelingAndSimulationInPythonProject0.js":"41","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ProjectPage/ProjectPageMain.js":"42"},{"size":2179,"mtime":1608793964690,"results":"43","hashOfConfig":"44"},{"size":5848,"mtime":1609400175848,"results":"45","hashOfConfig":"44"},{"size":2863,"mtime":1606660105565,"results":"46","hashOfConfig":"44"},{"size":5038,"mtime":1609369657576,"results":"47","hashOfConfig":"44"},{"size":20438,"mtime":1609871042222,"results":"48","hashOfConfig":"44"},{"size":3612,"mtime":1609396135218,"results":"49","hashOfConfig":"44"},{"size":3588,"mtime":1609396175591,"results":"50","hashOfConfig":"44"},{"size":3243,"mtime":1609395578556,"results":"51","hashOfConfig":"44"},{"size":3243,"mtime":1609395571760,"results":"52","hashOfConfig":"44"},{"size":2267,"mtime":1609398311783,"results":"53","hashOfConfig":"44"},{"size":3408,"mtime":1609396616754,"results":"54","hashOfConfig":"44"},{"size":2309,"mtime":1609399329477,"results":"55","hashOfConfig":"44"},{"size":3531,"mtime":1609397205139,"results":"56","hashOfConfig":"44"},{"size":2361,"mtime":1609872093359,"results":"57","hashOfConfig":"44"},{"size":669,"mtime":1608784710654,"results":"58","hashOfConfig":"44"},{"size":1270,"mtime":1609870210035,"results":"59","hashOfConfig":"44"},{"size":5849,"mtime":1609394433548,"results":"60","hashOfConfig":"44"},{"size":16366,"mtime":1609394784209,"results":"61","hashOfConfig":"44"},{"size":2336,"mtime":1609398325052,"results":"62","hashOfConfig":"44"},{"size":2281,"mtime":1609398319872,"results":"63","hashOfConfig":"44"},{"size":3509,"mtime":1609397619423,"results":"64","hashOfConfig":"44"},{"size":3495,"mtime":1609396585615,"results":"65","hashOfConfig":"44"},{"size":3243,"mtime":1609395585967,"results":"66","hashOfConfig":"44"},{"size":21500,"mtime":1609873217414,"results":"67","hashOfConfig":"44"},{"size":3449,"mtime":1609395467789,"results":"68","hashOfConfig":"44"},{"size":3582,"mtime":1609396255825,"results":"69","hashOfConfig":"44"},{"size":3511,"mtime":1609397579985,"results":"70","hashOfConfig":"44"},{"size":3541,"mtime":1609397238633,"results":"71","hashOfConfig":"44"},{"size":3331,"mtime":1609399679622,"results":"72","hashOfConfig":"44"},{"size":2255,"mtime":1609398388618,"results":"73","hashOfConfig":"44"},{"size":5305,"mtime":1609379120502,"results":"74","hashOfConfig":"44"},{"size":3603,"mtime":1609398926959,"results":"75","hashOfConfig":"44"},{"size":3979,"mtime":1609398379932,"results":"76","hashOfConfig":"44"},{"size":3436,"mtime":1609396946218,"results":"77","hashOfConfig":"44"},{"size":2231,"mtime":1609398303861,"results":"78","hashOfConfig":"44"},{"size":94656,"mtime":1606749498766,"results":"79","hashOfConfig":"44"},{"size":6373,"mtime":1609872750875,"results":"80","hashOfConfig":"44"},{"size":459,"mtime":1607277820121,"results":"81","hashOfConfig":"44"},{"size":4384,"mtime":1606613719687,"results":"82","hashOfConfig":"44"},{"size":2454,"mtime":1609398177607,"results":"83","hashOfConfig":"44"},{"size":3682,"mtime":1609397478536,"results":"84","hashOfConfig":"44"},{"size":1414,"mtime":1609871916289,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},"89d46y",{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"89"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"89"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"89"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"89"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"89"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"89"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"89"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"89"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"89"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"128"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"112"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},"/Users/patrickrademacher/REACT/react-portfolio/src/App.js",["198","199"],"import React, { Component } from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\nimport Main from './components/main.js';\nimport { Link } from 'react-router-dom';\n//import { faGasPump, faHome } from \"@fortawesome/free-solid-svg-icons\";\n//import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nclass App extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            navHeight: '8vh'\n        }\n    }\n\n    render() {\n\n        let navHeight = (window.innerHeight * .55).toString() + 'px';\n        return (\n            <div className=\"demo-big-content\" >\n                <Layout style={{top: '0', height: '100vh'}}>\n                    <Header className=\"header-color\" style={{height: this.state.navHeight, minHeight: '5px'}} title={<Link style={{color: 'white'}} to=\"/\">My Portfolio</Link>} scroll>\n                        <Navigation>\n                            <Link to=\"/resume\">Resume</Link>\n                            <Link to=\"/aboutme\">About Me</Link>\n                            <Link to=\"/projects\">Projects</Link>\n                            <Link to=\"/contact\">Contact</Link>\n                        </Navigation>\n                    </Header>\n                    <Drawer title={<Link style={{textDecoration: 'none', color: 'black', }} to=\"/\">My Portfolio</Link>} scroll>\n                        <Navigation>\n                            <Link to=\"/resume\">Resume</Link>\n                            <Link to=\"/aboutme\">About Me</Link>\n                            <Link to=\"/projects\">Projects</Link>\n                            <Link to=\"/contact\">Contact</Link>\n                        </Navigation>\n                    </Drawer>\n                \n                <div className=\"page-content\"  />\n                <Main /> \n                </Layout>\n\n            </div>\n        );\n    //return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'I believe in Hua Mulan'), React.createElement('p', null, '...as do I...'), React.createElement('person', null, null));\n    }\n}\n\nexport default App;",["200","201"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/contact.js",["202","203"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/aboutMe.js",["204"],"import React, { useState, useEffect } from \"react\";\nimport sparty from \"./sparty.png\";\nimport {Grid, Cell} from \"react-mdl\";\nimport backgroundVid from \"./backgroundVideo.mp4\";\nfunction AboutMe() {\n  const [offsetY, setOffsetY] = useState(0);\n  const handleScroll = () => setOffsetY(window.pageYOffset);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  \n\n  const renderContent = () => (\n    <>\n  \n      <div className=\"Parallax__content__heading\">\n        <h1 className=\"Parallax__content__heading__text\">Closure</h1>\n        <h2 className=\"Parallax__content__heading__caption\">\n          Your one-stop source of Web Development tricks\n        </h2>\n      </div>\n      <div className=\"Parallax__content__cta\">\n        <p>\n          <b>1. Like the video.</b> Because it helps me and my channel\n        </p>\n        <p>\n          <b>2. Like the video.</b> To see more content like that!\n        </p>\n        <p>\n          <b>3. Follow the Github link.</b> And play with this code yourself!\n        </p>\n      </div>\n    </>\n  );\n\n  return (\n      <div>\n      <video className='videoTag' style={{zIndex: '-4'}} autoPlay loop muted>\n            <source src={backgroundVid} type='video/mp4' />\n      </video>\n      <Grid >\n        <Cell col={12}>\n      <section className=\"Parallax\">\n      <div\n        className=\"Parallax__background-main\"\n        style={{ transform: `translateY(-${offsetY * 0.5}px)` }}\n        \n      />\n      \n      <div className=\"Parallax__content\">{renderContent()}</div>\n      </section>\n      </Cell>\n      </Grid>\n      <section className=\"Parallax\" style={{marginTop: '700px'}} />\n      <Grid >\n        <Cell col={12}>\n      <section className=\"Parallax\">\n      <div\n        className=\"Parallax__background-michiganstate\"\n        style={{ transform: `translateY(-${offsetY * 0.5}px)` }}\n        \n      />\n      <div className=\"Parallax__background-michiganstateSparty\">\n        <img className=\"Parallax__background-michiganstateSpartyRun\" src={sparty} style={{width: '10%'}} />\n      </div>\n      \n      <div className=\"Parallax__content\">{renderContent()}</div>\n      </section>\n      </Cell>\n      </Grid>\n      <section className=\"Parallax\" style={{marginTop: '1000px'}} />\n    <section className=\"Parallax\">\n      <div\n        className=\"Parallax__background-guitar\"\n        style={{ transform: `translateY(-${offsetY * 0.5}px)` }}\n        \n      />\n      <div\n        className=\"Parallax__background-guitar-notes\"\n        style={{ transform: `translateY(${offsetY * 0.8}px)`, filter: 'invert(87%) sepia(92%) saturate(987%) hue-rotate(81deg) brightness(97%) contrast(95%)' }}\n      />\n      <div className=\"Parallax__content\">{renderContent()}</div>\n      </section>\n      </div>  \n    \n    \n    \n  );\n}\n\nexport default AboutMe;\n",["205","206"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/landingpage.js",["207","208","209","210","211"],"import React, {Component} from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport pic from './resume_picpic.png';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport backgroundVid from './backgroundVideo.mp4';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport headshot from './headshot0.jpg';\n\nclass LandingPage extends Component {\n    constructor(props){\n        super(props);\n        this.state = { windowWidth: 0,//window.innerWidth, \n                       windowHeight: 0,//window.innerHeight,\n                       pictureWidth: Math.round((window.innerWidth/7.6)),\n                       pictureHeight: Math.round((window.innerHeight/3.3)),\n                       counter: 0};\n    }\n    reportWindowSize = () => {\n        console.log('WW: ' + this.state.windowWidth);\n        console.log('IH: ' + this.state.pictureHeight);\n        console.log('PW: ' + this.state.pictureWidth)\n        this.setState({windowWidth: window.innerWidth, windowHeight: window.innerHeight, pictureWidth: (Math.round((window.innerWidth/7.6))), pictureHeight: Math.round((window.innerHeight/2.8))})\n      }\n\n      \n\n      \n    render() {\n        window.addEventListener('resize', this.reportWindowSize);\n        \n\n        return(\n            <div className=\"landing-grid\">\n            <video className='videoTag' autoPlay loop muted>\n                <source src={backgroundVid} type='video/mp4' />\n            </video>\n                <Row style={{height: '2.8vh'}} />\n                    <Row style={{alignItems: 'flex-start', display: 'flex', justifyContent: 'center'}}>\n                        <Col />\n                        <Col xs = {6} style = {{justifyContent: 'center'}}>\n                            <img src = {headshot} style ={{borderRadius: '100%', border: 'solid #ccc 2px', width: '290px', margin: 'auto', position: 'sticky'}}></img>\n                        </Col>\n                        <Col />\n                    </Row>\n                    <Row style={{height: '57vh', alignItems: 'flex-end', bottom: '0', paddingTop: '2vh', position: 'fixed', width: '100%', display: 'flex'}}>\n                        \n                            <Col />\n                            <Col className=\"banner-text\" xs={12} sm={10} md={8} lg={8} xl={8}>\n                                \n                                    <h1>Patrick Rademacher: \n                                        <br></br>\n                                    </h1>  \n                                    <h2>\n                                        Master of Science in Computer Science\n                                    </h2>\n                                    <div style={{alignContent: 'space-between'}}>\n                                        <hr />\n                                        <Row>\n                                            \n                                            <Col xs={6} style={{textAlign: 'center'}}>\n                                                <p>Python | C | C++ | Javascript | Java | Haskell | SQL</p>\n                                            </Col>\n                                            <Col xs={6} style={{textAlign: 'center'}}>\n                                                <p>HTML/CSS | React | Bootstrap | RestFUL API | Node.js</p>\n                                            </Col>\n                                        \n                                        </Row>\n                                        <hr />\n                                        </div>\n\n                                {/*Github */}\n                                <div className='social-links'>\n                                    \n                                        <a href=\"http://google.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <i className=\"fab fa-github\"></i>\n                                        </a>\n                                        {/*Linked In */}\n                                        <a href=\"http://google.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <i className=\"fab fa-linkedin\"></i>\n                                        </a>\n\n                                        <a href=\"http://google.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <i className=\"fab fa-amazon\"></i>\n                                        </a>\n                               \n                                </div>\n                                <div style={{height: '3px'}} />\n                            </Col>\n                            <Col />\n                            \n                        \n\n                    </Row>\n                    \n                        \n                        \n                        \n                \n                    </div>\n                            \n\n                       \n                    \n        )\n    }\n}\n\nexport default LandingPage;","/Users/patrickrademacher/REACT/react-portfolio/src/components/testingpage.js",["212","213"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningProject0.js",["214","215","216","217","218"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MachineLearningProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://www.researchgate.net/profile/Yuling_Jiao2/publication/330617733/figure/fig1/AS:718798407602176@1548386303228/Real-samples-and-generated-samples-obtained-by-VGrow-KL-on-MNIST_Q320.jpg) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>MNIST</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button style={{fontSize: '1.45em'}} colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n        </div>\n        )\n    }\n}\n\nexport default MachineLearningProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningProject1.js",["219","220","221","222","223"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MachineLearningProject1 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://www.researchgate.net/profile/Lubna_Emad/publication/331991626/figure/fig3/AS:740691793678336@1553606093170/The-initialization-stage_Q320.jpg) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>K MEANS & FUZZY C MEANS</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button style={{fontSize: '1.45em'}} colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n        </div>\n        )\n    }\n}\n\nexport default MachineLearningProject1;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationProject1.js",["224","225","226","227"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationProject0.js",["228","229","230","231"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass NumericalComputationProject0 extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://img.pngio.com/headphones-icon-headphones-png-256_256.png) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>EUPHONOMIMESIS</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorTwo' />\n                                        <p style={{textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button style={{fontSize: '1.45em'}} colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default NumericalComputationProject0;",["232","233"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentMain.js",["234","235","236","237","238","239","240","241","242"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport {Row, Col} from 'react-bootstrap';\n\nclass FrontEndWebDevelopmentMain extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Row>\n                                <Col xs={12} sm={12} md={12} lg={12} xl={12} >\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(0)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}> </CardTitle>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center', background: 'url(https://img.icons8.com/cotton/2x/baseball-ball.png) center', backgroundRepeat: 'no-repeat', width: '324px', height: '100%'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '1.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>BATTER ON DECK</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                \n\n                    </ Row>\n                </div>\n        )\n    }\n}\n\nexport default FrontEndWebDevelopmentMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Fractals/FractalsProject0.js",["243","244","245","246","247"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass FractalsProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://jbum.com/pixmagic/xor12-24-48.jpg) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>FRACTALS JOURNAL</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button style={{fontSize: '1.45em'}} colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n        </div>\n        )\n    }\n}\n\nexport default FractalsProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/SoftwareEngineering/SoftwareEngineeringMain.js",["248","249","250","251","252","253","254","255"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject0.js",["256","257","258","259","260"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Databases/DatabasesMain.js",["261","262","263","264","265","266","267","268"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/main.js",["269"],"import React from 'react';\nimport LandingPage from './landingpage';\nimport AboutMe from './aboutMe';\nimport Contact from './contact';\nimport Projects from './projects';\nimport Resume from './resume';\nimport TestingPage from './testingpage';\nimport { Switch, Route } from 'react-router-dom';\n\n\nconst Main = () => (\n        <Switch>\n            <Route exact path=\"/\" component ={LandingPage} />\n            <Route path=\"/aboutme\" component={AboutMe} />\n            <Route path=\"/resume\" component={Resume} />\n            <Route path=\"/projects\" component={TestingPage} />\n            <Route path=\"/contact\" component={Contact} />\n        </Switch>\n)\n\nexport default Main;",["270","271"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/resume.js",["272","273","274"],"import React from 'react';\nimport samplePDF from './Rademacher_Patrick_Resume.pdf';\nimport backgroundVid from './backgroundVideo.mp4'\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport {Row, Col} from 'react-bootstrap';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nexport default function Resume() {\n  return (\n    <div style={{justifyContent: 'center', width: '100%'}}>\n    <video className='videoTagResume' autoPlay loop muted>\n    <source src={backgroundVid} type='video/mp4' />\n    </video>\n    <div className = 'separatorTwo' />\n    <div style={{justifyContent: 'center', display: 'flex'}}>\n    \n\n        <button\n         style={{color: 'rgb(0, 157, 234)', backgroundColor: '#0cf2ad', border: 'solid white 2px', fontFamily: \"'Fredoka One'\", padding: '3px 3px', fontSize: '1.4em'}}>\n           <a style={{color: 'rgb(0, 157, 234)', backgroundColor: '#0cf2ad'}} href={samplePDF} target=\"_blank\">CLICK HERE TO DOWNLOAD PDF</a></button>\n    </div>\n    <div className = 'separatorTwo' />\n\n    <div style={{justifyContent: 'center', display: 'flex'}}>\n\n    <Document className=\"resume-center\" file={samplePDF}>\n      <Page  pageNumber={1} />\n    </Document>\n    \n    </div>\n    </div>\n    \n  );\n}","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject0.js",["275","276","277","278"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject1.js",["279","280","281","282","283"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/InternetworkingProtocols/InternetworkingProtocolsMain.js",["284","285","286","287","288","289","290","291"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FunctionalProgramming/FunctionalProgrammingMain.js",["292","293","294","295","296","297","298","299","300"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FunctionalProgramming/FunctionalProgrammingProject0.js",["301","302","303","304","305"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass FunctionalProgrammingProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://www.pozirk.com/wp-content/uploads/2016/05/sudoku256x256.png) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>SUDOKU SOLVER</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button style={{fontSize: '1.45em'}} colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n        </div>\n        )\n    }\n}\n\nexport default FunctionalProgrammingProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentProject0.js",["306","307","308","309","310"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationProject2.js",["311","312","313","314"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceMain.js",["315","316","317","318","319","320","321","322","323","324","325","326","327","328"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport Paper from '@material-ui/core/Paper';\n//import { Tabs } from '@material-ui/core';\n//import Tab from '@material-ui/core/Tab';\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Row, Col} from 'react-bootstrap';\n\nclass ArtificialIntelligenceMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    yeahYeah = () => {\n        this.setState({idk: 'yea yea yea'})\n    }\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Row>\n                                <Col xs={12} sm={12} md={12} lg={4} xl={4} >\n                                    <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                            <div style={{justifyContent: 'center', margin: 'auto', width: '100%'}}>\n                                                <Row style={{border: 'solid #0cf2ad 4px', fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: '#0cf2ad', justifyContent: 'center', margin: 'auto', flexWrap: 'nowrap'}}>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>1</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>8</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>6</Col>\n                                                </Row>\n                                                <Row style={{border: 'solid #0cf2ad 4px', fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: '#0cf2ad', justifyContent: 'center', margin: 'auto', flexWrap: 'nowrap'}}>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>&nbsp;</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>2</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>3</Col>\n                                                </Row>\n                                                <Row style={{border: 'solid #0cf2ad 4px', fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: '#0cf2ad', justifyContent: 'center', margin: 'auto', flexWrap:'nowrap'}}>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>5</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>4</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>7</Col>\n                                                </Row>\n                                            </div>   \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '8.2vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative', alignSelf: 'flex-end'}}>8 PUZZLE SOLVER</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                <Col xs={12} sm={12} md={12} lg={4} xl={4} >\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(1)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                            <div style={{display: 'block', justifyContent: 'center', margin: 'auto', width: '100%', textAlign: 'center'}}>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh', justifyContent: 'center'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh', justifyContent: 'center', margin: 'auto', position: 'relative'}}>♕</Col>\n                                                </Row>\n                                            </div>   \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '4.7vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative', alignSelf: 'flex-end'}}>8 QUEENS SOLVER</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                <Col xs={12} sm={12} md={12} lg={4} xl={4}>\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(2)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}> </CardTitle>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center', width: '324px', height: '100%', background: 'url(https://img.pngio.com/headphones-icon-headphones-png-256_256.png) center', backgroundRepeat: 'no-repeat'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '1.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>EUPHONOMIMESIS</p>\n                                    </Card>\n                                </Col>\n                                <div className='separator' />\n\n                    </ Row>\n                </div>\n        )\n    }\n}\nexport default ArtificialIntelligenceMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject2.js",["329","330","331","332","333","334","335"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport {Row, Col} from 'react-bootstrap';\n\nclass ArtificialIntelligenceProject2 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\" >\n            <div className = \"separator\" />\n            <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n            <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://img.pngio.com/headphones-icon-headphones-png-256_256.png) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>EUPHONOMIMESIS</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorTwo' />\n                                        <p style={{textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button style={{fontSize: '1.45em'}} colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n        </div>\n        )\n    }\n}\n\nexport default ArtificialIntelligenceProject2;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningProject2.js",["336","337","338","339","340"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/InternetworkingProtocols/InternetworkingProtocolsProject0.js",["341","342","343","344","345"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject1.js",["346","347","348","349","350"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MusicAndDigitalSignalProcessingProject1 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://findicons.com/files/icons/2315/default_icon/256/media_synth.png) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>PURE DATA SYNTHESIZER</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button style={{fontSize: '1.45em'}} colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n        </div>\n        )\n    }\n}\n\nexport default MusicAndDigitalSignalProcessingProject1;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/SoftwareEngineering/SoftwareEngineeringProject0.js",["351","352","353","354","355"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/OpenSource/OpenSourceMain.js",["356","357","358","359","360","361","362","363","364"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationMain.js",["365","366","367","368","369","370","371","372"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport {Row, Col} from 'react-bootstrap';\nclass NumericalComputationMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    yeahYeah = () => {\n        this.setState({idk: 'yea yea yea'})\n    }\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Row>\n                                <Col xs={12} sm={12} md={12} lg={4} xl={4} >\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '49vh', width: '324px', background: 'url(https://www.researchgate.net/profile/Yuling_Jiao2/publication/330617733/figure/fig1/AS:718798407602176@1548386303228/Real-samples-and-generated-samples-obtained-by-VGrow-KL-on-MNIST_Q320.jpg) center / cover'}} onClick={() => this.props.changeShowing(0)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '17.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid white 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>MNIST</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                <Col xs={12} sm={12} md={12} lg={4} xl={4} >\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '49vh', width: '324px', \n                                background: 'url(https://www.researchgate.net/profile/Lubna_Emad/publication/331991626/figure/fig3/AS:740691793678336@1553606093170/The-initialization-stage_Q320.jpg) center / cover'}} onClick={() => this.props.changeShowing(1)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '17.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid white 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>K Means and Fuzzy C Means</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                <Col xs={12} sm={12} md={12} lg={4} xl={4}>\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '49vh', width: '324px', background: 'url(https://is1-ssl.mzstatic.com/image/thumb/Purple114/v4/d5/5a/3a/d55a3a88-fb32-88c5-cba6-24120d5b8cdf/source/256x256bb.jpg) center / cover'}} onClick={() => this.props.changeShowing(2)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '17.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid white 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>NBA Draft Longevity Predictor</p>\n                                    </Card> \n                                </Col>\n                                <div className='separator' />\n\n                    </ Row>\n                </div>\n        )\n    }\n}\n\nexport default NumericalComputationMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Databases/DatabasesProject0.js",["373","374","375","376","377","378","379"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport {Row, Col} from 'react-bootstrap';\n\nclass DatabasesProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                     <div className = \"separatorThree\" />\n                    <Row style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Col xs={2} sm={2} md={2} lg={3} xl={3} />\n                                <Col xs={8} sm={8} md={8} lg={6} xl={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://free-icon-rainbow.com/i/icon_05411/icon_054110_256.jpg) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>TESLA DATABASE</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{textAlign: 'center', width: '84%', justifyContent: 'center', margin: 'auto'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button style={{fontSize: '1.45em'}} colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Col>\n                                <Col xs={2} sm={2} md={2} lg={3} xl={3} />\n            </ Row>\n        </div>\n        )\n    }\n}\n\nexport default DatabasesProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingMain.js",["380","381","382","383","384","385","386","387","388"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport {Row, Col} from 'react-bootstrap';\n\nclass MusicAndDigitalSignalProcessingMain extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Row style={{alignItems: 'center'}}>\n                                <Col xs={12} sm={12} md={12} lg={6} xl={6} >\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(0)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}> </CardTitle>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center', background: 'url(https://www.shareicon.net/data/256x256/2016/08/19/817292_music_512x512.png) center', backgroundRepeat: 'no-repeat', width: '324px', height: '100%'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '1.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>PEDAL PI</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                <Col xs={12} sm={12} md={12} lg={6} xl={6}>\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '61.3vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(1)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}> </CardTitle>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center', background: 'url(https://findicons.com/files/icons/2315/default_icon/256/media_synth.png) center', backgroundRepeat: 'no-repeat', width: '324px', height: '100%'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '1.9vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>PURE DATA SYNTHESIZER</p>\n                                    </Card>\n                                    <div className='separator' />\n\n                                </Col>\n\n                    </ Row>\n                </div>\n        )\n    }\n}\n\nexport default MusicAndDigitalSignalProcessingMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/OpenSource/OpenSourceProject0.js",["389","390","391","392","393"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass OpenSourceProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://icon-library.com/images/business_444.png) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>UNCLE BUCK FINANCE CALCULATOR</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button style={{fontSize: '1.45em'}} colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n            </div>\n        )\n    }\n}\n\nexport default OpenSourceProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Fractals/FractalsMain.js",["394","395","396","397","398","399","400","401","402"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projects.js",["403","404","405","406","407","408","409","410","411","412","413","414","415","416","417"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport Paper from '@material-ui/core/Paper';\n//import { Tabs } from '@material-ui/core';\n//import Tab from '@material-ui/core/Tab';\nimport teslaLogo from './Tesla-01.png';\nimport sudokuVector from './sudokuVector.jpg';\nimport MLProject1PDF from './rademacher_ml_code1_writeup.pdf';\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport pic0 from \"./aiMedium.jpg\";\nimport pic1 from \"./machinelearningMedium.jpg\";\nimport pic2 from \"./databasesMedium.jpg\";\nimport pic3 from \"./internetMedium.jpg\";\nimport pic4 from \"./puredataMedium.jpg\";\nimport pic5 from \"./softwareengineeringMedium.jpg\";\nimport pic6 from \"./functionalprogrammingMedium.png\";\nimport pic7 from \"./frontendMedium.jpg\";\nimport pic8 from \"./fractalMedium.jpg\";\nimport pic9 from \"./algorithmsMedium.jpg\";\nimport pic10 from \"./theorycompMedium.jpg\";\nimport pic11 from \"./quantumMedium.jpg\";\nimport pic12 from \"./opensourceMedium.jpg\";\nimport pic13 from \"./numcompMedium.jpg\";\nimport pic14 from \"./modelingMedium.jpg\";\n\n\n\n\n\nlet TabContainer = (props) => {\nreturn (\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n      {props.children}\n    </Typography>\n  );\n}\n\n\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  label: {\n    color: \"magenta\"\n  },\n  indicator: {\n    bottom: \"none\",\n    backgroundColor: \"none !important\",\n    color: \"none !important\",\n    borderColor: 'none',\n    outline: 'none !important',\n    opacity: '1'\n  }\n});\n\nclass Projects extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = { value: null,\n                       rowIndex: 0, \n                       topRow: \"primary\", \n                       bottomRow: \"none\", \n                       middleTopRow: \"none\", \n                       middleBottomRow: \"none\", \n                       bottomBottomRow: \"none\",\n                       tabValues: [1, 1, 1, 1, 1],\n                       show: [false, false, false],\n                       currentlyShowing: false};\n    }\n\n    \n\n\n    handleChange = (event, value) => {\n        //this.setState({value: value });\n        console.log('hot dogs')\n        console.log(this.state.show)\n\n      };\n\n    handleChangeTop = (event, newValue) => {\n       this.setState({value: newValue});\n       this.setState({topRow: \"primary\", \n                      middleTopRow: \"none\", \n                      middleBottomRow: \"none\", \n                      bottomRow: \"none\", \n                      bottomBottomRow: \"none\",\n                      show: [false, false, false],\n                     // currentlyShowing: false,\n                      tabValues: [newValue, null, null, null, null],\n                      //rowIndex: \"0\"\n                      });\n        console.log(this.state.topRow);\n        console.log(this.state.middleTopRow);\n        console.log(this.state.middleBottomRow);\n        console.log(this.state.bottomRow);\n        console.log(this.state.bottomBottomRow);\n        console.log(this.state.tabValues)\n        console.log(this.state.show)\n        console.log(this.state.rowIndex)\n    }\n\n    handleChangeMiddleTop = (event, newValue) => {\n        this.setState({value: newValue});\n        this.setState({middleTopRow: \"primary\", \n                       middleBottomRow: \"none\", \n                       topRow: \"none\", \n                       bottomRow: \"none\", \n                       bottomBottomRow: \"none\",\n                       //show: [false, false, false],\n                       //currentlyShowing: false,\n                       tabValues: [null, newValue, null, null, null]\n                    });\n                    console.log(this.state.topRow);\n                    console.log(this.state.middleTopRow);\n                    console.log(this.state.middleBottomRow);\n                    console.log(this.state.bottomRow);\n                    console.log(this.state.bottomBottomRow);\n                    console.log(this.state.tabValues)\n                    console.log(this.state.show)\n                    console.log(this.state.rowIndex)\n    }\n\n    handleChangeMiddleBottom = (event, newValue) => {\n        this.setState({value: newValue});\n        this.setState({middleBottomRow: \"primary\", \n                       middleTopRow: \"none\", \n                       topRow: \"none\", \n                       bottomRow: \"none\", \n                       bottomBottomRow: \"none\",\n                       //show: [false, false, false],\n                       //currentlyShowing: false,\n                       tabValues: [null, null, newValue, null, null],\n                       rowIndex: 0\n                    });\n                    console.log(this.state.topRow);\n                    console.log(this.state.middleTopRow);\n                    console.log(this.state.middleBottomRow);\n                    console.log(this.state.bottomRow);\n                    console.log(this.state.bottomBottomRow);\n                    console.log(this.state.tabValues);\n                    console.log(this.state.show)\n                    console.log(this.state.rowIndex)\n    }\n\n    handleChangeBottom = (event, newValue) => {\n        this.setState({value: newValue});\n        this.setState({bottomRow: \"primary\", \n                       topRow: \"none\", \n                       middleTopRow: \"none\", \n                       middleBottomRow: \"none\", \n                       bottomBottomRow: \"none\",\n                       //show: [false, false, false],\n                       //currentlyShowing: false,\n                       tabValues: [null, null, null, newValue, null],\n                       rowIndex: \"0\"\n                    });\n                    console.log(this.state.topRow);\n                    console.log(this.state.middleTopRow);\n                    console.log(this.state.middleBottomRow);\n                    console.log(this.state.bottomRow);\n                    console.log(this.state.bottomBottomRow);\n                    console.log(this.state.tabValues) \n                    console.log(this.state.show)\n        console.log(this.state.rowIndex)                  \n    }\n\n    handleChangeBottomBottom = (event, newValue) => {\n        this.setState({value: newValue});\n        this.setState({bottomBottomRow: \"primary\", \n                       topRow: \"none\", \n                       middleTopRow: \"none\", \n                       middleBottomRow: \"none\", \n                       bottomRow: \"none\",\n                       //show: [false, false, false],\n                       //currentlyShowing: false,\n                       tabValues: [null, null, null, null, newValue],\n                       rowIndex: \"0\"\n                    });\n                    console.log(this.state.topRow);\n                    console.log(this.state.middleTopRow);\n                    console.log(this.state.middleBottomRow);\n                    console.log(this.state.bottomRow);\n                    console.log(this.state.bottomBottomRow);\n                    console.log(this.state.tabValues);\n                    console.log(this.state.show)\n                    console.log(this.state.rowIndex)\n    }\n    \n    handleShowCard = (event, rowIndy, numberOfItems) => {\n        let boolean = null;\n        if (this.state.currentlyShowing !== true){\n            boolean = true;\n            let cards = [];\n            for (let i = 0; i < numberOfItems; i++){\n                if (i === rowIndy){\n                    cards.push(true);\n                }\n                else{\n                    cards.push(false);\n                }\n            }\n        \n            this.setState({show: {...cards}});\n            this.setState({rowIndex: rowIndy});\n        }\n        else{\n            boolean = false;\n            let cards = [];\n            for (let i = 0; i < numberOfItems; i++){\n                cards.push(false);\n            }\n            this.setState({show: {...cards}, rowIndex: rowIndy})\n        }\n\n        this.setState({currentlyShowing: boolean})\n        console.log(this.state.currentlyShowing);\n    }\n\n    toggleCategories(){\n        if (this.state.value === 0 && this.state.topRow === \"primary\" && (this.state.rowIndex === 0)){\n            let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic0})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Puzzle Solver Using a*</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Queens Solver Using Genetic Algorithm</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Euphonomimesis</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Puzzle Solver Using a*</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n                </div>\n            )\n        }\n\n        else if(this.state.value === 0 && this.state.topRow === \"primary\" && this.state.rowIndex === 1){\n            let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic0})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: 'infinite', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Puzzle Solver Using a*</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Queens Solver Using Genetic Algorithm</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Euphonomimesis</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>\n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Queens Solver Using Genetic Algorithm</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n                </div>\n            )\n        }\n\n        else if (this.state.value === 0 && this.state.topRow === \"primary\" && this.state.rowIndex === 2){\n            let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic0})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Puzzle Solver Using a*</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Queens Solver Using Genetic Algorithm</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                 <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Euphonomimesis</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Euphonomimesis</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 1 && this.state.topRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic1})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>MNIST Handwritten Data Recognition</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>MNIST Handwritten Digit Recognition</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 1 && this.state.topRow === \"primary\" && this.state.rowIndex === 1){\n        let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic1})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>MNIST Handwritten Data Recognition</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 1 && this.state.topRow === \"primary\" && this.state.rowIndex === 2){\n        let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic1})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>MNIST Handwritten Data Recognition</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 2 && this.state.topRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic2})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n\n    \n    else if(this.state.value === 0 && this.state.middleTopRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic3})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PAT CHAT</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PAT CHAT</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 1 && this.state.middleTopRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 2;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic4})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={2} />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pedal Pi</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pure Data Synthesizer</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                                <div className=\"separator\" />\n                                <Cell col={2} />\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pedal Pi</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n    else if(this.state.value === 1 && this.state.middleTopRow === \"primary\" && this.state.rowIndex === 1){\n        let numOfItems = 2;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic4})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={2} />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pedal Pi</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pure Data Synthesizer</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                                <div className=\"separator\" />\n                                <Cell col={2} />\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pure Data Synthesizer</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 2 && this.state.middleTopRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic5})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Battlecode</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Battle Code</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    } \n\n    else if(this.state.value === 0 && this.state.middleBottomRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic6})`, height:'1500px', backgroundRepeat: 'no-repeat', backgroundPosition: 'center center'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Sudoku Solver</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Sudoku Solver</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n            \n    else if(this.state.value === 1 && this.state.middleBottomRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic7})`, height:'1500px', backgroundRepeat: 'no-repeat', backgroundPosition: 'center center'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Batter on Deck</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Batter on Deck</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }                    \n    \n    else if(this.state.value === 2 && this.state.middleBottomRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic8})`, height:'1500px', backgroundRepeat: 'no-repeat', backgroundPosition: 'center center'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Batter on Deck</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Batter on Deck</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n                        }\n                        \n                                \n                            \n                           \n                        \n\n\n    render() {\n          const { classes } = this.props;\n          const { value } = this.state;\n        return(\n            \n            <div style={{backgroundColor: '#eee'}} >\n                \n                <Tabs  indicatorColor={this.state.topRow} classes={{indicator: classes.indicator}} variant=\"fullWidth\" value={this.state.tabValues[0]} onChange={this.handleChangeTop} ripple>\n                    <Tab className=\"tabz\" label=\"Artificial Intelligence\"></Tab>\n                    <Tab className=\"tabz\" label=\"Machine Learning\"></Tab>\n                    <Tab className=\"tabz\" label=\"Databases\"></Tab>\n                </Tabs>\n               \n                \n                <Tabs variant=\"fullWidth\" indicatorColor={this.state.middleTopRow} classes={{indicator: classes.indicator}} value={this.state.tabValues[1]} onChange={this.handleChangeMiddleTop} ripple>\n                    <Tab className=\"tabz\" label=\"Internetworking Protocols\"></Tab>\n                    <Tab className=\"tabz\" label=\"Music and Digital Signal Processing\"></Tab>\n                    <Tab className=\"tabz\" label=\"Software Engineering\"></Tab>\n                </Tabs>\n\n                <Tabs variant=\"fullWidth\" indicatorColor={this.state.middleBottomRow} classes={{indicator: classes.indicator}} value={this.state.tabValues[2]} onChange={this.handleChangeMiddleBottom} ripple>\n                    <Tab className=\"tabz\" label=\"Functional Programming\"></Tab>\n                    <Tab className=\"tabz\" label=\"Front-End Web Development\"></Tab>\n                    <Tab className=\"tabz\" label=\"Fractals\"></Tab>\n                </Tabs>\n\n                <Tabs variant=\"fullWidth\" indicatorColor={this.state.bottomRow} classes={{indicator: classes.indicator}} value={this.state.tabValues[3]} onChange={this.handleChangeBottom} ripple>\n                    <Tab className=\"tabz\" label=\"Algorithms\"></Tab>\n                    <Tab className=\"tabz\" label=\"Theory of Computation\"></Tab>\n                    <Tab className=\"tabz\" label=\"Quantum Computing\"></Tab>\n                </Tabs>\n\n                <Tabs variant=\"fullWidth\" indicatorColor={this.state.bottomBottomRow} classes={{indicator: classes.label}} value={this.state.tabValues[4]} onChange={this.handleChangeBottomBottom} ripple>\n                    <Tab className=\"tabz\" label=\"Open Source\"></Tab>\n                    <Tab className=\"tabz\" label=\"Numerical Computation\" ></Tab>\n                    <Tab className=\"tabz\" label=\"Modeling and Simulation in Python\" ></Tab>\n                </Tabs>\n\n                <Grid className=\"projects-grid\">\n                    <Cell col={12}>\n                        <div className=\"content\">{this.toggleCategories()}</div>\n                    </Cell>\n                </Grid>\n            </div>\n\n        )\n    }\n}\n\nProjects.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n\nexport default withStyles(styles)(Projects);\n",["418","419"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningMain.js",["420","421","422","423","424","425","426","427","428","429","430","431","432","433"],"/Users/patrickrademacher/REACT/react-portfolio/src/index.js",["434"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <App />\n        </BrowserRouter>\n   , \n    document.getElementById('root'));\n","/Users/patrickrademacher/REACT/react-portfolio/src/registerServiceWorker.js",[],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ModelingAndSimulationInPython/ModelingAndSimulationInPythonMain.js",["435","436","437","438","439","440","441","442","443"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport {Row, Col} from 'react-bootstrap';\n\nclass ModelingAndSimulationInPythonMain extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Row>\n                                <Col xs={12} sm={12} md={12} lg={12} xl={12} >\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '354px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(0)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}> </CardTitle>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center', background: 'url(https://www.researchgate.net/profile/Tijana_Ivancevic/publication/1743757/figure/fig7/AS:279360897601538@1443616236130/Benard-cells-showing-a-typical-vortex-of-a-rolling-air-with-a-warm-air-rising-in-a-ring_Q320.jpg) center', backgroundRepeat: 'no-repeat', width: '324px', height: '100%'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '1.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>LORENZ MUSIC GENERATOR</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                \n\n                    </ Row>\n                </div>\n        )\n    }\n}\n\nexport default ModelingAndSimulationInPythonMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ModelingAndSimulationInPython/ModelingAndSimulationInPythonProject0.js",["444","445","446","447","448"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass ModelingAndSimulationInPythonProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://www.researchgate.net/profile/Tijana_Ivancevic/publication/1743757/figure/fig7/AS:279360897601538@1443616236130/Benard-cells-showing-a-typical-vortex-of-a-rolling-air-with-a-warm-air-rising-in-a-ring_Q320.jpg) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>LORENZ MUSIC GENERATOR</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button style={{fontSize: '1.45em'}} colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n        </div>\n        )\n    }\n}\n\nexport default ModelingAndSimulationInPythonProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ProjectPage/ProjectPageMain.js",["449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport Paper from '@material-ui/core/Paper';\n//import { Tabs } from '@material-ui/core';\n//import Tab from '@material-ui/core/Tab';\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Row, Col} from 'react-bootstrap';\n\nclass ProjectPageMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    yeahYeah = () => {\n        this.setState({idk: 'yea yea yea'})\n    }\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <p style={{lineHeight: '100%', color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '50%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '2.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>Here you can view all of my projects I did throughout my master's. Click above to view them by their respective course.</p>\n            </div>\n        )\n    }\n}\n\nexport default ProjectPageMain;",{"ruleId":"467","severity":1,"message":"468","line":3,"column":46,"nodeType":"469","messageId":"470","endLine":3,"endColumn":53},{"ruleId":"467","severity":1,"message":"471","line":20,"column":13,"nodeType":"469","messageId":"470","endLine":20,"endColumn":22},{"ruleId":"472","replacedBy":"473"},{"ruleId":"474","replacedBy":"475"},{"ruleId":"467","severity":1,"message":"476","line":4,"column":24,"nodeType":"469","messageId":"470","endLine":4,"endColumn":30},{"ruleId":"467","severity":1,"message":"477","line":4,"column":32,"nodeType":"469","messageId":"470","endLine":4,"endColumn":38},{"ruleId":"478","severity":1,"message":"479","line":68,"column":9,"nodeType":"480","endLine":68,"endColumn":108},{"ruleId":"472","replacedBy":"481"},{"ruleId":"474","replacedBy":"482"},{"ruleId":"467","severity":1,"message":"483","line":2,"column":10,"nodeType":"469","messageId":"470","endLine":2,"endColumn":14},{"ruleId":"467","severity":1,"message":"484","line":2,"column":16,"nodeType":"469","messageId":"470","endLine":2,"endColumn":20},{"ruleId":"467","severity":1,"message":"485","line":3,"column":8,"nodeType":"469","messageId":"470","endLine":3,"endColumn":11},{"ruleId":"467","severity":1,"message":"486","line":4,"column":8,"nodeType":"469","messageId":"470","endLine":4,"endColumn":17},{"ruleId":"478","severity":1,"message":"479","line":43,"column":29,"nodeType":"480","endLine":43,"endColumn":161},{"ruleId":"467","severity":1,"message":"486","line":4,"column":8,"nodeType":"469","messageId":"470","endLine":4,"endColumn":17},{"ruleId":"467","severity":1,"message":"487","line":54,"column":9,"nodeType":"469","messageId":"470","endLine":54,"endColumn":19},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"472","replacedBy":"496"},{"ruleId":"474","replacedBy":"497"},{"ruleId":"467","severity":1,"message":"483","line":2,"column":10,"nodeType":"469","messageId":"470","endLine":2,"endColumn":14},{"ruleId":"467","severity":1,"message":"484","line":2,"column":16,"nodeType":"469","messageId":"470","endLine":2,"endColumn":20},{"ruleId":"467","severity":1,"message":"498","line":2,"column":39,"nodeType":"469","messageId":"470","endLine":2,"endColumn":50},{"ruleId":"467","severity":1,"message":"499","line":2,"column":52,"nodeType":"469","messageId":"470","endLine":2,"endColumn":58},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"483","line":2,"column":10,"nodeType":"469","messageId":"470","endLine":2,"endColumn":14},{"ruleId":"467","severity":1,"message":"484","line":2,"column":16,"nodeType":"469","messageId":"470","endLine":2,"endColumn":20},{"ruleId":"467","severity":1,"message":"498","line":2,"column":39,"nodeType":"469","messageId":"470","endLine":2,"endColumn":50},{"ruleId":"467","severity":1,"message":"499","line":2,"column":52,"nodeType":"469","messageId":"470","endLine":2,"endColumn":58},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"483","line":2,"column":10,"nodeType":"469","messageId":"470","endLine":2,"endColumn":14},{"ruleId":"467","severity":1,"message":"484","line":2,"column":16,"nodeType":"469","messageId":"470","endLine":2,"endColumn":20},{"ruleId":"467","severity":1,"message":"498","line":2,"column":39,"nodeType":"469","messageId":"470","endLine":2,"endColumn":50},{"ruleId":"467","severity":1,"message":"499","line":2,"column":52,"nodeType":"469","messageId":"470","endLine":2,"endColumn":58},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"467","severity":1,"message":"500","line":5,"column":8,"nodeType":"469","messageId":"470","endLine":5,"endColumn":16},{"ruleId":"472","replacedBy":"501"},{"ruleId":"474","replacedBy":"502"},{"ruleId":"467","severity":1,"message":"503","line":5,"column":9,"nodeType":"469","messageId":"470","endLine":5,"endColumn":12},{"ruleId":"467","severity":1,"message":"504","line":5,"column":14,"nodeType":"469","messageId":"470","endLine":5,"endColumn":17},{"ruleId":"505","severity":1,"message":"506","line":20,"column":96,"nodeType":"507","endLine":20,"endColumn":111},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"483","line":2,"column":10,"nodeType":"469","messageId":"470","endLine":2,"endColumn":14},{"ruleId":"467","severity":1,"message":"484","line":2,"column":16,"nodeType":"469","messageId":"470","endLine":2,"endColumn":20},{"ruleId":"467","severity":1,"message":"498","line":2,"column":39,"nodeType":"469","messageId":"470","endLine":2,"endColumn":50},{"ruleId":"467","severity":1,"message":"499","line":2,"column":52,"nodeType":"469","messageId":"470","endLine":2,"endColumn":58},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"467","severity":1,"message":"483","line":2,"column":10,"nodeType":"469","messageId":"470","endLine":2,"endColumn":14},{"ruleId":"467","severity":1,"message":"484","line":2,"column":16,"nodeType":"469","messageId":"470","endLine":2,"endColumn":20},{"ruleId":"467","severity":1,"message":"498","line":2,"column":39,"nodeType":"469","messageId":"470","endLine":2,"endColumn":50},{"ruleId":"467","severity":1,"message":"499","line":2,"column":52,"nodeType":"469","messageId":"470","endLine":2,"endColumn":58},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"467","severity":1,"message":"483","line":2,"column":10,"nodeType":"469","messageId":"470","endLine":2,"endColumn":14},{"ruleId":"467","severity":1,"message":"484","line":2,"column":16,"nodeType":"469","messageId":"470","endLine":2,"endColumn":20},{"ruleId":"467","severity":1,"message":"498","line":2,"column":39,"nodeType":"469","messageId":"470","endLine":2,"endColumn":50},{"ruleId":"467","severity":1,"message":"499","line":2,"column":52,"nodeType":"469","messageId":"470","endLine":2,"endColumn":58},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"467","severity":1,"message":"508","line":3,"column":8,"nodeType":"469","messageId":"470","endLine":3,"endColumn":13},{"ruleId":"467","severity":1,"message":"509","line":6,"column":8,"nodeType":"469","messageId":"470","endLine":6,"endColumn":17},{"ruleId":"467","severity":1,"message":"510","line":7,"column":10,"nodeType":"469","messageId":"470","endLine":7,"endColumn":20},{"ruleId":"467","severity":1,"message":"511","line":8,"column":8,"nodeType":"469","messageId":"470","endLine":8,"endColumn":12},{"ruleId":"467","severity":1,"message":"512","line":9,"column":8,"nodeType":"469","messageId":"470","endLine":9,"endColumn":11},{"ruleId":"467","severity":1,"message":"513","line":10,"column":8,"nodeType":"469","messageId":"470","endLine":10,"endColumn":18},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"467","severity":1,"message":"503","line":3,"column":9,"nodeType":"469","messageId":"470","endLine":3,"endColumn":12},{"ruleId":"467","severity":1,"message":"504","line":3,"column":14,"nodeType":"469","messageId":"470","endLine":3,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"483","line":2,"column":10,"nodeType":"469","messageId":"470","endLine":2,"endColumn":14},{"ruleId":"467","severity":1,"message":"484","line":2,"column":16,"nodeType":"469","messageId":"470","endLine":2,"endColumn":20},{"ruleId":"467","severity":1,"message":"498","line":2,"column":39,"nodeType":"469","messageId":"470","endLine":2,"endColumn":50},{"ruleId":"467","severity":1,"message":"499","line":2,"column":52,"nodeType":"469","messageId":"470","endLine":2,"endColumn":58},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"483","line":2,"column":10,"nodeType":"469","messageId":"470","endLine":2,"endColumn":14},{"ruleId":"467","severity":1,"message":"484","line":2,"column":16,"nodeType":"469","messageId":"470","endLine":2,"endColumn":20},{"ruleId":"467","severity":1,"message":"498","line":2,"column":39,"nodeType":"469","messageId":"470","endLine":2,"endColumn":50},{"ruleId":"467","severity":1,"message":"499","line":2,"column":52,"nodeType":"469","messageId":"470","endLine":2,"endColumn":58},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"467","severity":1,"message":"483","line":2,"column":10,"nodeType":"469","messageId":"470","endLine":2,"endColumn":14},{"ruleId":"467","severity":1,"message":"484","line":2,"column":16,"nodeType":"469","messageId":"470","endLine":2,"endColumn":20},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"483","line":2,"column":10,"nodeType":"469","messageId":"470","endLine":2,"endColumn":14},{"ruleId":"467","severity":1,"message":"484","line":2,"column":16,"nodeType":"469","messageId":"470","endLine":2,"endColumn":20},{"ruleId":"467","severity":1,"message":"498","line":2,"column":39,"nodeType":"469","messageId":"470","endLine":2,"endColumn":50},{"ruleId":"467","severity":1,"message":"499","line":2,"column":52,"nodeType":"469","messageId":"470","endLine":2,"endColumn":58},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"483","line":2,"column":10,"nodeType":"469","messageId":"470","endLine":2,"endColumn":14},{"ruleId":"467","severity":1,"message":"484","line":2,"column":16,"nodeType":"469","messageId":"470","endLine":2,"endColumn":20},{"ruleId":"467","severity":1,"message":"498","line":2,"column":39,"nodeType":"469","messageId":"470","endLine":2,"endColumn":50},{"ruleId":"467","severity":1,"message":"499","line":2,"column":52,"nodeType":"469","messageId":"470","endLine":2,"endColumn":58},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"467","severity":1,"message":"508","line":3,"column":8,"nodeType":"469","messageId":"470","endLine":3,"endColumn":13},{"ruleId":"467","severity":1,"message":"514","line":6,"column":8,"nodeType":"469","messageId":"470","endLine":6,"endColumn":17},{"ruleId":"467","severity":1,"message":"515","line":7,"column":8,"nodeType":"469","messageId":"470","endLine":7,"endColumn":20},{"ruleId":"467","severity":1,"message":"516","line":8,"column":8,"nodeType":"469","messageId":"470","endLine":8,"endColumn":21},{"ruleId":"467","severity":1,"message":"517","line":23,"column":8,"nodeType":"469","messageId":"470","endLine":23,"endColumn":12},{"ruleId":"467","severity":1,"message":"518","line":24,"column":8,"nodeType":"469","messageId":"470","endLine":24,"endColumn":13},{"ruleId":"467","severity":1,"message":"519","line":25,"column":8,"nodeType":"469","messageId":"470","endLine":25,"endColumn":13},{"ruleId":"467","severity":1,"message":"520","line":26,"column":8,"nodeType":"469","messageId":"470","endLine":26,"endColumn":13},{"ruleId":"467","severity":1,"message":"521","line":27,"column":8,"nodeType":"469","messageId":"470","endLine":27,"endColumn":13},{"ruleId":"467","severity":1,"message":"522","line":28,"column":8,"nodeType":"469","messageId":"470","endLine":28,"endColumn":13},{"ruleId":"467","severity":1,"message":"523","line":34,"column":5,"nodeType":"469","messageId":"470","endLine":34,"endColumn":17},{"ruleId":"467","severity":1,"message":"524","line":991,"column":19,"nodeType":"469","messageId":"470","endLine":991,"endColumn":24},{"ruleId":"472","replacedBy":"525"},{"ruleId":"474","replacedBy":"526"},{"ruleId":"467","severity":1,"message":"483","line":2,"column":10,"nodeType":"469","messageId":"470","endLine":2,"endColumn":14},{"ruleId":"467","severity":1,"message":"484","line":2,"column":16,"nodeType":"469","messageId":"470","endLine":2,"endColumn":20},{"ruleId":"467","severity":1,"message":"498","line":2,"column":39,"nodeType":"469","messageId":"470","endLine":2,"endColumn":50},{"ruleId":"467","severity":1,"message":"499","line":2,"column":52,"nodeType":"469","messageId":"470","endLine":2,"endColumn":58},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"467","severity":1,"message":"508","line":3,"column":8,"nodeType":"469","messageId":"470","endLine":3,"endColumn":13},{"ruleId":"467","severity":1,"message":"509","line":6,"column":8,"nodeType":"469","messageId":"470","endLine":6,"endColumn":17},{"ruleId":"467","severity":1,"message":"510","line":7,"column":10,"nodeType":"469","messageId":"470","endLine":7,"endColumn":20},{"ruleId":"467","severity":1,"message":"511","line":8,"column":8,"nodeType":"469","messageId":"470","endLine":8,"endColumn":12},{"ruleId":"467","severity":1,"message":"512","line":9,"column":8,"nodeType":"469","messageId":"470","endLine":9,"endColumn":11},{"ruleId":"467","severity":1,"message":"513","line":10,"column":8,"nodeType":"469","messageId":"470","endLine":10,"endColumn":18},{"ruleId":"467","severity":1,"message":"527","line":5,"column":8,"nodeType":"469","messageId":"470","endLine":5,"endColumn":29},{"ruleId":"467","severity":1,"message":"483","line":2,"column":10,"nodeType":"469","messageId":"470","endLine":2,"endColumn":14},{"ruleId":"467","severity":1,"message":"484","line":2,"column":16,"nodeType":"469","messageId":"470","endLine":2,"endColumn":20},{"ruleId":"467","severity":1,"message":"498","line":2,"column":39,"nodeType":"469","messageId":"470","endLine":2,"endColumn":50},{"ruleId":"467","severity":1,"message":"499","line":2,"column":52,"nodeType":"469","messageId":"470","endLine":2,"endColumn":58},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":6},{"ruleId":"467","severity":1,"message":"483","line":2,"column":10,"nodeType":"469","messageId":"470","endLine":2,"endColumn":14},{"ruleId":"467","severity":1,"message":"484","line":2,"column":16,"nodeType":"469","messageId":"470","endLine":2,"endColumn":20},{"ruleId":"467","severity":1,"message":"528","line":2,"column":22,"nodeType":"469","messageId":"470","endLine":2,"endColumn":26},{"ruleId":"467","severity":1,"message":"529","line":2,"column":28,"nodeType":"469","messageId":"470","endLine":2,"endColumn":37},{"ruleId":"467","severity":1,"message":"498","line":2,"column":39,"nodeType":"469","messageId":"470","endLine":2,"endColumn":50},{"ruleId":"467","severity":1,"message":"499","line":2,"column":52,"nodeType":"469","messageId":"470","endLine":2,"endColumn":58},{"ruleId":"467","severity":1,"message":"488","line":2,"column":60,"nodeType":"469","messageId":"470","endLine":2,"endColumn":68},{"ruleId":"467","severity":1,"message":"489","line":2,"column":70,"nodeType":"469","messageId":"470","endLine":2,"endColumn":80},{"ruleId":"467","severity":1,"message":"490","line":2,"column":82,"nodeType":"469","messageId":"470","endLine":2,"endColumn":90},{"ruleId":"467","severity":1,"message":"491","line":2,"column":92,"nodeType":"469","messageId":"470","endLine":2,"endColumn":101},{"ruleId":"467","severity":1,"message":"508","line":3,"column":8,"nodeType":"469","messageId":"470","endLine":3,"endColumn":13},{"ruleId":"467","severity":1,"message":"509","line":6,"column":8,"nodeType":"469","messageId":"470","endLine":6,"endColumn":17},{"ruleId":"467","severity":1,"message":"510","line":7,"column":10,"nodeType":"469","messageId":"470","endLine":7,"endColumn":20},{"ruleId":"467","severity":1,"message":"511","line":8,"column":8,"nodeType":"469","messageId":"470","endLine":8,"endColumn":12},{"ruleId":"467","severity":1,"message":"512","line":9,"column":8,"nodeType":"469","messageId":"470","endLine":9,"endColumn":11},{"ruleId":"467","severity":1,"message":"513","line":10,"column":8,"nodeType":"469","messageId":"470","endLine":10,"endColumn":18},{"ruleId":"467","severity":1,"message":"503","line":11,"column":9,"nodeType":"469","messageId":"470","endLine":11,"endColumn":12},{"ruleId":"467","severity":1,"message":"504","line":11,"column":14,"nodeType":"469","messageId":"470","endLine":11,"endColumn":17},"no-unused-vars","'Content' is defined but never used.","Identifier","unusedVar","'navHeight' is assigned a value but never used.","no-native-reassign",["530"],"no-negated-in-lhs",["531"],"'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["530"],["531"],"'Grid' is defined but never used.","'Cell' is defined but never used.","'pic' is defined but never used.","'Container' is defined but never used.","'Navigation' is defined but never used.","'CardMenu' is defined but never used.","'IconButton' is defined but never used.","'CardText' is defined but never used.","'CardMedia' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["530"],["531"],"'CardActions' is defined but never used.","'Button' is defined but never used.","'Projects' is defined but never used.",["530"],["531"],"'Row' is defined but never used.","'Col' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Paper' is defined but never used.","'PropTypes' is defined but never used.","'withStyles' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Typography' is defined but never used.","'teslaLogo' is defined but never used.","'sudokuVector' is defined but never used.","'MLProject1PDF' is defined but never used.","'pic9' is defined but never used.","'pic10' is defined but never used.","'pic11' is defined but never used.","'pic12' is defined but never used.","'pic13' is defined but never used.","'pic14' is defined but never used.","'TabContainer' is assigned a value but never used.","'value' is assigned a value but never used.",["530"],["531"],"'registerServiceWorker' is defined but never used.","'Card' is defined but never used.","'CardTitle' is defined but never used.","no-global-assign","no-unsafe-negation"]