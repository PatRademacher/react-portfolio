[{"/Users/patrickrademacher/REACT/react-portfolio/src/App.js":"1","/Users/patrickrademacher/REACT/react-portfolio/src/components/contact.js":"2","/Users/patrickrademacher/REACT/react-portfolio/src/components/aboutMe.js":"3","/Users/patrickrademacher/REACT/react-portfolio/src/components/landingpage.js":"4","/Users/patrickrademacher/REACT/react-portfolio/src/components/testingpage.js":"5","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningProject0.js":"6","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningProject1.js":"7","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationProject1.js":"8","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationProject0.js":"9","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentMain.js":"10","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Fractals/FractalsProject0.js":"11","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/SoftwareEngineering/SoftwareEngineeringMain.js":"12","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject0.js":"13","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Databases/DatabasesMain.js":"14","/Users/patrickrademacher/REACT/react-portfolio/src/components/main.js":"15","/Users/patrickrademacher/REACT/react-portfolio/src/components/resume.js":"16","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject0.js":"17","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject1.js":"18","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/InternetworkingProtocols/InternetworkingProtocolsMain.js":"19","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FunctionalProgramming/FunctionalProgrammingMain.js":"20","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FunctionalProgramming/FunctionalProgrammingProject0.js":"21","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentProject0.js":"22","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationProject2.js":"23","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceMain.js":"24","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject2.js":"25","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningProject2.js":"26","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/InternetworkingProtocols/InternetworkingProtocolsProject0.js":"27","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject1.js":"28","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/SoftwareEngineering/SoftwareEngineeringProject0.js":"29","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/OpenSource/OpenSourceMain.js":"30","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationMain.js":"31","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Databases/DatabasesProject0.js":"32","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingMain.js":"33","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/OpenSource/OpenSourceProject0.js":"34","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Fractals/FractalsMain.js":"35","/Users/patrickrademacher/REACT/react-portfolio/src/components/projects.js":"36","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningMain.js":"37","/Users/patrickrademacher/REACT/react-portfolio/src/index.js":"38","/Users/patrickrademacher/REACT/react-portfolio/src/registerServiceWorker.js":"39","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ModelingAndSimulationInPython/ModelingAndSimulationInPythonMain.js":"40","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ModelingAndSimulationInPython/ModelingAndSimulationInPythonProject0.js":"41","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ProjectPage/ProjectPageMain.js":"42"},{"size":2293,"mtime":1610492061541,"results":"43","hashOfConfig":"44"},{"size":5809,"mtime":1610492928817,"results":"45","hashOfConfig":"44"},{"size":4941,"mtime":1610492758694,"results":"46","hashOfConfig":"44"},{"size":4904,"mtime":1610076380590,"results":"47","hashOfConfig":"44"},{"size":19264,"mtime":1610489665131,"results":"48","hashOfConfig":"44"},{"size":3912,"mtime":1610328187014,"results":"49","hashOfConfig":"44"},{"size":3821,"mtime":1610330208600,"results":"50","hashOfConfig":"44"},{"size":3243,"mtime":1609395578556,"results":"51","hashOfConfig":"44"},{"size":3470,"mtime":1610493939735,"results":"52","hashOfConfig":"44"},{"size":2267,"mtime":1609398311783,"results":"53","hashOfConfig":"44"},{"size":3757,"mtime":1610326747748,"results":"54","hashOfConfig":"44"},{"size":2309,"mtime":1609399329477,"results":"55","hashOfConfig":"44"},{"size":3882,"mtime":1610330580322,"results":"56","hashOfConfig":"44"},{"size":2361,"mtime":1609873408219,"results":"57","hashOfConfig":"44"},{"size":669,"mtime":1608784710654,"results":"58","hashOfConfig":"44"},{"size":1213,"mtime":1609960288287,"results":"59","hashOfConfig":"44"},{"size":5937,"mtime":1609975033902,"results":"60","hashOfConfig":"44"},{"size":16442,"mtime":1610326682685,"results":"61","hashOfConfig":"44"},{"size":2336,"mtime":1609398325052,"results":"62","hashOfConfig":"44"},{"size":2281,"mtime":1609398319872,"results":"63","hashOfConfig":"44"},{"size":3690,"mtime":1610326772597,"results":"64","hashOfConfig":"44"},{"size":4037,"mtime":1610330737183,"results":"65","hashOfConfig":"44"},{"size":3243,"mtime":1609395585967,"results":"66","hashOfConfig":"44"},{"size":21466,"mtime":1609960658735,"results":"67","hashOfConfig":"44"},{"size":4001,"mtime":1610328973279,"results":"68","hashOfConfig":"44"},{"size":3905,"mtime":1610330281504,"results":"69","hashOfConfig":"44"},{"size":3895,"mtime":1610330518766,"results":"70","hashOfConfig":"44"},{"size":3816,"mtime":1610326843128,"results":"71","hashOfConfig":"44"},{"size":3606,"mtime":1610326866827,"results":"72","hashOfConfig":"44"},{"size":2255,"mtime":1609398388618,"results":"73","hashOfConfig":"44"},{"size":2415,"mtime":1610493955278,"results":"74","hashOfConfig":"44"},{"size":3944,"mtime":1610330416989,"results":"75","hashOfConfig":"44"},{"size":3979,"mtime":1609398379932,"results":"76","hashOfConfig":"44"},{"size":3939,"mtime":1610330788546,"results":"77","hashOfConfig":"44"},{"size":2231,"mtime":1609398303861,"results":"78","hashOfConfig":"44"},{"size":94656,"mtime":1606749498766,"results":"79","hashOfConfig":"44"},{"size":6373,"mtime":1609872750875,"results":"80","hashOfConfig":"44"},{"size":459,"mtime":1607277820121,"results":"81","hashOfConfig":"44"},{"size":4384,"mtime":1606613719687,"results":"82","hashOfConfig":"44"},{"size":2454,"mtime":1609398177607,"results":"83","hashOfConfig":"44"},{"size":4335,"mtime":1610326825108,"results":"84","hashOfConfig":"44"},{"size":1417,"mtime":1610489718274,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"89d46y",{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"95"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"103"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"107"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"103"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"103"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"95"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"95"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"103"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"132"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"103"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"107"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"103"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"103"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"95"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"95"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"107"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"103"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"95"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"95"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"132"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"95"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"132"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"103"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"95"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/patrickrademacher/REACT/react-portfolio/src/App.js",["212","213"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/contact.js",["214","215"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/aboutMe.js",["216","217"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/landingpage.js",["218","219","220","221","222"],"import React, {Component} from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport pic from './resume_picpic.png';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport backgroundVid from './backgroundVideo.mp4';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport headshot from './headshot0.jpg';\n\nclass LandingPage extends Component {\n    constructor(props){\n        super(props);\n        this.state = { windowWidth: 0,//window.innerWidth, \n                       windowHeight: 0,//window.innerHeight,\n                       pictureWidth: Math.round((window.innerWidth/7.6)),\n                       pictureHeight: Math.round((window.innerHeight/3.3)),\n                       counter: 0};\n    }\n    reportWindowSize = () => {\n        console.log('WW: ' + this.state.windowWidth);\n        console.log('IH: ' + this.state.pictureHeight);\n        console.log('PW: ' + this.state.pictureWidth)\n        this.setState({windowWidth: window.innerWidth, windowHeight: window.innerHeight, pictureWidth: (Math.round((window.innerWidth/7.6))), pictureHeight: Math.round((window.innerHeight/2.8))})\n      }\n\n      \n\n      \n    render() {\n        window.addEventListener('resize', this.reportWindowSize);\n        \n\n        return(\n            <div className=\"landing-grid\">\n            <video className='videoTag' autoPlay loop muted>\n                <source src={backgroundVid} type='video/mp4' />\n            </video>\n                <Row style={{height: '2.8vh'}} />\n                    <Row style={{alignItems: 'flex-start', display: 'flex', justifyContent: 'center'}}>\n                        <Col />\n                        <Col xs = {6} style = {{justifyContent: 'center'}}>\n                            <img src = {headshot} style ={{borderRadius: '100%', border: 'solid #ccc 2px', width: '290px', margin: 'auto', position: 'sticky'}}></img>\n                        </Col>\n                        <Col />\n                    </Row>\n                    <Row style={{height: '57vh', alignItems: 'flex-end', bottom: '0', paddingTop: '2vh', position: 'fixed', width: '100%', display: 'flex'}}>\n                        \n                            <Col />\n                            <Col className=\"banner-text\" xs={12} sm={10} md={8} lg={8} xl={8}>\n                                \n                                    <h1>Patrick Rademacher: \n                                        <br></br>\n                                    </h1>  \n                                    <h2>\n                                        Master of Science in Computer Science\n                                    </h2>\n                                    <div style={{alignContent: 'space-between'}}>\n                                        <hr />\n                                        <Row>\n                                            \n                                            <Col xs={6} style={{textAlign: 'center'}}>\n                                                <p>Python | C | C++ | Javascript | Java | Haskell | SQL</p>\n                                            </Col>\n                                            <Col xs={6} style={{textAlign: 'center'}}>\n                                                <p>HTML/CSS | React | Bootstrap | RestFUL API | Node.js</p>\n                                            </Col>\n                                        \n                                        </Row>\n                                        <hr />\n                                        </div>\n\n                                {/*Github */}\n                                <div className='social-links'>\n                                    \n                                        <a href=\"https://www.github.com/patrademacher\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <i className=\"fab fa-github\"></i>\n                                        </a>\n                                        {/*Linked In */}\n                                        <a href=\"https://www.linkedin.com/in/patrick-rademacher-1844221b8/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <i className=\"fab fa-linkedin\"></i>\n                                        </a>\n\n                                        \n                               \n                                </div>\n                                <div style={{height: '3px'}} />\n                            </Col>\n                            <Col />\n                            \n                        \n\n                    </Row>\n                    \n                        \n                        \n                        \n                \n                    </div>\n                            \n\n                       \n                    \n        )\n    }\n}\n\nexport default LandingPage;",["223","224"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/testingpage.js",["225","226"],"import React, {Component} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport pic0 from \"./aiMedium.jpg\";\nimport pic1 from \"./machinelearningMedium.jpg\";\nimport pic2 from \"./databasesMedium.jpg\";\nimport pic3 from \"./internetMedium.jpg\";\nimport pic4 from \"./puredataMedium.jpg\";\nimport pic5 from \"./softwareengineeringMedium.jpg\";\nimport pic6 from \"./functionalprogrammingMedium.png\";\nimport pic7 from \"./frontendMedium.jpg\";\nimport pic8 from \"./fractalMedium.jpg\";\nimport pic12 from \"./algorithmsMedium.jpg\";\nimport pic13 from \"./theorycompMedium.jpg\";\nimport pic14 from \"./quantumMedium.jpg\";\nimport pic9 from \"./opensourceMedium.jpg\";\nimport pic10 from \"./numcompMedium.jpg\";\nimport pic11 from \"./modelingMedium.jpg\";\nimport mainpic from \"./mainPicture.jpg\";\n\nimport ArtificalIntelligenceMain from \"./projectPages/ArtificialIntelligence/ArtificialIntelligenceMain\";\nimport ArtificialIntelligenceProject0 from \"./projectPages/ArtificialIntelligence/ArtificialIntelligenceProject0\";\nimport ArtificialIntelligenceProject1 from \"./projectPages/ArtificialIntelligence/ArtificialIntelligenceProject1\";\nimport ArtificialIntelligenceProject2 from \"./projectPages/ArtificialIntelligence/ArtificialIntelligenceProject2\";\nimport MachineLearningMain from \"./projectPages/MachineLearning/MachineLearningMain\";\nimport MachineLearningProject0 from \"./projectPages/MachineLearning/MachineLearningProject0\";\nimport MachineLearningProject1 from \"./projectPages/MachineLearning/MachineLearningProject1\";\nimport MachineLearningProject2 from \"./projectPages/MachineLearning/MachineLearningProject2\";\nimport DatabasesMain from \"./projectPages/Databases/DatabasesMain\";\nimport DatabasesProject0 from \"./projectPages/Databases/DatabasesProject0\";\nimport InternetworkingProtocolsMain from \"./projectPages/InternetworkingProtocols/InternetworkingProtocolsMain\";\nimport InternetworkingProtocolsProject0 from \"./projectPages/InternetworkingProtocols/InternetworkingProtocolsProject0\";\nimport MusicAndDigitalSignalProcessingMain from \"./projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingMain\";\nimport MusicAndDigitalSignalProcessingProject0 from \"./projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject0\";\nimport MusicAndDigitalSignalProcessingProject1 from \"./projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject1\";\nimport SoftwareEngineeringMain from \"./projectPages/SoftwareEngineering/SoftwareEngineeringMain\";\nimport SoftwareEngineeringProject0 from \"./projectPages/SoftwareEngineering/SoftwareEngineeringProject0\";\nimport FunctionalProgrammingMain from \"./projectPages/FunctionalProgramming/FunctionalProgrammingMain\";\nimport FunctionalProgrammingProject0 from \"./projectPages/FunctionalProgramming/FunctionalProgrammingProject0\";\nimport FrontEndWebDevelopmentMain from \"./projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentMain\";\nimport FrontEndWebDevelopmentProject0 from \"./projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentProject0\";\nimport FractalsMain from \"./projectPages/Fractals/FractalsMain\";\nimport FractalsProject0 from \"./projectPages/Fractals/FractalsProject0\";\nimport OpenSourceMain from \"./projectPages/OpenSource/OpenSourceMain\";\nimport OpenSourceProject0 from \"./projectPages/OpenSource/OpenSourceProject0\";\nimport NumericalComputationMain from \"./projectPages/NumericalComputation/NumericalComputationMain\";\nimport NumericalComputationProject0 from \"./projectPages/NumericalComputation/NumericalComputationProject0\";\nimport NumericalComputationProject1 from \"./projectPages/NumericalComputation/NumericalComputationProject1\";\nimport NumericalComputationProject2 from \"./projectPages/NumericalComputation/NumericalComputationProject2\";\nimport ModelingAndSimulationInPythonMain from \"./projectPages/ModelingAndSimulationInPython/ModelingAndSimulationInPythonMain\";\nimport ModelingAndSimulationInPythonProject0 from \"./projectPages/ModelingAndSimulationInPython/ModelingAndSimulationInPythonProject0\";\nimport ProjectPageMain from \"./projectPages/ProjectPage/ProjectPageMain\";\nimport {Navigation} from 'react-mdl';\n\n\nclass TestingPage extends Component{\n\n    \n    constructor(props){\n        super(props);\n        this.projectTabs = React.createRef();\n        this.displayProjects = React.createRef();\n        this.state={\n            colStates: [\"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\", \"nonactiveCols\"],\n            backgrounds: [pic0, pic1, pic2, pic3, pic4, pic5, pic6, pic7, pic8, pic9, pic10, pic11, pic12, pic13, pic14],\n            previousColState: null,\n            currentBackground: mainpic,\n            showDetail: false,\n            tester: '3',\n            wiggler: Array(15).fill('20px'),\n            currentCloseUp: [\n                                <ArtificalIntelligenceMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<ArtificialIntelligenceProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                    <ArtificialIntelligenceProject1 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                    <ArtificialIntelligenceProject2 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>\n                                    ],\n                                <MachineLearningMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<MachineLearningProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                    <MachineLearningProject1 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                    <MachineLearningProject2 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>\n                                    ],\n                                <DatabasesMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<DatabasesProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <InternetworkingProtocolsMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<InternetworkingProtocolsProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <MusicAndDigitalSignalProcessingMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [\n                                        <MusicAndDigitalSignalProcessingProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                        <MusicAndDigitalSignalProcessingProject1 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>\n                                    ],\n                                <SoftwareEngineeringMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<SoftwareEngineeringProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <FunctionalProgrammingMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<FunctionalProgrammingProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <FrontEndWebDevelopmentMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<FrontEndWebDevelopmentProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <FractalsMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<FractalsProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <OpenSourceMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<OpenSourceProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>],\n                                <NumericalComputationMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<NumericalComputationProject0 tester=\"3\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                    <NumericalComputationProject1 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>,\n                                    <NumericalComputationProject2 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>\n                                    ],\n                                <ModelingAndSimulationInPythonMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, \n                                    [<ModelingAndSimulationInPythonProject0 tester=\"5\" showingDetail = \"true\" changeShowing={() => this.showDetails(null)}/>\n                                    ], \n                                <ProjectPageMain tester = \"null\" showingDetail=\"false\" changeShowing={(n) => this.showDetails(n)}/>, []   \n                                ],\n                                   \n            currentCloseUpIndex: -1,\n            currentHover: -1,\n            currentPageIndex: 24,\n            currentHeader: 'PROJECTS',\n            rollDown: false,\n            headers: ['ARTIFICIAL INTELLIGENCE', 'MACHINE LEARNING', 'DATABASES', 'INTERNETWORKING PROTOCOLS', 'MUSIC AND DIGITAL SIGNAL PROCESSING', 'SOFTWARE ENGINEERING', 'FUNCTIONAL PROGRAMMING', 'FRONT-END WEB DEVELOPMENT', 'FRACTALS', 'OPEN SOURCE', 'NUMERICAL COMPUTATION', 'MODELING AND SIMULATION IN PYTHON', 'ALGORITHMS', 'THEORY OF COMPUTATION', 'QUANTUM COMPUTING', 'PROJECTS']                       \n        }\n    }\n\n    setActiveTab = (tabNumber) => {\n\n        let allTabs = Array(15).fill('nonactiveCols');\n        allTabs[tabNumber] = 'activeCol';\n        console.log('allTabs: ' + allTabs);\n        //this.state.colStates[tabNumber] = \"activeCol\";\n        this.setState({currentBackground: this.state.backgrounds[tabNumber], currentPageIndex: (tabNumber * 2), currentHeader: this.state.headers[tabNumber]});\n        if(this.state.previousColState === null){\n            this.setState({previousColState: tabNumber})\n        }\n\n        if (tabNumber !== this.state.previousColState){\n            this.setState({colStates: allTabs})\n            this.setState({previousColState: tabNumber});\n        }\n        \n        this.setState({rollDown: true, showDetail: false});\n        //this.scrollToBottom();\n\n        \n        \n\n    }\n\n\n    showDetails = (num) => {\n        let showOrNo = this.state.showDetail;\n        this.setState({tester: num, showDetail: !showOrNo, currentCloseUpIndex: num});\n        console.log('showdetail: ' + this.state.showDetail);\n        console.log('currentCloseUpIndex: ' + this.state.currentCloseUpIndex);\n        console.log('tester: ' + this.state.tester);\n        \n    }\n\n    settingIndex = (num) => {\n        this.setState({currentCloseUpIndex: num})\n        console.log('Setting Index: ' + this.state.currentCloseUpIndex);\n    }\n\n    setWiggle = (index, value) => {\n        if (this.state.currentHover === -1){\n            this.setState({currentHover: index})\n        }\n        else if (this.state.currentHover === index && this.state.colStates[index] === 'activeCol'){\n            value = 'activeCol';\n        }\n        this.setState({currentHover: index});\n\n        if (this.state.colStates[index] !== \"activeCol\"){\n        this.setState(() => {\n          const colStates = this.state.colStates.map((item, j) => {\n            if (j === index) {\n                this.setState({currentHover: index});\n\n              return value;\n            } \n            else {\n                if (item === 'nonactiveColsHover'){\n                    item = 'nonactiveCols';\n                }\n              return item;\n            }\n          });\n     \n          return {\n            colStates,\n          };\n        })}\n        console.log(this.state.colStates);\n\n    };\n\n    componentDidMount() {\n        \n        this.scrollToBottom();\n\n    }\n\n    componentDidUpdate(){\n        \n        this.scrollToBottom();\n\n    }\n\n      scrollToBottom = () => {\n        if (this.state.rollDown === true){\n          console.log((window.innerHeight + (this.projectTabs.clientHeight * 5)).toString() + 'px');\n          console.log(this.displayProjects);\n        this.displayProjects.scrollIntoView({ behavior: 'smooth', top: '0' });\n        this.setState({rollDown: false});}\n      \n    }\n\n    render(){\n        return (\n            <div style={{width: '100%', height: '200vh', backgroundImage: `url(${this.state.currentBackground})`, backgroundRepeat: 'repeat', backgroundSize: 'cover', position: 'static', backgroundColor: 'plum'}}>\n               <div id='projectTabs' ref={pt => {this.projectTabs = pt}}>\n                    <Row style={{position: 'static', width: '100%'}}>\n                        <Col className={this.state.colStates[0]}  xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(0)} onMouseEnter={() => this.setWiggle(0, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(0, 'nonactiveCols')}>\n                            <p className=\"wiggles\">ARTIFICIAL INTELLIGENCE</p>\n                        </Col>\n                        <Col className={this.state.colStates[1]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(1)} onMouseEnter={() => this.setWiggle(1, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(1, 'nonactiveCols')}>\n                            <p className=\"wiggles\">MACHINE LEARNING</p>\n                        </Col>\n                        <Col className={this.state.colStates[2]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(2)} onMouseEnter={() => this.setWiggle(2, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(2, 'nonactiveCols')}>\n                            <p className=\"wiggles\">DATABASES</p>\n                        </Col>\n                    </Row>\n                    <Row style={{position: 'static', width: '100%'}}>\n                        <Col className={this.state.colStates[3]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(3)} onMouseEnter={() => this.setWiggle(3, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(3, 'nonactiveCols')}>\n                            <p className=\"wiggles\">INTERNETWORKING PROTOCOLS</p>\n                        </Col>\n                        <Col className={this.state.colStates[4]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(4)} onMouseEnter={() => this.setWiggle(4, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(4, 'nonactiveCols')}>\n                            <p className=\"wiggles\" >MUSIC AND DIGITAL SIGNAL PROCESSING</p>\n                        </Col>\n                        <Col className={this.state.colStates[5]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(5)} onMouseEnter={() => this.setWiggle(5, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(5, 'nonactiveCols')}>\n                            <p className=\"wiggles\">SOFTWARE ENGINEERING</p>\n                        </Col>\n                    </Row>\n                    <Row style={{position: 'static', width: '100%'}}>\n                        <Col className={this.state.colStates[6]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(6)} onMouseEnter={() => this.setWiggle(6, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(6, 'nonactiveCols')}>\n                            <p className=\"wiggles\">FUNCTIONAL PROGRAMMING</p>\n                        </Col>\n                        <Col className={this.state.colStates[7]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(7)} onMouseEnter={() => this.setWiggle(7, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(7, 'nonactiveCols')}>\n                            <p className=\"wiggles\">FRONT-END WEB DEVELOPMENT</p>\n                        </Col>\n                        <Col className={this.state.colStates[8]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(8)} onMouseEnter={() => this.setWiggle(8, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(8, 'nonactiveCols')}>\n                            <p className=\"wiggles\">FRACTALS</p>\n                        </Col>\n                    </Row>\n                    <Row style={{position: 'static', width: '100%'}}>\n                        <Col className={this.state.colStates[9]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(9)} onMouseEnter={() => this.setWiggle(9, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(9, 'nonactiveCols')}>\n                            <p className=\"wiggles\">OPEN SOURCE</p>\n                        </Col>\n                        <Col className={this.state.colStates[10]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(10)} onMouseEnter={() => this.setWiggle(10, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(10, 'nonactiveCols')}>\n                            \n                            <p className=\"wiggles\">NUMERICAL COMPUTATION</p>\n                        </Col>\n                        <Col className={this.state.colStates[11]} xs = {12} sm={4} md={4} lg={4} onClick={() => this.setActiveTab(11)} onMouseEnter={() => this.setWiggle(11, 'nonactiveColsHover')} onMouseLeave={() => this.setWiggle(11, 'nonactiveCols')}>\n                            <p className=\"wiggles\" >MODELING AND SIMULATION IN PYTHON</p>\n                        </Col>\n                    </Row>\n                    \n                </div>\n                <div style={{marginTop: this.projectTabs.clientHeight/8.0}} />\n                            <h1 className = 'projectsPageHeader' ref={dp => { this.displayProjects = dp; }} style={{backgroundColor: 'black', opacity: '.72', marginTop: this.projectTabs.clientHeight/4.0}}>{this.state.currentHeader}</h1>\n                  \n                    {!this.state.showDetail ?\n                        this.state.currentCloseUp[this.state.currentPageIndex]\n                    :\n                    this.state.currentCloseUp[this.state.currentPageIndex + 1][this.state.currentCloseUpIndex]\n                }\n                       \n                       <div style={{marginTop: this.projectTabs.clientHeight * .75}} />\n\n            </div>\n        )\n    }\n}\n\nexport default TestingPage;",["227","228"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningProject0.js",["229","230","231","232","233","234"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MachineLearningProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://www.researchgate.net/profile/Yuling_Jiao2/publication/330617733/figure/fig1/AS:718798407602176@1548386303228/Real-samples-and-generated-samples-obtained-by-VGrow-KL-on-MNIST_Q320.jpg) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>MNIST</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorTwo' />\n                                        <p style={{color: '#556270', textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>A classic project in the ML world, MNIST uses a data training set comprised of images of handwritten digits so the program 'learns' how to distinguish and select their correct values using a neural network. From there, its overall accuracy is then measured by its selections of values from the test set data of handwritten digit images, which are not revealed to the program until it's done training.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            \n                                        <Button  style={{fontSize: '1.45em', color: '#ee8d8d', backgroundColor: '#556270', paddingLeft: '2px', paddingRight: '2px', border: 'solid #0cf2ad 2px'}} colored>\n                                                <a style={{color: '#ee8d8d', backgroundColor: '#556270'}} href='https://github.com/PatRademacher/MNIST' target='_blank'>View on GitHub</a>\n                                        </Button>\n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n        </div>\n        )\n    }\n}\n\nexport default MachineLearningProject0;",["235","236"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningProject1.js",["237","238","239","240","241","242"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MachineLearningProject1 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://www.researchgate.net/profile/Lubna_Emad/publication/331991626/figure/fig3/AS:740691793678336@1553606093170/The-initialization-stage_Q320.jpg) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>K MEANS & FUZZY C MEANS</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color: '#556270', textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>Another well-known pair of algorithms in ML known as K-means and Fuzzy C-means, their purpose and use come in handy when needing to classify data when no labels or known relationships are given. For this project, the data comes from a set of points in gaussian distribution and is then categorized into clusters of various sizes from the range of 2-8.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button  style={{fontSize: '1.45em', color: '#ee8d8d', backgroundColor: '#556270', paddingLeft: '2px', paddingRight: '2px', border: 'solid #0cf2ad 2px'}} colored>\n                                                <a style={{color: '#ee8d8d', backgroundColor: '#556270'}} href='https://github.com/PatRademacher/K-Means-Fuzzy-C-Means' target='_blank'>View on GitHub</a>\n                                            </Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n        </div>\n        )\n    }\n}\n\nexport default MachineLearningProject1;",["243","244"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationProject1.js",["245","246","247","248"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass NumericalComputationProject1 extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://img.pngio.com/headphones-icon-headphones-png-256_256.png) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>EUPHONOMIMESIS</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorTwo' />\n                                        <p style={{textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button style={{fontSize: '1.45em'}} colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default NumericalComputationProject1;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationProject0.js",["249","250","251","252","253"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentMain.js",["254","255","256","257","258","259","260","261","262"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport {Row, Col} from 'react-bootstrap';\n\nclass FrontEndWebDevelopmentMain extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Row>\n                                <Col xs={12} sm={12} md={12} lg={12} xl={12} >\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(0)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}> </CardTitle>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center', background: 'url(https://img.icons8.com/cotton/2x/baseball-ball.png) center', backgroundRepeat: 'no-repeat', width: '324px', height: '100%'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '1.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>BATTER ON DECK</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                \n\n                    </ Row>\n                </div>\n        )\n    }\n}\n\nexport default FrontEndWebDevelopmentMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Fractals/FractalsProject0.js",["263","264","265","266","267","268"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass FractalsProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://jbum.com/pixmagic/xor12-24-48.jpg) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>FRACTALS JOURNAL</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color: '#556270', textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>Throughout the Fractals class, our understanding and knowledge of coding fractal images was a continuous build from whatever we learned prior. We were then had to create a journal with a minimum of five fractal images we created, each with a detailed description of the mathematics and concepts necessary, what the overall process entailed in terms of success and struggles, and the artistic motive or reason involved with choosing the type of fractal and what it represented.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button  style={{fontSize: '1.45em', color: '#ee8d8d', backgroundColor: '#556270', paddingLeft: '2px', paddingRight: '2px', border: 'solid #0cf2ad 2px'}} colored>\n                                                <a style={{color: '#ee8d8d', backgroundColor: '#556270'}} href='https://github.com/PatRademacher/AI-8-Queens' target='_blank'>View on GitHub</a>\n                                            </Button>  \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n        </div>\n        )\n    }\n}\n\nexport default FractalsProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/SoftwareEngineering/SoftwareEngineeringMain.js",["269","270","271","272","273","274","275","276"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport {Row, Col} from 'react-bootstrap';\n\nclass SoftwareEngineeringMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                     <div className = \"separator\" />\n                    <Row>\n                                <Col xs={12} sm={12} md={12} lg={12} xl={12} >\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '64vh', width: '354px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(0)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}> </CardTitle>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center', background: 'url(https://avatars2.githubusercontent.com/u/352744?s=280&v=4) center', backgroundRepeat: 'no-repeat', width: '324px', height: '100%'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '1.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>MIT BATTLECODE</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                \n\n                    </ Row>\n                </div>\n        )\n    }\n}\n\nexport default SoftwareEngineeringMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject0.js",["277","278","279","280","281","282"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MusicAndDigitalSignalProcessingProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://www.shareicon.net/data/256x256/2016/08/19/817292_music_512x512.png) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>PEDAL PI</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color: '#556270', textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>For the accelerated postbac program necessary to be admitted to grad school, all students had to make a project on anything as long as approved by the professor. Having a deep, strong passion for guitar and audio effects, I built and then programmed my own guitar effects pedal using a Raspberry Pi Zero. I ended up making it a multi-effects pedal with delay, a phaser, a flanger, and pitch shifter by attempting to digitally mimic how these effects work from an analog standpoint.  </p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button  style={{fontSize: '1.45em', color: '#ee8d8d', backgroundColor: '#556270', paddingLeft: '2px', paddingRight: '2px', border: 'solid #0cf2ad 2px'}} colored>\n                                                <a style={{color: '#ee8d8d', backgroundColor: '#556270'}} href='https://github.com/PatRademacher/PedalPi' target='_blank'>View on GitHub</a>\n                                            </Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n        </div>\n        )\n    }\n}\n\nexport default MusicAndDigitalSignalProcessingProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Databases/DatabasesMain.js",["283","284","285","286","287","288","289","290"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport {Row, Col} from 'react-bootstrap';\n\nclass DatabasesMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    yeahYeah = () => {\n        this.setState({idk: 'yea yea yea'})\n    }\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Row>\n                                <Col xs={12} sm={12} md={12} lg={12} xl={12} >\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(0)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}> </CardTitle>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center', width: '324px', height: '100%', background: 'url(https://free-icon-rainbow.com/i/icon_05411/icon_054110_256.jpg) center', backgroundRepeat: 'no-repeat'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '1.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>TESLA DATABASE</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                \n\n                    </ Row>\n                </div>\n        )\n    }\n}\n\nexport default DatabasesMain;",["291","292"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/main.js",["293"],"import React from 'react';\nimport LandingPage from './landingpage';\nimport AboutMe from './aboutMe';\nimport Contact from './contact';\nimport Projects from './projects';\nimport Resume from './resume';\nimport TestingPage from './testingpage';\nimport { Switch, Route } from 'react-router-dom';\n\n\nconst Main = () => (\n        <Switch>\n            <Route exact path=\"/\" component ={LandingPage} />\n            <Route path=\"/aboutme\" component={AboutMe} />\n            <Route path=\"/resume\" component={Resume} />\n            <Route path=\"/projects\" component={TestingPage} />\n            <Route path=\"/contact\" component={Contact} />\n        </Switch>\n)\n\nexport default Main;",["294","295"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/resume.js",["296"],"import React from 'react';\nimport samplePDF from './reactResume.pdf';\nimport backgroundVid from './backgroundVideo.mp4'\nimport { Document, Page, pdfjs } from \"react-pdf\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nexport default function Resume() {\n  return (\n    <div style={{justifyContent: 'center', width: '100%'}}>\n    <video className='videoTagResume' autoPlay loop muted>\n    <source src={backgroundVid} type='video/mp4' />\n    </video>\n    <div className = 'separatorTwo' />\n    <div style={{justifyContent: 'center', display: 'flex'}}>\n    \n\n        <button\n         style={{color: 'rgb(0, 157, 234)', backgroundColor: '#0cf2ad', border: 'solid white 2px', fontFamily: \"'Fredoka One'\", padding: '3px 3px', fontSize: '1.4em'}}>\n           <a style={{color: 'rgb(0, 57, 134)', backgroundColor: '#0cf2ad'}} href={samplePDF} target=\"_blank\">CLICK HERE TO DOWNLOAD PDF</a></button>\n    </div>\n    <div className = 'separatorTwo' />\n\n    <div style={{justifyContent: 'center', display: 'flex'}}>\n\n    <Document className=\"resume-center\" file={samplePDF}>\n      <Page  pageNumber={1} />\n    </Document>\n    \n    </div>\n    </div>\n    \n  );\n}","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject0.js",["297","298","299","300","301"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject1.js",["302","303","304","305","306","307"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport {Row, Col} from 'react-bootstrap';\n\nclass ArtificialIntelligenceProject1 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\" >\n                    <div className = \"separator\" />\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', height: '32vh', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        <div style={{justifyContent: 'center', margin: 'auto', width: '100%'}}>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh', justifyContent: 'center'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh', justifyContent: 'center', margin: 'auto', position: 'relative'}}>♕</Col>\n                                                </Row>\n                                            </div>\n                                        </CardTitle>\n                                                                                <div className = 'separatorTwo' />\n\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>8 QUEENS SOLVER</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorTwo' />\n                                        <p style={{color: '#556270', textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>This program starts with eight queens randomly disbursed across a chessboard. Using a genetic algorithm, this program will eventually find a solution to place all eight queens in their own row and column.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button  style={{fontSize: '1.45em', color: '#ee8d8d', backgroundColor: '#556270', paddingLeft: '2px', paddingRight: '2px', border: 'solid #0cf2ad 2px'}} colored>\n                                                <a style={{color: '#ee8d8d', backgroundColor: '#556270'}} href='https://github.com/PatRademacher/AI-8-Queens' target='_blank'>View on GitHub</a>\n                                            </Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default ArtificialIntelligenceProject1;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/InternetworkingProtocols/InternetworkingProtocolsMain.js",["308","309","310","311","312","313","314","315"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport {Row, Col} from 'react-bootstrap';\n\nclass InternetworkingProtocolsMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Row>\n                                <Col xs={12} sm={12} md={12} lg={12} xl={12} >\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(0)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}> </CardTitle>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center', background: 'url(https://cdn.iconscout.com/icon/free/png-256/chat-2639493-2187526.png) center', backgroundRepeat: 'no-repeat', width: '324px', height: '100%'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '1.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>PAT CHAT</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                \n\n                    </ Row>\n                </div>\n            \n        )\n    }\n}\n\nexport default InternetworkingProtocolsMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FunctionalProgramming/FunctionalProgrammingMain.js",["316","317","318","319","320","321","322","323","324"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport {Row, Col} from 'react-bootstrap';\n\nclass FunctionalProgrammingMain extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Row>\n                                <Col xs={12} sm={12} md={12} lg={12} xl={12} >\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(0)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}> </CardTitle>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center', background: 'url(https://www.pozirk.com/wp-content/uploads/2016/05/sudoku256x256.png) center', backgroundRepeat: 'no-repeat', width: '324px', height: '100%'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '1.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>SUDOKU SOLVER</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                \n\n                    </ Row>\n                </div>\n        )\n    }\n}\n\nexport default FunctionalProgrammingMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FunctionalProgramming/FunctionalProgrammingProject0.js",["325","326","327","328","329","330"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass FunctionalProgrammingProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://www.pozirk.com/wp-content/uploads/2016/05/sudoku256x256.png) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>SUDOKU SOLVER</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color: '#556270', textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>Like other classes, students were given complete freedom for final projects in the functional programming course I took. Of course, the main requirement was to use a functional programming language. Using Haskell, I ended up creating a Sudoku puzzle solver after finding enjoyment in similar projects from AI.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button  style={{fontSize: '1.45em', color: '#ee8d8d', backgroundColor: '#556270', paddingLeft: '2px', paddingRight: '2px', border: 'solid #0cf2ad 2px'}} colored>\n                                                <a style={{color: '#ee8d8d', backgroundColor: '#556270'}} href='https://github.com/PatRademacher/AI-8-Queens' target='_blank'>View on GitHub</a>\n                                            </Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n        </div>\n        )\n    }\n}\n\nexport default FunctionalProgrammingProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/FrontEndWebDevelopment/FrontEndWebDevelopmentProject0.js",["331","332","333","334","335","336"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationProject2.js",["337","338","339","340"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass NumericalComputationProject2 extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://img.pngio.com/headphones-icon-headphones-png-256_256.png) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>EUPHONOMIMESIS</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorTwo' />\n                                        <p style={{textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button style={{fontSize: '1.45em'}} colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n                    </ Grid>\n                </div>\n        )\n    }\n}\n\nexport default NumericalComputationProject2;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceMain.js",["341","342","343","344","345","346","347","348","349","350","351","352","353","354"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport Paper from '@material-ui/core/Paper';\n//import { Tabs } from '@material-ui/core';\n//import Tab from '@material-ui/core/Tab';\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Row, Col} from 'react-bootstrap';\n\nclass ArtificialIntelligenceMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    yeahYeah = () => {\n        this.setState({idk: 'yea yea yea'})\n    }\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Row>\n                                <Col xs={12} sm={12} md={12} lg={4} xl={4} >\n                                    <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(0)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                            <div style={{justifyContent: 'center', margin: 'auto', width: '100%'}}>\n                                                <Row style={{border: 'solid #0cf2ad 4px', fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: '#0cf2ad', justifyContent: 'center', margin: 'auto', flexWrap: 'nowrap'}}>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>1</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>8</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>6</Col>\n                                                </Row>\n                                                <Row style={{border: 'solid #0cf2ad 4px', fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: '#0cf2ad', justifyContent: 'center', margin: 'auto', flexWrap: 'nowrap'}}>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>&nbsp;</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>2</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>3</Col>\n                                                </Row>\n                                                <Row style={{border: 'solid #0cf2ad 4px', fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: '#0cf2ad', justifyContent: 'center', margin: 'auto', flexWrap:'nowrap'}}>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>5</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>4</Col>\n                                                    <Col xs={4} style={{fontSize: '47.8px', border: 'solid white 1px', textAlign: 'center', margin: 'auto'}}>7</Col>\n                                                </Row>\n                                            </div>   \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center',  justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative', alignSelf: 'flex-end'}}>8 PUZZLE SOLVER</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                <Col xs={12} sm={12} md={12} lg={4} xl={4} >\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(1)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                            <div style={{display: 'block', justifyContent: 'center', margin: 'auto', width: '100%', textAlign: 'center'}}>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh', justifyContent: 'center'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}>♕</Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                </Row>\n                                                <Row style={{fontFamily: \"'Fredoka One'\", backgroundColor: 'black', color: 'black', justifyContent: 'center', textAlign: 'center', margin: 'auto'}}>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh'}}></Col>\n                                                    <Col xs={1} style={{fontSize: '1.03em', width: '.5vw', textAlign: 'center', color: '#0cf2ad', height: '4vh', justifyContent: 'center', margin: 'auto', position: 'relative'}}>♕</Col>\n                                                </Row>\n                                            </div>   \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center',  justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative', alignSelf: 'flex-end'}}>8 QUEENS SOLVER</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                <Col xs={12} sm={12} md={12} lg={4} xl={4}>\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(2)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}> </CardTitle>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center', width: '324px', height: '100%', background: 'url(https://img.pngio.com/headphones-icon-headphones-png-256_256.png) center', backgroundRepeat: 'no-repeat'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '1.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>EUPHONOMIMESIS</p>\n                                    </Card>\n                                </Col>\n                                <div className='separator' />\n\n                    </ Row>\n                </div>\n        )\n    }\n}\nexport default ArtificialIntelligenceMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ArtificialIntelligence/ArtificialIntelligenceProject2.js",["355","356","357","358","359","360","361","362"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport {Row, Col} from 'react-bootstrap';\n\nclass ArtificialIntelligenceProject2 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\" >\n            <div className = \"separator\" />\n            <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n            <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://img.pngio.com/headphones-icon-headphones-png-256_256.png) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>EUPHONOMIMESIS</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorTwo' />\n                                        <p style={{color: '#556270', textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>This project uses a library of audio clips in their original form from the time domain as well as their respective form in frequency domain, derived from applying a Fast Fourier Transform. Initialized by randomly selecting a single audio clip from the library and setting it as the ‘goal’, the program then aims to recreate the goal by combining the remaining library samples using genetic algorithm. The project’s name stems from euphonic (“pleasant sounding”) and mimesis (“imitation of the real”). Created with two other students, our interest and drive for creating this project resulted from our dual interest in AI/ML algorithms and DSP techniques for audio. </p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button  style={{fontSize: '1.45em', color: '#ee8d8d', backgroundColor: '#556270', paddingLeft: '2px', paddingRight: '2px', border: 'solid #0cf2ad 2px'}} colored>\n                                                <a style={{color: '#ee8d8d', backgroundColor: '#556270'}} href='https://github.com/charboltron/euphonomimesis' target='_blank'>View on GitHub</a>\n                                            </Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n        </div>\n        )\n    }\n}\n\nexport default ArtificialIntelligenceProject2;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningProject2.js",["363","364","365","366","367","368"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MachineLearningProject2 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://is1-ssl.mzstatic.com/image/thumb/Purple114/v4/d5/5a/3a/d55a3a88-fb32-88c5-cba6-24120d5b8cdf/source/256x256bb.jpg) center', borderRadius: '100%', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>NBA LONGEVITY PREDICTOR</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color: '#556270', textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>As a member of a group with three other students, our project was formed by recreating another research project that attempts to predict the total number of games played for NBA Draft picks during their first five years in the league. The information for each player comes from their draft data, college statistics, and biometric data and is then applied to three ML algorithms to make predictions: Logisitic Regression, SVM, and Random Forest.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button  style={{fontSize: '1.45em', color: '#ee8d8d', backgroundColor: '#556270', paddingLeft: '2px', paddingRight: '2px', border: 'solid #0cf2ad 2px'}} colored>\n                                                <a style={{color: '#ee8d8d', backgroundColor: '#556270'}} href='https://github.com/charboltron/NBA_Machine_Learning' target='_blank'>View on GitHub</a>\n                                            </Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n        </div>\n        )\n    }\n}\n\nexport default MachineLearningProject2;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/InternetworkingProtocols/InternetworkingProtocolsProject0.js",["369","370","371","372","373","374"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass InternetworkingProtocolsProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://cdn.iconscout.com/icon/free/png-256/chat-2639493-2187526.png) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>PAT CHAT</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color: '#556270', textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>With the task of building a messaging application with a programming language of our choice, another student and I created PAT CHAT. We decided to go with Python, which then called for integrating its respective threading and socket modules. The end result was a successful chatroom application with features such as users creating their own username and password, the ability to create and delete their own chatrooms and chatroom themes, and communication with other app users if on the same local network.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button  style={{fontSize: '1.45em', color: '#ee8d8d', backgroundColor: '#556270', paddingLeft: '2px', paddingRight: '2px', border: 'solid #0cf2ad 2px'}} colored>\n                                                <a style={{color: '#ee8d8d', backgroundColor: '#556270'}} href='https://github.com/tlan2/instant_message_chatroom' target='_blank'>View on GitHub</a>\n                                            </Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n        </div>\n        )\n    }\n}\n\nexport default InternetworkingProtocolsProject0;",["375","376"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingProject1.js",["377","378","379","380","381","382"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass MusicAndDigitalSignalProcessingProject1 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://findicons.com/files/icons/2315/default_icon/256/media_synth.png) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>PURE DATA SYNTHESIZER</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color: '#556270', textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>Along with two other students, our group used a program called Pure Data to create our own digital synthesizer. In addition to basic synthesizer functionalities, we also implemented a phaser, an effects loop, and an arpeggiator. We also used various display features such as coloring and blinking for buttons and knobs from the synthesizeral as additional means to demonstrate how these features worked.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button  style={{fontSize: '1.45em', color: '#ee8d8d', backgroundColor: '#556270', paddingLeft: '2px', paddingRight: '2px', border: 'solid #0cf2ad 2px'}} colored>\n                                                <a style={{color: '#ee8d8d', backgroundColor: '#556270'}} href='https://github.com/PatRademacher/AI-8-Queens' target='_blank'>View on GitHub</a>\n                                            </Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n        </div>\n        )\n    }\n}\n\nexport default MusicAndDigitalSignalProcessingProject1;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/SoftwareEngineering/SoftwareEngineeringProject0.js",["383","384","385","386","387","388"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass SoftwareEngineeringProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separatorThree\" />\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{background: 'url(https://avatars2.githubusercontent.com/u/352744?s=280&v=4) center', backgroundRepeat: 'no-repeat', height: '40vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>MIT BATTLECODE</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color: '#556270', textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>Every year, MIT hosts a competition called Battlecode where programmers are given the autonomy to code their own strategies and tactics (but within a confined framework) in hope to beat opponents in this intricate, team-versus-team game. Our project was to enter the competition and lasted throughout majority of the term where progress and updates stemmed from an AGILE approach of a software engineer.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button  style={{fontSize: '1.45em', color: '#ee8d8d', backgroundColor: '#556270', paddingLeft: '2px', paddingRight: '2px', border: 'solid #0cf2ad 2px'}} colored>\n                                                <a style={{color: '#ee8d8d', backgroundColor: '#556270'}} href='https://github.com/PatRademacher/AI-8-Queens' target='_blank'>View on GitHub</a>\n                                            </Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n        </div>\n        )\n    }\n}\n\nexport default SoftwareEngineeringProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/OpenSource/OpenSourceMain.js",["389","390","391","392","393","394","395","396","397"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport {Row, Col} from 'react-bootstrap';\n\nclass OpenSourceMain extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Row>\n                                <Col xs={12} sm={12} md={12} lg={12} xl={12} >\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(0)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}> </CardTitle>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center', background: 'url(https://icon-library.com/images/business_444.png) center', backgroundRepeat: 'no-repeat', width: '324px', height: '100%'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '1.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '.92em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>UNCLE BUCK FINANCE CALCULATOR</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                \n\n                    </ Row>\n                </div>\n        )\n    }\n}\n\nexport default OpenSourceMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/NumericalComputation/NumericalComputationMain.js",["398","399","400","401","402","403","404","405"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Databases/DatabasesProject0.js",["406","407","408","409","410","411","412","413"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport {Row, Col} from 'react-bootstrap';\n\nclass DatabasesProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                     <div className = \"separatorThree\" />\n                    <Row style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Col xs={2} sm={2} md={2} lg={3} xl={3} />\n                                <Col xs={8} sm={8} md={8} lg={6} xl={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://free-icon-rainbow.com/i/icon_05411/icon_054110_256.jpg) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>TESLA DATABASE</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color: '#556270', textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>The final project for the Databases course I took was to simply create a database with another student. It was our job to select a topic for creating the database as long as the amount of data was adequate and practical. We chose the electric car company, Tesla, as our focal point, using data we scraped from the Tesla website and categorized them into meaningful tables with categories such as service centers, supercharger locations, car models, and more.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button  style={{fontSize: '1.45em', color: '#ee8d8d', backgroundColor: '#556270', paddingLeft: '2px', paddingRight: '2px', border: 'solid #0cf2ad 2px'}} colored>\n                                                <a style={{color: '#ee8d8d', backgroundColor: '#556270'}} href='https://github.com/PatRademacher/final_database_project' target='_blank'>View on GitHub</a>\n                                            </Button> \n                                        </CardActions>\n                                    </Card>\n                                </Col>\n                                <Col xs={2} sm={2} md={2} lg={3} xl={3} />\n            </ Row>\n        </div>\n        )\n    }\n}\n\nexport default DatabasesProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MusicAndDigitalSignalProcessing/MusicAndDigitalSignalProcessingMain.js",["414","415","416","417","418","419","420","421","422"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport {Row, Col} from 'react-bootstrap';\n\nclass MusicAndDigitalSignalProcessingMain extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Row style={{alignItems: 'center'}}>\n                                <Col xs={12} sm={12} md={12} lg={6} xl={6} >\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(0)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}> </CardTitle>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center', background: 'url(https://www.shareicon.net/data/256x256/2016/08/19/817292_music_512x512.png) center', backgroundRepeat: 'no-repeat', width: '324px', height: '100%'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '1.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>PEDAL PI</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                <Col xs={12} sm={12} md={12} lg={6} xl={6}>\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '61.3vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(1)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}> </CardTitle>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center', background: 'url(https://findicons.com/files/icons/2315/default_icon/256/media_synth.png) center', backgroundRepeat: 'no-repeat', width: '324px', height: '100%'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '1.9vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>PURE DATA SYNTHESIZER</p>\n                                    </Card>\n                                    <div className='separator' />\n\n                                </Col>\n\n                    </ Row>\n                </div>\n        )\n    }\n}\n\nexport default MusicAndDigitalSignalProcessingMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/OpenSource/OpenSourceProject0.js",["423","424","425","426","427","428"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass OpenSourceProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://icon-library.com/images/business_444.png) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>UNCLE BUCK FINANCE CALCULATOR</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color: '#556270', textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>The final project for Open Source was completed by a group of me and three other students. Our task was to create an open source tool that was useful. It also had to make sense in regard to it being open source. We decided to build a website in React, which we called Uncle Buck: an open source tool with the purpose of assisting someone from a financial standpoint. We built our own financial calculator that returned helpful information based on users' answers to personal finance questions. Additionally, we provided articles pulled from an API that also had the objective of providing financial insight and advice.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button  style={{fontSize: '1.45em', color: '#ee8d8d', backgroundColor: '#556270', paddingLeft: '2px', paddingRight: '2px', border: 'solid #0cf2ad 2px'}} colored>\n                                                <a style={{color: '#ee8d8d', backgroundColor: '#556270'}} href='https://github.com/PatRademacher/updatedUncleBuckProject' target='_blank'>View on GitHub</a>\n                                            </Button>  \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n            </div>\n        )\n    }\n}\n\nexport default OpenSourceProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/Fractals/FractalsMain.js",["429","430","431","432","433","434","435","436","437"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport {Row, Col} from 'react-bootstrap';\n\nclass FractalsMain extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Row>\n                                <Col xs={12} sm={12} md={12} lg={12} xl={12} >\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(0)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}> </CardTitle>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center', background: 'url(https://jbum.com/pixmagic/xor12-24-48.jpg) center', backgroundRepeat: 'no-repeat', width: '324px', height: '100%'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '1.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>FRACTALS JOURNAL</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                \n\n                    </ Row>\n                </div>\n        )\n    }\n}\nexport default FractalsMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projects.js",["438","439","440","441","442","443","444","445","446","447","448","449","450","451","452"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport Paper from '@material-ui/core/Paper';\n//import { Tabs } from '@material-ui/core';\n//import Tab from '@material-ui/core/Tab';\nimport teslaLogo from './Tesla-01.png';\nimport sudokuVector from './sudokuVector.jpg';\nimport MLProject1PDF from './rademacher_ml_code1_writeup.pdf';\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport pic0 from \"./aiMedium.jpg\";\nimport pic1 from \"./machinelearningMedium.jpg\";\nimport pic2 from \"./databasesMedium.jpg\";\nimport pic3 from \"./internetMedium.jpg\";\nimport pic4 from \"./puredataMedium.jpg\";\nimport pic5 from \"./softwareengineeringMedium.jpg\";\nimport pic6 from \"./functionalprogrammingMedium.png\";\nimport pic7 from \"./frontendMedium.jpg\";\nimport pic8 from \"./fractalMedium.jpg\";\nimport pic9 from \"./algorithmsMedium.jpg\";\nimport pic10 from \"./theorycompMedium.jpg\";\nimport pic11 from \"./quantumMedium.jpg\";\nimport pic12 from \"./opensourceMedium.jpg\";\nimport pic13 from \"./numcompMedium.jpg\";\nimport pic14 from \"./modelingMedium.jpg\";\n\n\n\n\n\nlet TabContainer = (props) => {\nreturn (\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n      {props.children}\n    </Typography>\n  );\n}\n\n\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  label: {\n    color: \"magenta\"\n  },\n  indicator: {\n    bottom: \"none\",\n    backgroundColor: \"none !important\",\n    color: \"none !important\",\n    borderColor: 'none',\n    outline: 'none !important',\n    opacity: '1'\n  }\n});\n\nclass Projects extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = { value: null,\n                       rowIndex: 0, \n                       topRow: \"primary\", \n                       bottomRow: \"none\", \n                       middleTopRow: \"none\", \n                       middleBottomRow: \"none\", \n                       bottomBottomRow: \"none\",\n                       tabValues: [1, 1, 1, 1, 1],\n                       show: [false, false, false],\n                       currentlyShowing: false};\n    }\n\n    \n\n\n    handleChange = (event, value) => {\n        //this.setState({value: value });\n        console.log('hot dogs')\n        console.log(this.state.show)\n\n      };\n\n    handleChangeTop = (event, newValue) => {\n       this.setState({value: newValue});\n       this.setState({topRow: \"primary\", \n                      middleTopRow: \"none\", \n                      middleBottomRow: \"none\", \n                      bottomRow: \"none\", \n                      bottomBottomRow: \"none\",\n                      show: [false, false, false],\n                     // currentlyShowing: false,\n                      tabValues: [newValue, null, null, null, null],\n                      //rowIndex: \"0\"\n                      });\n        console.log(this.state.topRow);\n        console.log(this.state.middleTopRow);\n        console.log(this.state.middleBottomRow);\n        console.log(this.state.bottomRow);\n        console.log(this.state.bottomBottomRow);\n        console.log(this.state.tabValues)\n        console.log(this.state.show)\n        console.log(this.state.rowIndex)\n    }\n\n    handleChangeMiddleTop = (event, newValue) => {\n        this.setState({value: newValue});\n        this.setState({middleTopRow: \"primary\", \n                       middleBottomRow: \"none\", \n                       topRow: \"none\", \n                       bottomRow: \"none\", \n                       bottomBottomRow: \"none\",\n                       //show: [false, false, false],\n                       //currentlyShowing: false,\n                       tabValues: [null, newValue, null, null, null]\n                    });\n                    console.log(this.state.topRow);\n                    console.log(this.state.middleTopRow);\n                    console.log(this.state.middleBottomRow);\n                    console.log(this.state.bottomRow);\n                    console.log(this.state.bottomBottomRow);\n                    console.log(this.state.tabValues)\n                    console.log(this.state.show)\n                    console.log(this.state.rowIndex)\n    }\n\n    handleChangeMiddleBottom = (event, newValue) => {\n        this.setState({value: newValue});\n        this.setState({middleBottomRow: \"primary\", \n                       middleTopRow: \"none\", \n                       topRow: \"none\", \n                       bottomRow: \"none\", \n                       bottomBottomRow: \"none\",\n                       //show: [false, false, false],\n                       //currentlyShowing: false,\n                       tabValues: [null, null, newValue, null, null],\n                       rowIndex: 0\n                    });\n                    console.log(this.state.topRow);\n                    console.log(this.state.middleTopRow);\n                    console.log(this.state.middleBottomRow);\n                    console.log(this.state.bottomRow);\n                    console.log(this.state.bottomBottomRow);\n                    console.log(this.state.tabValues);\n                    console.log(this.state.show)\n                    console.log(this.state.rowIndex)\n    }\n\n    handleChangeBottom = (event, newValue) => {\n        this.setState({value: newValue});\n        this.setState({bottomRow: \"primary\", \n                       topRow: \"none\", \n                       middleTopRow: \"none\", \n                       middleBottomRow: \"none\", \n                       bottomBottomRow: \"none\",\n                       //show: [false, false, false],\n                       //currentlyShowing: false,\n                       tabValues: [null, null, null, newValue, null],\n                       rowIndex: \"0\"\n                    });\n                    console.log(this.state.topRow);\n                    console.log(this.state.middleTopRow);\n                    console.log(this.state.middleBottomRow);\n                    console.log(this.state.bottomRow);\n                    console.log(this.state.bottomBottomRow);\n                    console.log(this.state.tabValues) \n                    console.log(this.state.show)\n        console.log(this.state.rowIndex)                  \n    }\n\n    handleChangeBottomBottom = (event, newValue) => {\n        this.setState({value: newValue});\n        this.setState({bottomBottomRow: \"primary\", \n                       topRow: \"none\", \n                       middleTopRow: \"none\", \n                       middleBottomRow: \"none\", \n                       bottomRow: \"none\",\n                       //show: [false, false, false],\n                       //currentlyShowing: false,\n                       tabValues: [null, null, null, null, newValue],\n                       rowIndex: \"0\"\n                    });\n                    console.log(this.state.topRow);\n                    console.log(this.state.middleTopRow);\n                    console.log(this.state.middleBottomRow);\n                    console.log(this.state.bottomRow);\n                    console.log(this.state.bottomBottomRow);\n                    console.log(this.state.tabValues);\n                    console.log(this.state.show)\n                    console.log(this.state.rowIndex)\n    }\n    \n    handleShowCard = (event, rowIndy, numberOfItems) => {\n        let boolean = null;\n        if (this.state.currentlyShowing !== true){\n            boolean = true;\n            let cards = [];\n            for (let i = 0; i < numberOfItems; i++){\n                if (i === rowIndy){\n                    cards.push(true);\n                }\n                else{\n                    cards.push(false);\n                }\n            }\n        \n            this.setState({show: {...cards}});\n            this.setState({rowIndex: rowIndy});\n        }\n        else{\n            boolean = false;\n            let cards = [];\n            for (let i = 0; i < numberOfItems; i++){\n                cards.push(false);\n            }\n            this.setState({show: {...cards}, rowIndex: rowIndy})\n        }\n\n        this.setState({currentlyShowing: boolean})\n        console.log(this.state.currentlyShowing);\n    }\n\n    toggleCategories(){\n        if (this.state.value === 0 && this.state.topRow === \"primary\" && (this.state.rowIndex === 0)){\n            let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic0})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Puzzle Solver Using a*</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Queens Solver Using Genetic Algorithm</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Euphonomimesis</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '400px', height: '400px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Puzzle Solver Using a*</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n                </div>\n            )\n        }\n\n        else if(this.state.value === 0 && this.state.topRow === \"primary\" && this.state.rowIndex === 1){\n            let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic0})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: 'infinite', animationFillMode: 'none', animationPlayState: 'running'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Puzzle Solver Using a*</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Queens Solver Using Genetic Algorithm</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Euphonomimesis</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>\n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Queens Solver Using Genetic Algorithm</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n                </div>\n            )\n        }\n\n        else if (this.state.value === 0 && this.state.topRow === \"primary\" && this.state.rowIndex === 2){\n            let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic0})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Puzzle Solver Using a*</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>8 Queens Solver Using Genetic Algorithm</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                 <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Euphonomimesis</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Euphonomimesis</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 1 && this.state.topRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic1})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>MNIST Handwritten Data Recognition</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>MNIST Handwritten Digit Recognition</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 1 && this.state.topRow === \"primary\" && this.state.rowIndex === 1){\n        let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic1})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>MNIST Handwritten Data Recognition</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 1 && this.state.topRow === \"primary\" && this.state.rowIndex === 2){\n        let numOfItems = 3;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic1})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>MNIST Handwritten Data Recognition</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 2, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 2 && this.state.topRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic2})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>K Means and Fuzzy C Means Clustering</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>NBA Draft Pick - Longevity Predictor</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n\n    \n    else if(this.state.value === 0 && this.state.middleTopRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic3})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PAT CHAT</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>PAT CHAT</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 1 && this.state.middleTopRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 2;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic4})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={2} />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pedal Pi</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pure Data Synthesizer</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                                <div className=\"separator\" />\n                                <Cell col={2} />\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pedal Pi</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n    else if(this.state.value === 1 && this.state.middleTopRow === \"primary\" && this.state.rowIndex === 1){\n        let numOfItems = 2;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic4})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={2} />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://www.8puzzle.com/images/8_puzzle_start_state_a.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pedal Pi</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>   \n                                    </Card> \n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pure Data Synthesizer</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText></CardText>    \n                                    </Card>\n                                </Cell>\n                                <div className=\"separator\" />\n                                <Cell col={2} />\n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 1, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Pure Data Synthesizer</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n\n    else if(this.state.value === 2 && this.state.middleTopRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic5})`, height:'1500px'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Battlecode</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Battle Code</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    } \n\n    else if(this.state.value === 0 && this.state.middleBottomRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic6})`, height:'1500px', backgroundRepeat: 'no-repeat', backgroundPosition: 'center center'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Sudoku Solver</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Sudoku Solver</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n            \n    else if(this.state.value === 1 && this.state.middleBottomRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic7})`, height:'1500px', backgroundRepeat: 'no-repeat', backgroundPosition: 'center center'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Batter on Deck</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Batter on Deck</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }                    \n    \n    else if(this.state.value === 2 && this.state.middleBottomRow === \"primary\" && this.state.rowIndex === 0){\n        let numOfItems = 1;\n            return(\n                <div className = \"projects-grid\" style={{backgroundImage: `url(${pic8})`, height:'1500px', backgroundRepeat: 'no-repeat', backgroundPosition: 'center center'}}>\n                    <div className = \"separator\" />\n                    <Grid>\n                        {!this.state.show[this.state.rowIndex] ?\n                            <> \n                                <Cell col={4} />\n                                <div className = \"separator\" />\n                                <Cell col={4}>\n                                    <Card shadow={5} style={{minWidth: '450', margin: 'auto', justifyContent: 'center'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://lh3.googleusercontent.com/proxy/B-z3Yav4LMQqQq1PiDPfxx5s8IGjmeV5KKyU_spHlI8YtdgYgsdDYDDnvnX1h-q0kQNr1mtAGlv9ydsCaEy1uasNdQo54P765FwpmgEUmhOiILMr7Q) center / cover'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Batter on Deck</CardTitle>\n                                    </Card>\n                                </Cell>\n                                <div className = \"separator\" />\n                                <Cell col={4} /> \n                            </> \n                        : \n                            <>\n                                <Cell col={1} />\n                                <Cell col={10} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#4ecdc4'}} onClick={(e) => this.handleShowCard(e, 0, numOfItems)} >\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', height: '276px', background: 'url(https://user-images.strikinglycdn.com/res/hrscywv4p/image/upload/c_limit,fl_lossy,h_1440,w_720,f_auto,q_auto/876278/540440_888913.png) center / cover', backgroundColor: '#4ecdc4'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '20px', justifyContent: 'center'}}></CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}>Batter on Deck</CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <CardText style={{textAlign: 'center'}}>The puzzle solver is a classic and a pretty neat AI demonstration which shows how an agent can solve a \"sliding puzzle\" like the one below. This project compares several different algorithms including Best First Search and A* with three different heuristics: Manhattan distance, misplaced tiles, and row/column misplacement. I first wrote the solver for the puzzle with 8 pieces and later added a script to solve the larger 15 piece puzzle, where a sample solution is shown on the right.</CardText>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button colored>View on GitHub</Button> \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={1} />\n                            </>\n                        }\n                    </Grid>\n            </div>\n        )\n    }\n                        }\n                        \n                                \n                            \n                           \n                        \n\n\n    render() {\n          const { classes } = this.props;\n          const { value } = this.state;\n        return(\n            \n            <div style={{backgroundColor: '#eee'}} >\n                \n                <Tabs  indicatorColor={this.state.topRow} classes={{indicator: classes.indicator}} variant=\"fullWidth\" value={this.state.tabValues[0]} onChange={this.handleChangeTop} ripple>\n                    <Tab className=\"tabz\" label=\"Artificial Intelligence\"></Tab>\n                    <Tab className=\"tabz\" label=\"Machine Learning\"></Tab>\n                    <Tab className=\"tabz\" label=\"Databases\"></Tab>\n                </Tabs>\n               \n                \n                <Tabs variant=\"fullWidth\" indicatorColor={this.state.middleTopRow} classes={{indicator: classes.indicator}} value={this.state.tabValues[1]} onChange={this.handleChangeMiddleTop} ripple>\n                    <Tab className=\"tabz\" label=\"Internetworking Protocols\"></Tab>\n                    <Tab className=\"tabz\" label=\"Music and Digital Signal Processing\"></Tab>\n                    <Tab className=\"tabz\" label=\"Software Engineering\"></Tab>\n                </Tabs>\n\n                <Tabs variant=\"fullWidth\" indicatorColor={this.state.middleBottomRow} classes={{indicator: classes.indicator}} value={this.state.tabValues[2]} onChange={this.handleChangeMiddleBottom} ripple>\n                    <Tab className=\"tabz\" label=\"Functional Programming\"></Tab>\n                    <Tab className=\"tabz\" label=\"Front-End Web Development\"></Tab>\n                    <Tab className=\"tabz\" label=\"Fractals\"></Tab>\n                </Tabs>\n\n                <Tabs variant=\"fullWidth\" indicatorColor={this.state.bottomRow} classes={{indicator: classes.indicator}} value={this.state.tabValues[3]} onChange={this.handleChangeBottom} ripple>\n                    <Tab className=\"tabz\" label=\"Algorithms\"></Tab>\n                    <Tab className=\"tabz\" label=\"Theory of Computation\"></Tab>\n                    <Tab className=\"tabz\" label=\"Quantum Computing\"></Tab>\n                </Tabs>\n\n                <Tabs variant=\"fullWidth\" indicatorColor={this.state.bottomBottomRow} classes={{indicator: classes.label}} value={this.state.tabValues[4]} onChange={this.handleChangeBottomBottom} ripple>\n                    <Tab className=\"tabz\" label=\"Open Source\"></Tab>\n                    <Tab className=\"tabz\" label=\"Numerical Computation\" ></Tab>\n                    <Tab className=\"tabz\" label=\"Modeling and Simulation in Python\" ></Tab>\n                </Tabs>\n\n                <Grid className=\"projects-grid\">\n                    <Cell col={12}>\n                        <div className=\"content\">{this.toggleCategories()}</div>\n                    </Cell>\n                </Grid>\n            </div>\n\n        )\n    }\n}\n\nProjects.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n\nexport default withStyles(styles)(Projects);\n",["453","454"],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/MachineLearning/MachineLearningMain.js",["455","456","457","458","459","460","461","462","463","464","465","466","467","468"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport Paper from '@material-ui/core/Paper';\n//import { Tabs } from '@material-ui/core';\n//import Tab from '@material-ui/core/Tab';\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Row, Col} from 'react-bootstrap';\n\nclass MachineLearningMain extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={idk: 'wha wha wha'}\n    }\n\n    yeahYeah = () => {\n        this.setState({idk: 'yea yea yea'})\n    }\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Row>\n                                <Col xs={12} sm={12} md={12} lg={4} xl={4} >\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(0)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}> </CardTitle>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center', width: '324px', height: '100%', background: 'url(https://www.researchgate.net/profile/Yuling_Jiao2/publication/330617733/figure/fig1/AS:718798407602176@1548386303228/Real-samples-and-generated-samples-obtained-by-VGrow-KL-on-MNIST_Q320.jpg) center', backgroundRepeat: 'no-repeat'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '1.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>MNIST</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                <Col xs={12} sm={12} md={12} lg={4} xl={4} >\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(1)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}> </CardTitle>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center', width: '324px', height: '100%', background: 'url(https://www.researchgate.net/profile/Lubna_Emad/publication/331991626/figure/fig3/AS:740691793678336@1553606093170/The-initialization-stage_Q320.jpg) center', backgroundRepeat: 'no-repeat'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '1.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>K MEANS & FUZZY C MEANS</p>\n                                    </Card>\n                                    \n                                    <div className='separator' />\n                                </Col>\n                                <Col xs={12} sm={12} md={12} lg={4} xl={4}>\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '324px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(2)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}> </CardTitle>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center', width: '324px', height: '100%', background: 'url(https://is1-ssl.mzstatic.com/image/thumb/Purple114/v4/d5/5a/3a/d55a3a88-fb32-88c5-cba6-24120d5b8cdf/source/256x256bb.jpg) center', backgroundRepeat: 'no-repeat'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '1.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>NBA LONGEVITY PREDICTOR</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                \n\n                    </ Row>\n                </div>\n        )\n    }\n}\nexport default MachineLearningMain;","/Users/patrickrademacher/REACT/react-portfolio/src/index.js",["469"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <App />\n        </BrowserRouter>\n   , \n    document.getElementById('root'));\n",["470","471"],"/Users/patrickrademacher/REACT/react-portfolio/src/registerServiceWorker.js",[],"/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ModelingAndSimulationInPython/ModelingAndSimulationInPythonMain.js",["472","473","474","475","476","477","478","479","480"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\nimport {Row, Col} from 'react-bootstrap';\n\nclass ModelingAndSimulationInPythonMain extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Row>\n                                <Col xs={12} sm={12} md={12} lg={12} xl={12} >\n                                <Card shadow={5} style={{margin: 'auto', justifyContent: 'center', backgroundColor: 'white', opacity: '.8', height: '59vh', width: '354px', border: 'solid black 3px'}} onClick={() => this.props.changeShowing(0)}>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center'}}> </CardTitle>\n                                <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', justifyContent: 'center', background: 'url(https://www.researchgate.net/profile/Tijana_Ivancevic/publication/1743757/figure/fig7/AS:279360897601538@1443616236130/Benard-cells-showing-a-typical-vortex-of-a-rolling-air-with-a-warm-air-rising-in-a-ring_Q320.jpg) center', backgroundRepeat: 'no-repeat', width: '324px', height: '100%'}}></CardTitle> \n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center'}}>\n                                              \n                                        </CardTitle>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '1.3vh', justifyContent: 'center'}}></CardTitle>\n                                        \n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.32em', fontFamily: \"'Fredoka One'\", position: 'relative'}}>LORENZ MUSIC GENERATOR</p>\n                                    </Card>\n                                    <div className='separator' />\n                                </Col>\n                                \n\n                    </ Row>\n                </div>\n        )\n    }\n}\n\nexport default ModelingAndSimulationInPythonMain;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ModelingAndSimulationInPython/ModelingAndSimulationInPythonProject0.js",["481","482","483","484","485","486"],"import React, {Component} from 'react';\nimport { Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText, CardMedia} from 'react-mdl';\n\n\nclass ModelingAndSimulationInPythonProject0 extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className = \"projects-grid\">\n                    <div className = \"separator\" />\n                    <Grid style={{animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}>\n                    <Cell col={3} />\n                                <Cell col={6} style={{justifyContent: 'center'}}>\n                                    <Card shadow={5} style={{width: '100%', margin: 'auto', justifyContent: 'center', backgroundColor: '#eee'}} onClick={this.props.changeShowing}>\n                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', padding: '20px', justifyContent: 'center'}}></CardTitle> \n                                        <CardTitle style={{background: 'url(https://www.researchgate.net/profile/Tijana_Ivancevic/publication/1743757/figure/fig7/AS:279360897601538@1443616236130/Benard-cells-showing-a-typical-vortex-of-a-rolling-air-with-a-warm-air-rising-in-a-ring_Q320.jpg) center', backgroundRepeat: 'no-repeat', height: '32vh', width: '100%', color: 'black', margin: 'auto', textAlign: 'center', animationName: 'stretch', animationDuration: '1.5s', animationTimingFunction: 'ease-out', animationDelay: '0', animationDirection: 'alternate',animationIterationCount: '1', animationFillMode: 'none', animationPlayState: 'running'}}> \n                                        \n                                        </CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color:  '#556270', backgroundColor: '#ee8d8d', border: 'solid #0cf2ad 2px', width: '100%', opacity: '1.0 !important', margin: 'auto', textAlign: 'center', justifyContent: 'center', fontSize: '1.82em', fontFamily: \"'Fredoka One'\", position: 'relative', padding: '2px'}}>LORENZ MUSIC GENERATOR</p>                                        <CardTitle style={{color: 'black', margin: 'auto', textAlign: 'center', width: '276px', padding: '1px', justifyContent: 'center'}}></CardTitle>\n                                        <div className ='separatorThree' />\n                                        <p style={{color: '#556270', textAlign: 'center', width: '70%', justifyContent: 'center', margin: 'auto'}}>Probably my most unique and interesting project resulted from Modeling and Simulation in Python. The project guidelines were basically to create a simulation of our choice. Instead of approaching the project with simulating the outcome of a future event (as most others did), I decided to simulate different versions of Lorenz Systems built off audio data from music. Essentially, the audio data provided means for the graphing points in the Lorenz Systems in a chronological manner (for example, data from the beginning of the song aligned with the beginning points for the Lorenz). To put it altogether, the final product consisted of an animation video of the Lorenz being built with the according song playing in the background, almost acting like a visualizer or music video.</p>\n                                        <CardActions className = 'cardButtons'>\n                                            <Button  style={{fontSize: '1.45em', color: '#ee8d8d', backgroundColor: '#556270', paddingLeft: '2px', paddingRight: '2px', border: 'solid #0cf2ad 2px'}} colored>\n                                                <a style={{color: '#ee8d8d', backgroundColor: '#556270'}} href='https://github.com/PatRademacher/AI-8-Queens' target='_blank'>View on GitHub</a>\n                                            </Button>  \n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <Cell col={3} />\n            </ Grid>\n        </div>\n        )\n    }\n}\n\nexport default ModelingAndSimulationInPythonProject0;","/Users/patrickrademacher/REACT/react-portfolio/src/components/projectPages/ProjectPage/ProjectPageMain.js",["487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504"],{"ruleId":"505","severity":1,"message":"506","line":8,"column":8,"nodeType":"507","messageId":"508","endLine":8,"endColumn":16},{"ruleId":"505","severity":1,"message":"509","line":21,"column":13,"nodeType":"507","messageId":"508","endLine":21,"endColumn":22},{"ruleId":"505","severity":1,"message":"510","line":4,"column":24,"nodeType":"507","messageId":"508","endLine":4,"endColumn":30},{"ruleId":"505","severity":1,"message":"511","line":4,"column":32,"nodeType":"507","messageId":"508","endLine":4,"endColumn":38},{"ruleId":"512","severity":1,"message":"513","line":29,"column":11,"nodeType":"514","endLine":29,"endColumn":55},{"ruleId":"512","severity":1,"message":"513","line":92,"column":9,"nodeType":"514","endLine":92,"endColumn":108},{"ruleId":"505","severity":1,"message":"515","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":14},{"ruleId":"505","severity":1,"message":"516","line":2,"column":16,"nodeType":"507","messageId":"508","endLine":2,"endColumn":20},{"ruleId":"505","severity":1,"message":"517","line":3,"column":8,"nodeType":"507","messageId":"508","endLine":3,"endColumn":11},{"ruleId":"505","severity":1,"message":"518","line":4,"column":8,"nodeType":"507","messageId":"508","endLine":4,"endColumn":17},{"ruleId":"512","severity":1,"message":"513","line":43,"column":29,"nodeType":"514","endLine":43,"endColumn":161},{"ruleId":"519","replacedBy":"520"},{"ruleId":"521","replacedBy":"522"},{"ruleId":"505","severity":1,"message":"518","line":4,"column":8,"nodeType":"507","messageId":"508","endLine":4,"endColumn":17},{"ruleId":"505","severity":1,"message":"523","line":54,"column":9,"nodeType":"507","messageId":"508","endLine":54,"endColumn":19},{"ruleId":"519","replacedBy":"524"},{"ruleId":"521","replacedBy":"525"},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"534","severity":1,"message":"535","line":31,"column":153,"nodeType":"536","endLine":31,"endColumn":168},{"ruleId":"519","replacedBy":"537"},{"ruleId":"521","replacedBy":"538"},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"534","severity":1,"message":"535","line":30,"column":169,"nodeType":"536","endLine":30,"endColumn":184},{"ruleId":"519","replacedBy":"539"},{"ruleId":"521","replacedBy":"540"},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"534","severity":1,"message":"535","line":30,"column":155,"nodeType":"536","endLine":30,"endColumn":170},{"ruleId":"505","severity":1,"message":"515","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":14},{"ruleId":"505","severity":1,"message":"516","line":2,"column":16,"nodeType":"507","messageId":"508","endLine":2,"endColumn":20},{"ruleId":"505","severity":1,"message":"541","line":2,"column":39,"nodeType":"507","messageId":"508","endLine":2,"endColumn":50},{"ruleId":"505","severity":1,"message":"542","line":2,"column":52,"nodeType":"507","messageId":"508","endLine":2,"endColumn":58},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"534","severity":1,"message":"535","line":29,"column":159,"nodeType":"536","endLine":29,"endColumn":174},{"ruleId":"505","severity":1,"message":"515","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":14},{"ruleId":"505","severity":1,"message":"516","line":2,"column":16,"nodeType":"507","messageId":"508","endLine":2,"endColumn":20},{"ruleId":"505","severity":1,"message":"541","line":2,"column":39,"nodeType":"507","messageId":"508","endLine":2,"endColumn":50},{"ruleId":"505","severity":1,"message":"542","line":2,"column":52,"nodeType":"507","messageId":"508","endLine":2,"endColumn":58},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"534","severity":1,"message":"535","line":30,"column":155,"nodeType":"536","endLine":30,"endColumn":170},{"ruleId":"505","severity":1,"message":"515","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":14},{"ruleId":"505","severity":1,"message":"516","line":2,"column":16,"nodeType":"507","messageId":"508","endLine":2,"endColumn":20},{"ruleId":"505","severity":1,"message":"541","line":2,"column":39,"nodeType":"507","messageId":"508","endLine":2,"endColumn":50},{"ruleId":"505","severity":1,"message":"542","line":2,"column":52,"nodeType":"507","messageId":"508","endLine":2,"endColumn":58},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"519","replacedBy":"543"},{"ruleId":"521","replacedBy":"544"},{"ruleId":"505","severity":1,"message":"545","line":5,"column":8,"nodeType":"507","messageId":"508","endLine":5,"endColumn":16},{"ruleId":"519","replacedBy":"546"},{"ruleId":"521","replacedBy":"547"},{"ruleId":"534","severity":1,"message":"535","line":19,"column":95,"nodeType":"536","endLine":19,"endColumn":110},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"534","severity":1,"message":"535","line":46,"column":159,"nodeType":"536","endLine":46,"endColumn":174},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"534","severity":1,"message":"535","line":111,"column":159,"nodeType":"536","endLine":111,"endColumn":174},{"ruleId":"505","severity":1,"message":"515","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":14},{"ruleId":"505","severity":1,"message":"516","line":2,"column":16,"nodeType":"507","messageId":"508","endLine":2,"endColumn":20},{"ruleId":"505","severity":1,"message":"541","line":2,"column":39,"nodeType":"507","messageId":"508","endLine":2,"endColumn":50},{"ruleId":"505","severity":1,"message":"542","line":2,"column":52,"nodeType":"507","messageId":"508","endLine":2,"endColumn":58},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"505","severity":1,"message":"515","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":14},{"ruleId":"505","severity":1,"message":"516","line":2,"column":16,"nodeType":"507","messageId":"508","endLine":2,"endColumn":20},{"ruleId":"505","severity":1,"message":"541","line":2,"column":39,"nodeType":"507","messageId":"508","endLine":2,"endColumn":50},{"ruleId":"505","severity":1,"message":"542","line":2,"column":52,"nodeType":"507","messageId":"508","endLine":2,"endColumn":58},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"534","severity":1,"message":"535","line":30,"column":159,"nodeType":"536","endLine":30,"endColumn":174},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"534","severity":1,"message":"535","line":30,"column":152,"nodeType":"536","endLine":30,"endColumn":167},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"505","severity":1,"message":"515","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":14},{"ruleId":"505","severity":1,"message":"516","line":2,"column":16,"nodeType":"507","messageId":"508","endLine":2,"endColumn":20},{"ruleId":"505","severity":1,"message":"541","line":2,"column":39,"nodeType":"507","messageId":"508","endLine":2,"endColumn":50},{"ruleId":"505","severity":1,"message":"542","line":2,"column":52,"nodeType":"507","messageId":"508","endLine":2,"endColumn":58},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"505","severity":1,"message":"548","line":3,"column":8,"nodeType":"507","messageId":"508","endLine":3,"endColumn":13},{"ruleId":"505","severity":1,"message":"549","line":6,"column":8,"nodeType":"507","messageId":"508","endLine":6,"endColumn":17},{"ruleId":"505","severity":1,"message":"550","line":7,"column":10,"nodeType":"507","messageId":"508","endLine":7,"endColumn":20},{"ruleId":"505","severity":1,"message":"551","line":8,"column":8,"nodeType":"507","messageId":"508","endLine":8,"endColumn":12},{"ruleId":"505","severity":1,"message":"552","line":9,"column":8,"nodeType":"507","messageId":"508","endLine":9,"endColumn":11},{"ruleId":"505","severity":1,"message":"553","line":10,"column":8,"nodeType":"507","messageId":"508","endLine":10,"endColumn":18},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"505","severity":1,"message":"554","line":3,"column":9,"nodeType":"507","messageId":"508","endLine":3,"endColumn":12},{"ruleId":"505","severity":1,"message":"555","line":3,"column":14,"nodeType":"507","messageId":"508","endLine":3,"endColumn":17},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"534","severity":1,"message":"535","line":29,"column":160,"nodeType":"536","endLine":29,"endColumn":175},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"534","severity":1,"message":"535","line":30,"column":166,"nodeType":"536","endLine":30,"endColumn":181},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"534","severity":1,"message":"535","line":30,"column":164,"nodeType":"536","endLine":30,"endColumn":179},{"ruleId":"519","replacedBy":"556"},{"ruleId":"521","replacedBy":"557"},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"534","severity":1,"message":"535","line":30,"column":159,"nodeType":"536","endLine":30,"endColumn":174},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"534","severity":1,"message":"535","line":29,"column":159,"nodeType":"536","endLine":29,"endColumn":174},{"ruleId":"505","severity":1,"message":"515","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":14},{"ruleId":"505","severity":1,"message":"516","line":2,"column":16,"nodeType":"507","messageId":"508","endLine":2,"endColumn":20},{"ruleId":"505","severity":1,"message":"541","line":2,"column":39,"nodeType":"507","messageId":"508","endLine":2,"endColumn":50},{"ruleId":"505","severity":1,"message":"542","line":2,"column":52,"nodeType":"507","messageId":"508","endLine":2,"endColumn":58},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"505","severity":1,"message":"515","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":14},{"ruleId":"505","severity":1,"message":"516","line":2,"column":16,"nodeType":"507","messageId":"508","endLine":2,"endColumn":20},{"ruleId":"505","severity":1,"message":"541","line":2,"column":39,"nodeType":"507","messageId":"508","endLine":2,"endColumn":50},{"ruleId":"505","severity":1,"message":"542","line":2,"column":52,"nodeType":"507","messageId":"508","endLine":2,"endColumn":58},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"505","severity":1,"message":"515","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":14},{"ruleId":"505","severity":1,"message":"516","line":2,"column":16,"nodeType":"507","messageId":"508","endLine":2,"endColumn":20},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"534","severity":1,"message":"535","line":30,"column":170,"nodeType":"536","endLine":30,"endColumn":185},{"ruleId":"505","severity":1,"message":"515","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":14},{"ruleId":"505","severity":1,"message":"516","line":2,"column":16,"nodeType":"507","messageId":"508","endLine":2,"endColumn":20},{"ruleId":"505","severity":1,"message":"541","line":2,"column":39,"nodeType":"507","messageId":"508","endLine":2,"endColumn":50},{"ruleId":"505","severity":1,"message":"542","line":2,"column":52,"nodeType":"507","messageId":"508","endLine":2,"endColumn":58},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"534","severity":1,"message":"535","line":29,"column":171,"nodeType":"536","endLine":29,"endColumn":186},{"ruleId":"505","severity":1,"message":"515","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":14},{"ruleId":"505","severity":1,"message":"516","line":2,"column":16,"nodeType":"507","messageId":"508","endLine":2,"endColumn":20},{"ruleId":"505","severity":1,"message":"541","line":2,"column":39,"nodeType":"507","messageId":"508","endLine":2,"endColumn":50},{"ruleId":"505","severity":1,"message":"542","line":2,"column":52,"nodeType":"507","messageId":"508","endLine":2,"endColumn":58},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"505","severity":1,"message":"548","line":3,"column":8,"nodeType":"507","messageId":"508","endLine":3,"endColumn":13},{"ruleId":"505","severity":1,"message":"558","line":6,"column":8,"nodeType":"507","messageId":"508","endLine":6,"endColumn":17},{"ruleId":"505","severity":1,"message":"559","line":7,"column":8,"nodeType":"507","messageId":"508","endLine":7,"endColumn":20},{"ruleId":"505","severity":1,"message":"560","line":8,"column":8,"nodeType":"507","messageId":"508","endLine":8,"endColumn":21},{"ruleId":"505","severity":1,"message":"561","line":23,"column":8,"nodeType":"507","messageId":"508","endLine":23,"endColumn":12},{"ruleId":"505","severity":1,"message":"562","line":24,"column":8,"nodeType":"507","messageId":"508","endLine":24,"endColumn":13},{"ruleId":"505","severity":1,"message":"563","line":25,"column":8,"nodeType":"507","messageId":"508","endLine":25,"endColumn":13},{"ruleId":"505","severity":1,"message":"564","line":26,"column":8,"nodeType":"507","messageId":"508","endLine":26,"endColumn":13},{"ruleId":"505","severity":1,"message":"565","line":27,"column":8,"nodeType":"507","messageId":"508","endLine":27,"endColumn":13},{"ruleId":"505","severity":1,"message":"566","line":28,"column":8,"nodeType":"507","messageId":"508","endLine":28,"endColumn":13},{"ruleId":"505","severity":1,"message":"567","line":34,"column":5,"nodeType":"507","messageId":"508","endLine":34,"endColumn":17},{"ruleId":"505","severity":1,"message":"568","line":991,"column":19,"nodeType":"507","messageId":"508","endLine":991,"endColumn":24},{"ruleId":"519","replacedBy":"569"},{"ruleId":"521","replacedBy":"570"},{"ruleId":"505","severity":1,"message":"515","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":14},{"ruleId":"505","severity":1,"message":"516","line":2,"column":16,"nodeType":"507","messageId":"508","endLine":2,"endColumn":20},{"ruleId":"505","severity":1,"message":"541","line":2,"column":39,"nodeType":"507","messageId":"508","endLine":2,"endColumn":50},{"ruleId":"505","severity":1,"message":"542","line":2,"column":52,"nodeType":"507","messageId":"508","endLine":2,"endColumn":58},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"505","severity":1,"message":"548","line":3,"column":8,"nodeType":"507","messageId":"508","endLine":3,"endColumn":13},{"ruleId":"505","severity":1,"message":"549","line":6,"column":8,"nodeType":"507","messageId":"508","endLine":6,"endColumn":17},{"ruleId":"505","severity":1,"message":"550","line":7,"column":10,"nodeType":"507","messageId":"508","endLine":7,"endColumn":20},{"ruleId":"505","severity":1,"message":"551","line":8,"column":8,"nodeType":"507","messageId":"508","endLine":8,"endColumn":12},{"ruleId":"505","severity":1,"message":"552","line":9,"column":8,"nodeType":"507","messageId":"508","endLine":9,"endColumn":11},{"ruleId":"505","severity":1,"message":"553","line":10,"column":8,"nodeType":"507","messageId":"508","endLine":10,"endColumn":18},{"ruleId":"505","severity":1,"message":"571","line":5,"column":8,"nodeType":"507","messageId":"508","endLine":5,"endColumn":29},{"ruleId":"519","replacedBy":"572"},{"ruleId":"521","replacedBy":"573"},{"ruleId":"505","severity":1,"message":"515","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":14},{"ruleId":"505","severity":1,"message":"516","line":2,"column":16,"nodeType":"507","messageId":"508","endLine":2,"endColumn":20},{"ruleId":"505","severity":1,"message":"541","line":2,"column":39,"nodeType":"507","messageId":"508","endLine":2,"endColumn":50},{"ruleId":"505","severity":1,"message":"542","line":2,"column":52,"nodeType":"507","messageId":"508","endLine":2,"endColumn":58},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"530","severity":1,"message":"531","line":7,"column":5,"nodeType":"532","messageId":"533","endLine":9,"endColumn":6},{"ruleId":"534","severity":1,"message":"535","line":30,"column":159,"nodeType":"536","endLine":30,"endColumn":174},{"ruleId":"505","severity":1,"message":"515","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":14},{"ruleId":"505","severity":1,"message":"516","line":2,"column":16,"nodeType":"507","messageId":"508","endLine":2,"endColumn":20},{"ruleId":"505","severity":1,"message":"574","line":2,"column":22,"nodeType":"507","messageId":"508","endLine":2,"endColumn":26},{"ruleId":"505","severity":1,"message":"575","line":2,"column":28,"nodeType":"507","messageId":"508","endLine":2,"endColumn":37},{"ruleId":"505","severity":1,"message":"541","line":2,"column":39,"nodeType":"507","messageId":"508","endLine":2,"endColumn":50},{"ruleId":"505","severity":1,"message":"542","line":2,"column":52,"nodeType":"507","messageId":"508","endLine":2,"endColumn":58},{"ruleId":"505","severity":1,"message":"526","line":2,"column":60,"nodeType":"507","messageId":"508","endLine":2,"endColumn":68},{"ruleId":"505","severity":1,"message":"527","line":2,"column":70,"nodeType":"507","messageId":"508","endLine":2,"endColumn":80},{"ruleId":"505","severity":1,"message":"528","line":2,"column":82,"nodeType":"507","messageId":"508","endLine":2,"endColumn":90},{"ruleId":"505","severity":1,"message":"529","line":2,"column":92,"nodeType":"507","messageId":"508","endLine":2,"endColumn":101},{"ruleId":"505","severity":1,"message":"548","line":3,"column":8,"nodeType":"507","messageId":"508","endLine":3,"endColumn":13},{"ruleId":"505","severity":1,"message":"549","line":6,"column":8,"nodeType":"507","messageId":"508","endLine":6,"endColumn":17},{"ruleId":"505","severity":1,"message":"550","line":7,"column":10,"nodeType":"507","messageId":"508","endLine":7,"endColumn":20},{"ruleId":"505","severity":1,"message":"551","line":8,"column":8,"nodeType":"507","messageId":"508","endLine":8,"endColumn":12},{"ruleId":"505","severity":1,"message":"552","line":9,"column":8,"nodeType":"507","messageId":"508","endLine":9,"endColumn":11},{"ruleId":"505","severity":1,"message":"553","line":10,"column":8,"nodeType":"507","messageId":"508","endLine":10,"endColumn":18},{"ruleId":"505","severity":1,"message":"554","line":11,"column":9,"nodeType":"507","messageId":"508","endLine":11,"endColumn":12},{"ruleId":"505","severity":1,"message":"555","line":11,"column":14,"nodeType":"507","messageId":"508","endLine":11,"endColumn":17},"no-unused-vars","'testIcon' is defined but never used.","Identifier","unusedVar","'navHeight' is assigned a value but never used.","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Grid' is defined but never used.","'Cell' is defined but never used.","'pic' is defined but never used.","'Container' is defined but never used.","no-native-reassign",["576"],"no-negated-in-lhs",["577"],"'Navigation' is defined but never used.",["576"],["577"],"'CardMenu' is defined but never used.","'IconButton' is defined but never used.","'CardText' is defined but never used.","'CardMedia' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["576"],["577"],["576"],["577"],"'CardActions' is defined but never used.","'Button' is defined but never used.",["576"],["577"],"'Projects' is defined but never used.",["576"],["577"],"'Paper' is defined but never used.","'PropTypes' is defined but never used.","'withStyles' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Typography' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.",["576"],["577"],"'teslaLogo' is defined but never used.","'sudokuVector' is defined but never used.","'MLProject1PDF' is defined but never used.","'pic9' is defined but never used.","'pic10' is defined but never used.","'pic11' is defined but never used.","'pic12' is defined but never used.","'pic13' is defined but never used.","'pic14' is defined but never used.","'TabContainer' is assigned a value but never used.","'value' is assigned a value but never used.",["576"],["577"],"'registerServiceWorker' is defined but never used.",["576"],["577"],"'Card' is defined but never used.","'CardTitle' is defined but never used.","no-global-assign","no-unsafe-negation"]